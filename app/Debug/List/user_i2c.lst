##############################################################################
#                                                                            #
# IAR 8051 C/C++ Compiler V7.20H/W32                   29/Jun/2018  19:55:13 #
# Copyright 2004-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Core               =  plain                                             #
#    Code model         =  near                                              #
#    Data model         =  large                                             #
#    Calling convention =  extended stack reentrant                          #
#    Constant location  =  code                                              #
#    Extended stack     =  enabled                                           #
#    Dptr setup         =  1,16                                              #
#    Source file        =  I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\user\user_i2c.c #
#    Command line       =  -I E:\software\8051\INC\ -I                       #
#                          E:\software\8051\INC\CLIB\ -I                     #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\COMMON\ -I      #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\INC\ -I         #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\config\ -I      #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\api\ -I         #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\fm\ -I          #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\fat\ -I         #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\display\ -I     #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\display\theme_d #
#                          efault\ -I I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073 #
#                          A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\disp #
#                          lay\led\ -I I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC07 #
#                          3A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\dis #
#                          play\lcd\ -I I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC0 #
#                          73A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\ta #
#                          sk\ -I I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”Ó #
#                          Ã©_AX1071_xxxxxxxx_20180629_Merlin_1\app\user\    #
#                          -I I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_A #
#                          X1071_xxxxxxxx_20180629_Merlin_1\app\mem\ -I      #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\module\ -I      #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\key\ -I         #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\startmusic\ -I  #
#                          I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\spi\ -D         #
#                          AX107X_TAG -lC I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18B #
#                          C073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\ #
#                          Debug\List\ -o I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18B #
#                          C073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\ #
#                          Debug\Obj\ -e -z9 --core=plain --dptr=16,1        #
#                          --data_model=large --code_model=near              #
#                          --calling_convention=ext_stack_reentrant          #
#                          --place_constants=code --nr_virtual_regs 20       #
#                          --extended_stack I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\1 #
#                          8BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\ap #
#                          p\user\user_i2c.c                                 #
#    List file          =  I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\Debug\List\user #
#                          _i2c.lst                                          #
#    Object file        =  I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                          71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                          i2c.r51                                           #
#                                                                            #
#                                                                            #
##############################################################################

I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\user\user_i2c.c
      1          #include "include.h"

   \                                 In segment SFR_AN, at 0x88
   \   unsigned char volatile __sfr SDCON0
   \                     SDCON0:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0x90
   \   unsigned char volatile __sfr P1
   \                     P1:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xbb
   \   unsigned char volatile __sfr P1DIR
   \                     P1DIR:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xbe
   \   unsigned char volatile __sfr P4DIR
   \                     P4DIR:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xc0
   \   unsigned char volatile __sfr P4
   \                     P4:
   \   000000                DS 1
      2          
      3          #if USE_I2C_SD_MUX
      4          

   \                                 In segment BIT_N, align 1
      5          __no_init bool __bit volatile soft_int;
   \                     soft_int:
   \   000000                DS 1
      6          
      7          //≤Ÿ◊˜i2c«∞“™µ˜”√enter∫Ø ˝
      8          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
      9          void i2c_sd_mux_enter(void)
   \                     i2c_sd_mux_enter:
     10          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     11          	if(sd_chk.group == DEVICE_SDMMC)
   \   000000   90....       MOV     DPTR,#sd_chk
   \   000003   E0           MOVX    A,@DPTR
   \   000004   7015         JNZ     ??i2c_sd_mux_enter_0
     12          	{
     13          		if(device_is_online(DEVICE_SDMMC)
     14          #if FM_CLK_IO_MUX_SDCLK
     15          		        && (fm_ctl.fm_mode_flag == 0)
     16          #endif
     17          		  )
   \   000006                ; Setup parameters for call to function device_is_online
   \   000006   7900         MOV     R1,#0x0
   \   000008   12....       LCALL   device_is_online
   \   00000B   500B         JNC     ??i2c_sd_mux_enter_1
     18          		{
     19          			soft_int = IE_SINT;
   \   00000D   A2A8         MOV     C,0xa8.0
   \   00000F   92..         MOV     soft_int,C
     20          			IE_SINT = 0;
   \   000011   C2A8         CLR     0xa8.0
     21          			sd_stop(1);
   \   000013                ; Setup parameters for call to function sd_stop
   \   000013   D2F0         SETB    B.0
   \   000015   12....       LCALL   sd_stop
     22          		}
     23          		SDCON0 = 0;
   \                     ??i2c_sd_mux_enter_1:
   \   000018   758800       MOV     0x88,#0x0
     24          	}
     25          }
   \                     ??i2c_sd_mux_enter_0:
   \   00001B   22           RET
     26          
     27          //≤Ÿ◊˜ÕÍi2c∫Û“™µ˜”√exit∫Ø ˝
     28          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
     29          void i2c_sd_mux_exit(void)
   \                     i2c_sd_mux_exit:
     30          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     31          	if(sd_chk.group == DEVICE_SDMMC)
   \   000000   90....       MOV     DPTR,#sd_chk
   \   000003   E0           MOVX    A,@DPTR
   \   000004   7017         JNZ     ??i2c_sd_mux_exit_0
     32          	{
     33          		if(device_is_online(DEVICE_SDMMC)
     34          #if FM_CLK_IO_MUX_SDCLK
     35          		        && (fm_ctl.fm_mode_flag == 0)
     36          #endif
     37          		  )
   \   000006                ; Setup parameters for call to function device_is_online
   \   000006   7900         MOV     R1,#0x0
   \   000008   12....       LCALL   device_is_online
   \   00000B   500D         JNC     ??i2c_sd_mux_exit_1
     38          		{
     39          			sd_port_init(0);
   \   00000D                ; Setup parameters for call to function sd_port_init
   \   00000D   7900         MOV     R1,#0x0
   \   00000F   12....       LCALL   sd_port_init
     40          			SDCON0 = 1;
   \   000012   758801       MOV     0x88,#0x1
     41          			IE_SINT = soft_int;
   \   000015   A2..         MOV     C,soft_int
   \   000017   92A8         MOV     0xa8.0,C
   \   000019   22           RET
     42          		}
     43          		else
     44          		{
     45          			SDCON0 = 0;
   \                     ??i2c_sd_mux_exit_1:
   \   00001A   758800       MOV     0x88,#0x0
     46          		}
     47          	}
     48          #if (((FM_CLOCK == USE_SD_IO_32KHZ_CLK) || (FM_CLOCK == USE_SD_IO_12MHZ_CLK)) && (TASK_FM_EN))
     49          	if(fm_ctl.fm_mode_flag == 1)
     50          	{
     51          		SDCON0 |= (BIT(0) | BIT(1));        //IICÕ®–≈Ω· ¯ª÷∏¥SDCLK
     52          	}
     53          #endif
     54          }
   \                     ??i2c_sd_mux_exit_0:
   \   00001D   22           RET
     55          #endif
     56          
     57          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
     58          void i2c_port_init(void)
   \                     i2c_port_init:
     59          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     60          #if USE_I2C_SD_MUX
     61          	i2c_sd_mux_enter();
   \   000000                ; Setup parameters for call to function i2c_sd_mux_enter
   \   000000   12....       LCALL   i2c_sd_mux_enter
     62          #endif
     63          
     64          	/* ”Î∆’Õ®IOºÏ≤‚∏¥”√ ±£¨SCL…ËŒ™DIR_OUT */
     65          	I2C_SDA_PU |= BIT(I2C_SDA_PIN);
   \   000003   903014       MOV     DPTR,#0x3014
   \   000006   E0           MOVX    A,@DPTR
   \   000007   D2E3         SETB    0xE0 /* A   */.3
   \   000009   F0           MOVX    @DPTR,A
     66          	I2C_SCL_PU |= BIT(I2C_SCL_PIN);
   \   00000A   903011       MOV     DPTR,#0x3011
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   D2E7         SETB    0xE0 /* A   */.7
   \   000010   F0           MOVX    @DPTR,A
     67          	I2C_SCL_DIR &= ~BIT(I2C_SCL_PIN);
   \   000011   53BB7F       ANL     0xbb,#0x7f
     68          }
   \   000014   22           RET
     69          
     70          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
     71          void i2c_port_finish(void)
   \                     i2c_port_finish:
     72          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     73          	/* ”Î∆’Õ®IOºÏ≤‚∏¥”√ ±£¨SCL…ËŒ™DIR_IN */
     74          	I2C_SCL_PU |= BIT(I2C_SCL_PIN);
   \   000000   903011       MOV     DPTR,#0x3011
   \   000003   E0           MOVX    A,@DPTR
   \   000004   D2E7         SETB    0xE0 /* A   */.7
   \   000006   F0           MOVX    @DPTR,A
     75          	I2C_SCL_DIR |= BIT(I2C_SCL_PIN);
   \   000007   43BB80       ORL     0xbb,#0x80
     76          
     77          #if USE_I2C_SD_MUX
     78          	i2c_sd_mux_exit();
   \   00000A                ; Setup parameters for call to function i2c_sd_mux_exit
   \   00000A   12....       LCALL   i2c_sd_mux_exit
     79          #endif
     80          }
   \   00000D   22           RET
     81          
     82          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
     83          void i2c_sda_dirout(void)
   \                     i2c_sda_dirout:
     84          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     85          	I2C_SDA_DIR &= ~BIT(I2C_SDA_PIN);
   \   000000   53BEF7       ANL     0xbe,#0xf7
     86          }
   \   000003   22           RET
     87          
     88          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
     89          void i2c_sda_dirin(void)
   \                     i2c_sda_dirin:
     90          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     91          	I2C_SDA_DIR |= BIT(I2C_SDA_PIN);
   \   000000   43BE08       ORL     0xbe,#0x8
     92          }
   \   000003   22           RET
     93          
     94          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
     95          void i2c_scl_dirout(void)
   \                     i2c_scl_dirout:
     96          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     97          	I2C_SCL_DIR &= ~BIT(I2C_SCL_PIN);
   \   000000   53BB7F       ANL     0xbb,#0x7f
     98          }
   \   000003   22           RET
     99          
    100          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
    101          void i2c_sda_high(void)
   \                     i2c_sda_high:
    102          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    103          	I2C_SDA_PORT |= BIT(I2C_SDA_PIN);
   \   000000   D2C3         SETB    0xc0.3
    104          }
   \   000002   22           RET
    105          
    106          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
    107          void i2c_sda_low(void)
   \                     i2c_sda_low:
    108          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    109          	I2C_SDA_PORT &= ~BIT(I2C_SDA_PIN);
   \   000000   C2C3         CLR     0xc0.3
    110          }
   \   000002   22           RET
    111          
    112          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
    113          void i2c_scl_high(void)
   \                     i2c_scl_high:
    114          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    115          	I2C_SCL_PORT |= BIT(I2C_SCL_PIN);
   \   000000   D297         SETB    0x90.7
    116          }
   \   000002   22           RET
    117          
    118          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
    119          void i2c_scl_low(void)
   \                     i2c_scl_low:
    120          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    121          	I2C_SCL_PORT &= ~BIT(I2C_SCL_PIN);
   \   000000   C297         CLR     0x90.7
    122          }
   \   000002   22           RET
    123          
    124          /* ∑µªÿ÷µ±ÿ–ÎŒ™bool–Õ */
    125          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
    126          bool i2c_sda_read(void)
   \                     i2c_sda_read:
    127          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    128          	return (I2C_SDA_PORT & BIT(I2C_SDA_PIN)) ? 1 : 0;
   \   000000   A2C3         MOV     C,0xc0.3
   \   000002   22           RET
    129          }
    130          
    131          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
    132          void i2c_delay(void)
   \                     i2c_delay:
    133          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    134          #if FM_QN8035_EN
    135          	delay_nop(60);//¥ÀFM—” ±≤ª◊„∂¡≤ª¡À
    136          #elif FM_RDA5807_EN
    137          	delay_nop(30);//¥ÀFM—” ±≤ª◊„∂¡≤ª¡À
    138          #else
    139          	delay_nop(10);
   \   000000                ; Setup parameters for call to function delay_nop
   \   000000                REQUIRE ?Subroutine0
   \   000000                ; // Fall through to label ?Subroutine0

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   790A         MOV     R1,#0xa
   \   000002   12....       LCALL   delay_nop
   \   000005   22           RET
    140          #endif
    141          }
    142          
    143          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
    144          void i2c_start_mux(void)
   \                     i2c_start_mux:
    145          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    146          	i2c_port_init();
   \   000000                ; Setup parameters for call to function i2c_port_init
   \   000000   12....       LCALL   i2c_port_init
    147          	i2c_start();
   \   000003                ; Setup parameters for call to function i2c_start
   \   000003   12....       LCALL   i2c_start
    148          }
   \   000006   22           RET
    149          
    150          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
    151          void i2c_stop_mux(void)
   \                     i2c_stop_mux:
    152          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    153          	i2c_stop();
   \   000000                ; Setup parameters for call to function i2c_stop
   \   000000   12....       LCALL   i2c_stop
    154          	i2c_port_finish();
   \   000003                ; Setup parameters for call to function i2c_port_finish
   \   000003   12....       LCALL   i2c_port_finish
    155          }
   \   000006   22           RET
    156          
    157          #pragma location="I2C_CB_SEG"

   \                                 In segment I2C_CB_SEG, align 1, keep-with-next
    158          void i2c_delay_2(void)
   \                     i2c_delay_2:
    159          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    160          #if FM_QN8035_EN
    161          	delay_nop(60);//¥ÀFM—” ±≤ª◊„∂¡≤ª¡À
    162          #elif FM_RDA5807_EN
    163          	delay_nop(30);//¥ÀFM—” ±≤ª◊„∂¡≤ª¡À
    164          #else
    165          	delay_nop(10);
   \   000000                ; Setup parameters for call to function delay_nop
   \   000000   80..         SJMP    ?Subroutine0
    166          #endif
    167          }

   \                                 In segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IE0
   \                     _A_IE0:
   \   000000                DS 1

   Maximum stack usage in bytes:

     Function              EXT_STACK PSTACK XSTACK
     --------              --------- ------ ------
     i2c_delay                    0      0      0
       -> delay_nop               0      0      0
     i2c_delay_2                  0      0      0
       -> delay_nop               0      0      0
     i2c_port_finish              0      0      0
       -> i2c_sd_mux_exit         0      0      0
     i2c_port_init                0      0      0
       -> i2c_sd_mux_enter        0      0      0
     i2c_scl_dirout               0      0      0
     i2c_scl_high                 0      0      0
     i2c_scl_low                  0      0      0
     i2c_sd_mux_enter             0      0      0
       -> device_is_online        0      0      0
       -> sd_stop                 0      0      0
     i2c_sd_mux_exit              0      0      0
       -> device_is_online        0      0      0
       -> sd_port_init            0      0      0
     i2c_sda_dirin                0      0      0
     i2c_sda_dirout               0      0      0
     i2c_sda_high                 0      0      0
     i2c_sda_low                  0      0      0
     i2c_sda_read                 0      0      0
     i2c_start_mux                0      0      0
       -> i2c_port_init           0      0      0
       -> i2c_start               0      0      0
     i2c_stop_mux                 0      0      0
       -> i2c_stop                0      0      0
       -> i2c_port_finish         0      0      0


   Segment part sizes:

     Function/Label   Bytes
     --------------   -----
     SDCON0              1
     P1                  1
     P1DIR               1
     P4DIR               1
     P4                  1
     soft_int            1
     i2c_sd_mux_enter   28
     i2c_sd_mux_exit    30
     i2c_port_init      21
     i2c_port_finish    14
     i2c_sda_dirout      4
     i2c_sda_dirin       4
     i2c_scl_dirout      4
     i2c_sda_high        3
     i2c_sda_low         3
     i2c_scl_high        3
     i2c_scl_low         3
     i2c_sda_read        3
     i2c_delay           0
     ?Subroutine0        6
     i2c_start_mux       7
     i2c_stop_mux        7
     i2c_delay_2         2
     _A_IE0              1

 
   1 byte  in segment BIT_N
 142 bytes in segment I2C_CB_SEG
   6 bytes in segment SFR_AN
 
 142 bytes of CODE memory
   0 bytes of DATA memory (+ 6 bytes shared)
   1 byte  of BIT  memory

Errors: none
Warnings: none
