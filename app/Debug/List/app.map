################################################################################
#                                                                              #
#      IAR Universal Linker V4.60D/386                                         #
#                                                                              #
#           Link time     =  29/Jun/2018  19:55:15                             #
#           Target CPU    =  x51                                               #
#           List file     =  I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\List\app. #
#                            map                                               #
#           Output file 1 =  I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Exe\app.d #
#                            bg                                                #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#           Output file 2 =  I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Exe\app.a #
#                            51                                                #
#                            Format: intel-standard                            #
#           Command line  =  lib_ax107x.r51 -IE:\software\8051\CONFIG\         #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\adcke #
#                            y.r51                                             #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\api_r #
#                            tc.r51                                            #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\clock #
#                            .r51                                              #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\confi #
#                            g.r51                                             #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\dac.r #
#                            51                                                #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\devic #
#                            e.r51                                             #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\displ #
#                            ay.r51                                            #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\file_ #
#                            filter.r51                                        #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\led.r #
#                            51                                                #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\led_5 #
#                            c7s.r51                                           #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\led_7 #
#                            p7s.r51                                           #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\main. #
#                            r51                                               #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\mem.r #
#                            51                                                #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\mem_r #
#                            tcram.r51                                         #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\spi.r #
#                            51                                                #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\start #
#                            music.r51                                         #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task. #
#                            r51                                               #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_ #
#                            flash.r51                                         #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_ #
#                            idle.r51                                          #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_ #
#                            lowpower.r51                                      #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_ #
#                            music.r51                                         #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_ #
#                            poweroff.r51                                      #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_ #
#                            rtc.r51                                           #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_ #
#                            usbdev.r51                                        #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme #
#                            _aux.r51                                          #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme #
#                            _idle.r51                                         #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme #
#                            _music.r51                                        #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme #
#                            _poweroff.r51                                     #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme #
#                            _rtc.r51                                          #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme #
#                            _speaker.r51                                      #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme #
#                            _usbdev.r51                                       #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\usb_t #
#                            une.r51                                           #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            amux.r51                                          #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            fat.r51                                           #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            i2c.r51                                           #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            init.r51                                          #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            io.r51                                            #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            key.r51                                           #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            music.r51                                         #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            setting.r51                                       #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            spi.r51                                           #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            usb.r51                                           #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_ #
#                            usbdev.r51                                        #
#                            -o                                                #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\Exe\app.d #
#                            bg                                                #
#                            -Fdebug-intel-std -l                              #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\Debug\List\app. #
#                            map                                               #
#                            -xms -IE:\software\8051\LIB\                      #
#                            -II:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX #
#                            1071_xxxxxxxx_20180629_Merlin_1\app\              #
#                            -f                                                #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\lnk_base.xcl    #
#                            (-D_IDATA_START=0x6D -D_IDATA_END=0x94            #
#                            -D_PDATA_START=0xB2 -D_PDATA_END=0xFF             #
#                            -D_IXDATA_START=0x0500 -D_IXDATA_END=0x7FF        #
#                            -D_XDATA_START=_IXDATA_START                      #
#                            -D_XDATA_END=_IXDATA_END                          #
#                            -D_OTP_CODE_START=0x4000 -D_OTP_CODE_END=0x7FEF   #
#                            -D_NEAR_CODE_END=0x7FFF -D?REGISTER_BANK=0        #
#                            -D_REGISTER_BANK_START=0 -D_BREG_START=0x00       #
#                            -D_BREG_END=0x07 -D?VB=0x20 -D?PBANK_NUMBER=0     #
#                            -D?PBANK=0xBF -D?ESP=9B                           #
#                            -Z(BIT)BREG=_BREG_START-_BREG_END                 #
#                            -Z(BIT)BIT_N=30-FF -Z(DATA)BDATA_N=0x26-0x2F      #
#                            -Z(DATA)SYS_BDATA=0x26-0x2F                       #
#                            -Z(DATA)REGISTERS+8=_REGISTER_BANK_START          #
#                            -Z(DATA)VREG+_NR_OF_VIRTUAL_REGISTERS=30-7F       #
#                            -Z(DATA)PSP,XSP=40-7F -Z(DATA)DOVERLAY=40-7F      #
#                            -Z(DATA)DATA_I,DATA_Z,DATA_N=47-4F,6D-7F          #
#                            -Z(DATA)SYS_DATA=44-46                            #
#                            -Z(DATA)DECODER_DATA=50-5B                        #
#                            -Z(DATA)MP3_DATA=5C-6C -Z(DATA)WAV_DATA=15E-160   #
#                            -Z(DATA)USBDEV_DATA=25C-26C                       #
#                            -Z(DATA)BT_DATA=35C-36C                           #
#                            -U(IDATA)20-7F=(DATA)20-7F                        #
#                            -Z(IDATA)IDATA_I,IDATA_Z,IDATA_N=_IDATA_START-_ID #
#                            ATA_END                                           #
#                            -Z(IDATA)ISTACK+_IDATA_STACK_SIZE#20-_IDATA_END   #
#                            -Z(IDATA)IOVERLAY=20-FF -Z(CODE)INTVEC=4000       #
#                            -Z(CODE)OTP_RESET,OTP_VECTOR=0x4080               #
#                            -Z(CODE)DAC_ASM=_OTP_CODE_START-_OTP_CODE_END     #
#                            -Z(CODE)KEY_VOICE_TBL=_OTP_CODE_START-_OTP_CODE_E #
#                            ND                                                #
#                            -Z(CODE)CSTART,CLK_SEG,I2C_CB_SEG,AMUX_SEG,AUADC_ #
#                            SEG,NEAR_CODE,CODE_C,CODE_N=_OTP_CODE_START-_OTP_ #
#                            CODE_END                                          #
#                            -Z(CODE)BIT_ID,BDATA_ID,DATA_ID,IDATA_ID,IXDATA_I #
#                            D,PDATA_ID,XDATA_ID=_OTP_CODE_START-_OTP_CODE_END #
#                            -Z(CODE)RCODE,USB_FIX,USB_FIX_ASM=_OTP_CODE_START #
#                            -_OTP_CODE_END                                    #
#                            -Z(CODE)SYS_DELAY,SYS_INIT,INTERRUPT,SET_SYS_CLK_ #
#                            SEG=_OTP_CODE_START-_OTP_CODE_END                 #
#                            -Z(CODE)DAC_INIT,DAC_INIT_CONST,DAC_SEG=_OTP_CODE #
#                            _START-_OTP_CODE_END                              #
#                            -Z(CODE)MUSIC_SEG=_OTP_CODE_START-_OTP_CODE_END   #
#                            -Z(CODE)USER_MUSIC_SEG=_OTP_CODE_START-_OTP_CODE_ #
#                            END                                               #
#                            -Z(CODE)USER_AMUX_CONST,USER_AMUX_SEG=_OTP_CODE_S #
#                            TART-_OTP_CODE_END                                #
#                            -Z(CODE)API_FM,FM_FADE=_OTP_CODE_START-_OTP_CODE_ #
#                            END                                               #
#                            -Z(CODE)RDA5807_RX,RDA5807_RX_TABLE,QN8035_RX_EXT #
#                            ,QN8035_RX,QN8065_RX,QN8065_RX_TABLE,BK1080,BK108 #
#                            0_RX_TABLE=_OTP_CODE_START-_OTP_CODE_END          #
#                            -Z(CODE)AR1010_RX,AR1010_RX_TABLE,AR1019_RX,SP377 #
#                            7_RX,SP3777_RX_TABLE,KT0830EG=_OTP_CODE_START-_OT #
#                            P_CODE_END                                        #
#                            -Z(CODE)CL6017S_RX,CL6017S_RX_TABLE,CL6017G_RX,CL #
#                            6017G_RX_TABLE,RTC6218_RX,RTC6218_RX_TABLE=_OTP_C #
#                            ODE_START-_OTP_CODE_END                           #
#                            -Z(CODE)RTC_TBL,RTC_INIT,RTC_SEG_API=_OTP_CODE_ST #
#                            ART-_OTP_CODE_END                                 #
#                            -Z(CODE)KEY_INIT,SCAN_COM,KEY_CONST_TABLE=_OTP_CO #
#                            DE_START-_OTP_CODE_END                            #
#                            -Z(CODE)IR_INIT,IR_SCAN,IR_CONST_TABLE=_OTP_CODE_ #
#                            START-_OTP_CODE_END                               #
#                            -Z(CODE)KEDIR_CODE,KEDIR_CONST_TABLE=_OTP_CODE_ST #
#                            ART-_OTP_CODE_END                                 #
#                            -Z(CODE)TOUCH_KEY_SEG,TOUCH_KEY_TABLE=_OTP_CODE_S #
#                            TART-_OTP_CODE_END                                #
#                            -Z(CODE)LCD_SEG_TBL,LCD_INIT,LCD_SEG_API=_OTP_COD #
#                            E_START-_OTP_CODE_END                             #
#                            -Z(CODE)LED_5C7S_INIT,LED_5C7S_SEG=_OTP_CODE_STAR #
#                            T-_OTP_CODE_END                                   #
#                            -Z(CODE)LED_SEG=_OTP_CODE_START-_OTP_CODE_END     #
#                            -Z(CODE)LED_7P7S_INIT,LED_7P7S_SEG=_OTP_CODE_STAR #
#                            T-_OTP_CODE_END                                   #
#                            -Z(CODE)LED_DISP_TBL,LED_DISP_SEG=_OTP_CODE_START #
#                            -_OTP_CODE_END                                    #
#                            -Z(CODE)DEVICE_INIT,DEVICE_COM_SEG,DEVICE_SEG,DEV #
#                            _ASM=_OTP_CODE_START-_OTP_CODE_END                #
#                            -Z(CODE)SD_SEG,USB_SEG=_OTP_CODE_START-_OTP_CODE_ #
#                            END                                               #
#                            -Z(CODE)USBDEV_TBL=_OTP_CODE_START-_OTP_CODE_END  #
#                            -Z(CODE)FAT_COM_SEG,FAT_SEG,FS_INIT_SEG,FAT_API_S #
#                            EG=_OTP_CODE_START-_OTP_CODE_END                  #
#                            -Z(CODE)FS_SCAN_SEG,FILE_FILTER_SEG,FILE_FILTER_C #
#                            ONST=_OTP_CODE_START-_OTP_CODE_END                #
#                            -Z(CODE)KEY_VOICE,EQ_TBL=_OTP_CODE_START-_OTP_COD #
#                            E_END                                             #
#                            -Z(CODE)SPI_SEG,SPI_API_SEG,USER_SPI_SEG=_OTP_COD #
#                            E_START-_OTP_CODE_END                             #
#                            -Z(CODE)TASK_SEG,TASK_MUSIC_SEG,TASK_AUX_SEG,TASK #
#                            _SPEAKER_SEG,TASK_SPEAKER_CONST=_OTP_CODE_START-_ #
#                            OTP_CODE_END                                      #
#                            -Z(CODE)TASK_FM_SEG,TASK_RTC_SEG,TASK_USBDEV_SEG, #
#                            TASK_ALARM_SEG,TASK_ALARM_CONST=_OTP_CODE_START-_ #
#                            OTP_CODE_END                                      #
#                            -Z(CODE)TASK_IDLE_SEG,TASK_POWEROFF_SEG,TASK_LOWP #
#                            OWER_SEG=_OTP_CODE_START-_OTP_CODE_END            #
#                            -Z(CODE)TASK_FMAM_DETECT_SEG=_OTP_CODE_START-_OTP #
#                            _CODE_END                                         #
#                            -Z(CODE)TASK_FLASH_SEG,TASK_FLASH_CONST=_OTP_CODE #
#                            _START-_OTP_CODE_END                              #
#                            -Z(CODE)DISP_OCX_SEG=_OTP_CODE_START-_OTP_CODE_EN #
#                            D                                                 #
#                            -Z(CODE)DISP_MUSIC_SEG=_OTP_CODE_START-_OTP_CODE_ #
#                            END                                               #
#                            -Z(CODE)DISP_AUX_SEG=_OTP_CODE_START-_OTP_CODE_EN #
#                            D                                                 #
#                            -Z(CODE)DISP_SPEAKER_SEG=_OTP_CODE_START-_OTP_COD #
#                            E_END                                             #
#                            -Z(CODE)DISP_FM_SEG=_OTP_CODE_START-_OTP_CODE_END #
#                            -Z(CODE)DISP_RTC_SEG=_OTP_CODE_START-_OTP_CODE_EN #
#                            D                                                 #
#                            -Z(CODE)DISP_USBDEV_SEG=_OTP_CODE_START-_OTP_CODE #
#                            _END                                              #
#                            -Z(CODE)DISP_ALARM_SEG=_OTP_CODE_START-_OTP_CODE_ #
#                            END                                               #
#                            -Z(CODE)DISP_POWEROFF_SEG=_OTP_CODE_START-_OTP_CO #
#                            DE_END                                            #
#                            -Z(CODE)DISP_IDLE_SEG=_OTP_CODE_START-_OTP_CODE_E #
#                            ND                                                #
#                            -Z(CODE)MEM,MEMEEP,MEMRTCRAM,MEMDEVICE,MEMINT=_OT #
#                            P_CODE_START-_OTP_CODE_END                        #
#                            -Z(CODE)USER_SETTING_SEG,USER_SETTING_CONST,USER_ #
#                            IO_SEG,BAT_CHECK=_OTP_CODE_START-_OTP_CODE_END    #
#                            -Z(CODE)STARTMUSIC_SEG,STARTMUSIC_CONST=_OTP_CODE #
#                            _START-_OTP_CODE_END                              #
#                            -Z(CODE)WKUP_SEG=_OTP_CODE_START-_OTP_CODE_END    #
#                            -Z(CODE)CODE_TBL=0x7ff0-0x7ff7                    #
#                            -Z(CODE)CHECKSUM#_OTP_CODE_END                    #
#                            -Z(CODE)M_CONSTANT=0xC00000-0xC0FFFF              #
#                            -Z(XDATA)EXT_STACK+_EXTENDED_STACK_SIZE=_EXTENDED #
#                            _STACK_START-_EXTENDED_STACK_END                  #
#                            -Z(XDATA)PSTACK+_PDATA_STACK_SIZE=_PDATA_START-_P #
#                            DATA_END                                          #
#                            -Z(XDATA)XSTACK+_XDATA_STACK_SIZE=_XDATA_START-_X #
#                            DATA_END                                          #
#                            -Z(XDATA)PDATA_N,PDATA_Z,PDATA_I=_PDATA_START-_PD #
#                            ATA_END                                           #
#                            -Z(XDATA)MSG_POOL=_PDATA_START-_PDATA_END         #
#                            -Z(XDATA)USB_HOST_MASS_PDATA,USB_HOST_PDATA=0x0D- #
#                            0x36                                              #
#                            -Z(XDATA)FAT_PDATA=0x3F-0xA4                      #
#                            -Z(XDATA)IXDATA_N,IXDATA_Z,IXDATA_I=0x280-0x39C,_ #
#                            IXDATA_START-_IXDATA_END                          #
#                            -Z(XDATA)XDATA_N,XDATA_Z,XDATA_I=0x280-0x39C,_XDA #
#                            TA_START-_XDATA_END                               #
#                            -Z(XDATA)FILE_POINT_BUF,TRIM_XDATA=_XDATA_START-_ #
#                            XDATA_END                                         #
#                            -Z(XDATA)XDATA_HEAP+_XDATA_HEAP_SIZE=_XDATA_START #
#                            -_XDATA_END                                       #
#                            -Z(CONST)XDATA_ROM_C=_XDATA_START-_XDATA_END      #
#                            -Z(XDATA)DAC_XDATA=0x3CB-0x3D1                    #
#                            -Z(XDATA)FAT_XDATA=0x468-0x48E                    #
#                            -Z(XDATA)DECODER_BUF=0x7D0-0xFFF                  #
#                            -Z(XDATA)WAV_XDATA=0x20413-0x20416                #
#                            -Z(XDATA)ECHO_XDATA=0x2041B-0x20422               #
#                            -Z(XDATA)DIR_PATH_XDATA=0x107D0                   #
#                            -Z(XDATA)BT_BUFF_1=0x207D0                        #
#                            -Z(XDATA)RTC6218_BUF,BK1080_BUF=0x307D0           #
#                            -Z(XDATA)BT_XDATA=0x14500                         #
#                            -Z(XDATA)BT_BUFF_2=0x14560                        #
#                            -Z(XDATA)BT_SDBUFF=0x24680 -cx51 -R)              #
#                            -D_NR_OF_VIRTUAL_REGISTERS=14                     #
#                            -D_CODEBANK_START=0 -D_CODEBANK_END=0             #
#                            -e_small_write=_formatted_write -Hff -s           #
#                            __program_start                                   #
#                            I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX10 #
#                            71_xxxxxxxx_20180629_Merlin_1\app\cl-ple-nlec-1e1 #
#                            6x01.r51                                          #
#                            -D_IDATA_STACK_SIZE=0x00                          #
#                            -D_EXTENDED_STACK_START=0x100                     #
#                            -D_EXTENDED_STACK_END=0x4FF                       #
#                            -D_EXTENDED_STACK_SIZE=0x180                      #
#                            -D_PDATA_STACK_SIZE=0x0 -D_XDATA_STACK_SIZE=0x0   #
#                            -D_XDATA_HEAP_SIZE=0x0 -D_FAR_HEAP_SIZE=0x0       #
#                            -D_HUGE_HEAP_SIZE=0x0                             #
#                                                                              #
#                        Copyright 1987-2006 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0000427B  Relocatable, from module : CSTARTUP




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __calling_convention     = ext_stack_reentrant
  __code_model             = near
  __core                   = plain
  __data_model             = large
  __dptr_size              = 16
  __extended_stack         = enabled
  __location_for_constants = code
  __number_of_dptrs        = 1
  __rt_version             = 1



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _HUGE_HEAP_SIZE         00000000 
           _FAR_HEAP_SIZE          00000000 
           _XDATA_HEAP_SIZE        00000000 
           _XDATA_STACK_SIZE       00000000 
           _PDATA_STACK_SIZE       00000000 
           _EXTENDED_STACK_SIZE    00000180 
           _EXTENDED_STACK_END     000004FF 
           _EXTENDED_STACK_START   00000100 
           _IDATA_STACK_SIZE       00000000 
           _CODEBANK_END           00000000 
           _CODEBANK_START         00000000 
           _NR_OF_VIRTUAL_REGISTERS
                                   00000014 
           ?ESP                    0000009B        ?POP_BIT_ESP (?POP_BIT_ESP)
                                                   Segment part 6 (CSTARTUP)
           ?PBANK                  000000BF 
           ?PBANK_NUMBER           00000000 
           ?VB                     00000020        host_select_phy (device)
                                                   led_7p7s_disp_time (led_7p7s)
                                                   sd_active_safe (?device)
                                                   sd_stop (?sd)
                                                   set_sys_clk (clock)
                                                   spi_flash_init (user_spi)
                                                   task_flash_music_direct (task_flash)
           _BREG_END               00000007 
           _BREG_START             00000000 
           _REGISTER_BANK_START    00000000 
           ?REGISTER_BANK          00000000        Segment part 6 (CSTARTUP)
           _NEAR_CODE_END          00007FFF 
           _OTP_CODE_END           00007FEF 
           _OTP_CODE_START         00004000 
           _XDATA_END              000007FF 
           _XDATA_START            00000500 
           _IXDATA_END             000007FF 
           _IXDATA_START           00000500 
           _PDATA_END              000000FF 
           _PDATA_START            000000B2 
           _IDATA_END              00000094 
           _IDATA_START            0000006D 
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\lib_ax107x.r51
  LIBRARY MODULE, NAME : EXTERN_FUN_DEF

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adpcm_proc              00002747 
           adpcm_dec               0000290A 
           adpcm_out               0000299B 
           wav_peek                000023FB        Segment part 1 (OTP_VECTOR)
           osc_delay               00008ADF        Segment part 13 (?clock)
                                                   Segment part 17 (?clock)
                                                   Segment part 19 (?clock)
                                                   Segment part 25 (?clock)
                                                   soft_poweroff (task_poweroff)
           cal_rc2m_do             00003F30 
           auto_check_x32k_do      00002F7E 
           sys_pll_x32k_do         00003937 
           powerup_handle          0000D6A0 
           tbl_anl_vol             00008178 
           dac_set_sample          0000923B        Segment part 1 (OTP_VECTOR)
           dac_reset               00009273        music_init (?music)
           dac_set_digvol          0000927A        Segment part 19 (?dac)
                                                   dac_set_volume_direct (dac)
           dac_ctl_init            000092A3        system_init (user_init)
           dac_fade_auto_step      000092BB        dac_fade_auto (?dac)
           dac_fade_auto_step1     00009301 
           dac_set_anlvol          0000931C        dac_fade_auto (?dac)
                                                   dac_set_volume_direct (dac)
           dac_clr_buf             0000933C        music_stop (?music)
           dac_set_trim            0000935E 
           dac_clr_trim            0000938B 
           dac_get_trim            000093C2 
           at_read                 000093FA        Segment part 24 (dac)
                                                   dac_fade_out (?dac)
                                                   dac_fade_out_auto (?dac)
                                                   dac_power_on (dac)
           at_write                0000940A        Segment part 23 (?dac)
                                                   Segment part 25 (dac)
                                                   Segment part 30 (dac)
                                                   Segment part 31 (dac)
                                                   dac_power_on (dac)
           dac_set_eqgain          00009435 
           copy_to_dacbuf          0000941C 
           music_eq_set_m          00008AF2 
           tbl_sample_rate         000089AE 
           qctl_init               0000C13D        qctl_init_1 (MUSIC_ASM)
           qctl_calc_frame         0000C174 
           qctl_calc_offset        0000C1F3 
           decode_skip             0000C254 
               is not allocated
           decode_qskip            0000C258 
           qctl_target_offset      0000C269 
           qctl_calc_frames        0000C2CE 
           decoder_get_fileptr     0000B3F3        qctl_init_1 (MUSIC_ASM)
           fctl_init_func          0000B41C        fctl_init (?fat)
           save_clust              0000B44D        Segment part 1 (OTP_VECTOR)
           load_clust_do           0000B53D 
           load_clust              0000B6BD        Segment part 1 (OTP_VECTOR)
           decoder_get_err         0000B710        music_init (?music)
           music_calc_mtime        0000B715        music_update_time (MUSIC_ASM)
           sound_detect_do         00003DF6 
           sound_ctl_init          0000DFAC        task_flash_music_enter (task_flash)
           sound_ctl_clr           0000DFD0 
               is not allocated
           decoder_bfbyte_end      0000BD23 
           decoder_bset            0000BD41 
           decoder_bclr            0000BE0A 
           decoder_get_bitpos      0000BE37 
           decoder_get_restbit_loaded
                                   0000BE7B 
           decoder_get_restbit     0000BEF4 
           decoder_benter          0000BF19 
           decoder_bexit           0000BF2C 
           decoder_badd            0000BF37 
           decoder_bfill           0000BF41        Segment part 1 (OTP_VECTOR)
           decoder_get_bits        0000C00D        Segment part 1 (OTP_VECTOR)
           decoder_get_bits_signed
                                   0000C03A        Segment part 1 (OTP_VECTOR)
           decoder_bskip           0000C069        Segment part 1 (OTP_VECTOR)
           decoder_init            0000B760        Segment part 1 (OTP_VECTOR)
           decoder_wptr            0000B79B 
           decoder_wcnt            0000B7E9 
           decoder_set_fill_limit
                                   0000B82A 
               is not allocated
           decoder_get_fill_limit
                                   0000B82D 
           decoder_fill            0000B830        Segment part 1 (OTP_VECTOR)
           decoder_getbyte         0000B8B9        Segment part 1 (OTP_VECTOR)
           decoder_getbytes        0000B8FD        Segment part 1 (OTP_VECTOR)
           decoder_skip            0000B9AD        Segment part 1 (OTP_VECTOR)
           decoder_getle16         0000BAA5 
           decoder_getle32         0000BABC 
           decoder_peek            0000BAF0        is_other_file (user_music)
           decoder_seek_org        0000BB5C 
           decoder_stream_end      0000BB9C 
               is not allocated
           decoder_skip_peek       0000BBA1 
           device_is_online        0000DFE9        i2c_sd_mux_enter (user_i2c)
                                                   i2c_sd_mux_exit (user_i2c)
                                                   my_mal_get_status (?lark_fix)
                                                   spi_sd_mux_exit (user_spi)
                                                   task_flash_music_event (task_flash)
                                                   usb_device_is_online (?device)
                                                   usb_host_is_online (?device)
           device_need_activate    0000DFF8        comm_event (task)
                                                   device_activate (device)
                                                   device_change_check (device)
           device_is_actived       0000E00D        device_activate (device)
                                                   device_change_check (device)
                                                   system_init (user_init)
                                                   task_flash_music_enter (task_flash)
           device_activate_try     0000E022        device_activate_do (device)
           device_status_stable    0000E035 
               is not allocated
           S_SHL_U8                0000E06E 
           tbl_eq_db_m             00008013 
           eq_coeff_m              00008049 
           tbl_eq_db_coff          0000807F 
           dac_calc_eqgain         00009447 
           dac_set_eq              000094D6 
               is not allocated
           dac_eq_fade_do          000094F2 
               is not allocated
           dac_eq_fade_m           00009558 
           dac_eq_set_m            0000957A 
           music_eq_init_m         00009590        dac_init (dac)
           music_eq_set_do         00003FDB 
           music_eq_setd_m         000095DF        user_change_eq (user_setting)
           music_filename_check    000095F1        task_music_break_save (task_music)
           save_dir_path           00009609 
               is not allocated
           load_dir_path           00009636 
               is not allocated
           f_check_ext             00009648 
               is not allocated
           m_f_mount               0000D5C2 
               is not allocated
           file_point_init         0000F781 
               is not allocated
           restore_file_dir        0000F81F 
           load_file_point_p       0000F8D1 
           load_file_point         0000F9ED 
               is not allocated
           load_dir_num_point      0000FAC6 
               is not allocated
           get_free_file_point     0000FB39 
           save_file_point_p       0000FC9F 
           save_file_point         0000FD7B 
               is not allocated
           save_file_point_tmp     0000FDCC 
               is not allocated
           dir_point_init          0000FDDF 
               is not allocated
           dir_point_used          0000FDE5 
               is not allocated
           load_dir_point          0000FE08 
               is not allocated
           save_dir_point          0000FEBF 
               is not allocated
           f_attr_is_dir           0000A331 
               is not allocated
           f_attr_is_file          0000A343 
               is not allocated
           string_tolow            0000A34E 
           get_ext_name            0000A382 
               is not allocated
           nibble_tbl              0000FF49 
           fm_get_diff             0000FF59 
           i2c_sda_high_then_delay
                                   0000E084 
           i2c_sda_low_then_delay
                                   0000E08A 
           i2c_scl_high_then_delay
                                   0000E090 
           i2c_scl_low_then_delay
                                   0000E096 
           i2c_send_ack            0000E09C 
           i2c_send_nack           0000E0A4 
           i2c_recv_ack            0000E0BC 
           i2c_stop                0000E0D3 
               is not allocated
           i2c_init                0000E0DF 
           i2c_start               0000E0EB 
               is not allocated
           i2c_send_byte           0000E0F4 
           i2c_read_byte           0000E10F 
           i2c_read                0000E136 
           i2c_write               0000E16B 
           i2c_sda_high_then_delay_2
                                   0000E1AB 
           i2c_sda_low_then_delay_2
                                   0000E1B1 
           i2c_scl_high_then_delay_2
                                   0000E1B7 
           i2c_scl_low_then_delay_2
                                   0000E1BD 
           i2c_send_ack_2          0000E1C3 
           i2c_send_nack_2         0000E1CB 
           i2c_recv_ack_2          0000E1E3 
           i2c_stop_2              0000E1FA 
           i2c_init_2              0000E206 
           i2c_start_2             0000E215 
           i2c_send_byte_2         0000E21E 
           i2c_read_byte_2         0000E239 
           i2c_port_init_2         0000E260 
           i2c_sda_dirout_2        0000E26C 
           i2c_sda_dirin_2         0000E270 
           i2c_scl_dirout_2        0000E274 
           i2c_sda_high_2          0000E278 
           i2c_sda_low_2           0000E27B 
           i2c_scl_high_2          0000E27E 
           i2c_scl_low_2           0000E281 
           i2c_sda_read_2          0000E284 
           alarm_pcm_buf           0000FFD7 
           sec2time                0000F692 
           time2sec                0000F722 
           irtcdat_write           00008AFD 
           irtcdat_read            00008B01 
           irtc_write_4byte        0000F622 
           irtc_read_4byte         0000F640 
           irtc_read_cmd           0000F65E        irtc_init (api_rtc)
                                                   irtc_poweron (user_init)
                                                   powerkey_get (user_key)
                                                   wko_init (task_poweroff)
           irtc_write_cmd          0000F66B        irtc_init (api_rtc)
                                                   irtc_poweron (user_init)
                                                   soft_poweroff (task_poweroff)
                                                   soft_poweroff_enter (task_poweroff)
                                                   sys_pll_xosc (clock)
                                                   sysclk_set (clock)
                                                   wko_init (task_poweroff)
           irtc_write_date         0000F67A 
           irtc_read_date          0000F680 
           irtc_write_alarm        0000F686 
           irtc_read_alarm         0000F68C 
           irtc_write_ram          00008B0D        rtcram_write_byte (RTC_ASM)
                                                   task_flash_music_deal_msg (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
                                                   task_flash_music_exit (task_flash)
                                                   write_flash_num_rtcram (mem_rtcram)
                                                   write_music_break_rtcram (mem_rtcram)
                                                   write_num_rtcram (mem_rtcram)
           irtc_read_ram           00008B30        read_volume_rtcram (mem_rtcram)
                                                   rtcram_read_multi (RTC_ASM)
           kedir_disable_top_tiny_resume_big
                                   0000D5CD 
           ir_key_get              0000D5D6 
           eoc_isr                 0000D5E8 
           normal_timer_isr        0000D63E 
           kedir_timer_isr         0000D642 
           philips_ir_init_var     0000D68E 
           timer2_init             00008B47        system_init (user_init)
           maskrom_main            0000D6F8 
           mp3_id3v2_match         0000D3D5 
           mp3_id3v2_tag_len       0000D405 
           mp3_layer1_rq           0000D443 
           mp3_decode              0000D444        msc_mp3_decode (?music)
           II_samples              0000336F 
           II_next_index           00003440 
           II_sample_to_mram       0000345D 
           tbl_aucon3_sf           000089EC 
           mp3_bset                0000C303 
           mp3_clr_mpram           0000C346 
           mp3_get_sfb             0000C361 
           mp3_aucon3_set          00003D20 
           mp3_aucon34_set         00003D4A 
           mp3_huff_start          00003A1A 
           mp3_huff_end            00003A89 
           mp3_huff_dec_pre        00003AA5 
           mp3_huff_dec_big        00003B3D 
           mp3_huff_dec_small      00003C21 
           mp3_huff_dec_zero       00003CBE 
           mp3_huff_dec            00003CCF 
           mp3_requantize_1        000030F1 
           mp3_requantize_2        00003477 
           mp3_requantize          0000C375 
           mp3_stereo              0000C67F        mp3_stereo_fix (?lark_fix)
           mp3_reorder             0000C79C 
           mp3_synth               0000C7A4 
           tbl_sample              000089F5 
           mp3_sync_check          0000C7A9 
           mp3_sync_verify         0000C7E7        Segment part 1 (OTP_VECTOR)
           mp3_sync_recheck        0000C835 
           mp3_sync                0000C869 
           mp3_get_header          0000C898 
           mp3_get_sideinfo        0000CA2C 
           mp3_check_maindata_len
                                   00008B6A 
           mp3_get_frame_len       0000CC8D 
           mp3_maindata_start      0000CD1B 
           mp3_pre_decode          0000CD46 
           mp3_scalefactors_1      00003254 
           mp3_scalefactors_2      0000364F 
           mp3_scalefactors_normal
                                   0000CD9A 
           cal_slen_l              0000CEE5 
           cal_slen_s              0000CF95 
           mp3_scalefactors_lsf    0000D02A 
           mp3_scalefactors        0000D260 
           mp3_kick_stereo_reorder
                                   0000D26C 
           mp3_frame_end           0000D27F 
           mp3_decode_do           00008B91 
           mp3_init                0000D2AB        music_init (?music)
           decoder_init_for_mp3    0000D31A        Segment part 1 (OTP_VECTOR)
           mp3_id3v2_parse         0000D34D        Segment part 1 (OTP_VECTOR)
           mp3_dec_return          00003DB1        Segment part 1 (OTP_VECTOR)
           mp3_synth_check         0000D3AE        mp3_isr (user_music)
           mp3_sta_check           00003DC3        mp3_dec_subin (?mp3)
           mp3_jump                0000D44F        Segment part 1 (OTP_VECTOR)
           mp3_save_point_1        0000D48F 
           mp3_save_point          0000D4A3        Segment part 1 (OTP_VECTOR)
           mp3_qskip               0000D4AA        mp3_dec_subin (?mp3)
           mp3_q_jump              00008D54 
           mp3_qskip_start         0000D528 
           mp3_qskip_start_quick   0000D56B        Segment part 1 (OTP_VECTOR)
           mp3_qskip_check_start   00008D86 
           mp3_qskip_check         0000D580        mp3_dec_subin (?mp3)
           mp3_qskip_end           0000D599 
               is not allocated
           hufftabA                00002002 
           hufftabB                0000203E 
           hufftab1                0000207A 
           hufftab2                00002086 
           hufftab3                0000209E 
           hufftab5                000020B6 
           hufftab6                000020E2 
           hufftab7                00002112 
           hufftab8                0000217E 
           hufftab9                000021E2 
           hufftab10               00002246 
           hufftab11               000022FE 
           hufftab12               000023B2 
           hufftab13               00002462 
           hufftab15               00002726 
           hufftab16               0000299E 
           hufftab24               00002C66 
           tbl_huff_quad           00002EE2 
           tbl_huff                00002EE6 
           tbl_bit_rate            00008A00 
           tbl_sflen               00008A4B 
           tbl_preemphasis         00002F46 
           tbl_nsfb                00002F5C 
           tbl_sbquant             00002FA4 
           tbl_bitalloc            0000303F 
           tbl_offset              0000304F 
           tbl_qc                  000030A9 
           l12_sftable             000030ED 
           msg_init                0000DE7C        system_init (user_init)
           flush_msg               0000DE8B 
           put_msg                 0000DE8F        KEY_Whire1 (user_key)
                                                   KEY_Whire2 (user_key)
                                                   key_scan (user_key)
           get_msg                 0000DEB7        task_flash_music (task_flash)
                                                   task_idle (task_idle)
                                                   task_poweroff (task_poweroff)
           dac_set_sample_hook     00004083 
           delay_hook              00004086        usb_device_is_online (?device)
           kedir_pause_hook        00004089 
           kedir_resume_hook       0000408C 
           my_uart_putchar_hook    0000408F 
           device_get_hook         00004092 
           decoder_init_hook       00004095 
           decoder_read_hook       00004098 
           decoder_seek_hook       0000409B 
           decoder_getbyte_hook    0000409E 
           decoder_getbytes_hook   000040A1 
           decoder_skip_hook       000040A4 
           decoder_fill_hook       000040A7 
               is not allocated
           decoder_get_bits_hook   000040AA 
           decoder_get_bits_signed_hook
                                   000040AD 
           decoder_bfill_hook      000040B0 
           decoder_bskip_hook      000040B3 
           decoder_readstart_hook
                                   000040B6 
           decoder_readstop_hook   000040B9 
           save_clust_hook         000040BC 
           load_clust_hook         000040BF 
           decoder_init_for_mp3_hook
                                   000040C2 
           mp3_dec_return_hook     000040C5 
           mp3_dec_subin_hook      000040C8 
           mp3_id3v2_parse_hook    000040CB 
           mp3_sync_verify_hook    000040CE 
           mp3_jump_hook           000040D1 
           mp3_save_point_hook     000040D4 
           mp3_qskip_start_hook    000040D7 
           decoder_init_for_wav_hook
                                   000040DA 
           wav_subin_hook          000040DD 
           wav_save_point_hook     000040E0 
           wav_jump_hook           000040E3 
               is not allocated
           wav_fill_check_hook     000040E6 
           wav_peek_hook           000040E9 
           adpcm_rewind_hook       000040EC 
               is not allocated
           adpcm_err_hook          000040EF 
           other_format_hook       000040F2 
           usb_host_is_online_hook
                                   000040F5 
           usb_host_bus_check_hook
                                   000040F8 
           usb_switch_stable_host_hook
                                   000040FB 
           usb_host_get_descriptor_hook
                                   000040FE 
           host_scsi_perform_hook
                                   00004101 
           usb_host_mass_getinfo_hook
                                   00004104 
           usb_host_get_actived_hook
                                   00004107 
           usb_host_set_actived_hook
                                   0000410A 
           usb_host_get_device_end_hook
                                   0000410D 
           usb_host_get_configuration_loop_hook
                                   00004110 
           usb_host_is_mass_hook   00004113 
           usb_host_ep0_enum_hook
                                   00004116 
           usb_host_get_device_descriptor_1_hook
                                   00004119 
           usb_host_get_configuration_descriptor_2_hook
                                   0000411C 
           usb_host_ep0_wait_hook
                                   0000411F 
           usb_host_bulk_wait_txrdy_hook
                                   00004122 
           usb_host_bulk_wait_rxrdy_hook
                                   00004125 
           usb_host_mass_init_hook
                                   00004128 
           usb_host_mass_enum_hook
                                   0000412B 
           usb_host_ep0buf_skip_hook
                                   0000412E 
           usb_host_bulk_tx_hook   00004131 
           usb_host_bulk_rx_hook   00004134 
           host_scsi_write_hook    00004137 
           host_scsi_rx_hook       0000413A 
           usb_host_mass_write_sector_hook
                                   0000413D 
           usb_host_mass_read_do_hook
                                   00004140 
           usb_host_mass_read_sector_hook
                                   00004143 
           usb_host_mass_read_end_hook
                                   00004146 
           usb_host_ipad_charge_hook
                                   00004149 
           sd_active_hook          0000414C        fs_sel_new (?fat)
                                                   sd_active_safe (?device)
           sd_read_a_hook          0000414F 
           sd_write_a_hook         00004152 
           sd_stop_hook            00004155 
           sd_set_rate_hook        00004158 
           sd_read_wait_hook       0000415B 
           sd_write_wait_hook      0000415E 
           sd_port_init_hook       00004161 
           sd_get_status_hook      00004164 
           sd_set_status_hook      00004167 
           sd_active_cmd12_hook    0000416A 
           move_window_hook        0000416D 
           get_cluster_hook        00004170 
           check_fs_hook           00004173 
           next_dir_entry_hook     00004176 
           m_f_clust_boundary_hook
                                   00004179 
           fs_first_win_tick_hook
                                   0000417C 
           f_readdir_get_hook      0000417F 
           f_exfat_readdir_get_hook
                                   00004182 
           f_move_window_hook      00004185 
           f_finddbr_end_hook      00004188 
           i2c_sda_dirout_hook     0000418B 
           i2c_sda_dirin_hook      0000418E 
           i2c_scl_dirout_hook     00004191 
           i2c_sda_high_hook       00004194 
           i2c_sda_low_hook        00004197 
           i2c_scl_high_hook       0000419A 
           i2c_scl_low_hook        0000419D 
           i2c_sda_read_hook       000041A0 
           i2c_port_init_hook      000041A3 
           i2c_port_finish_hook    000041A6 
           i2c_delay_hook          000041A9 
           i2c_delay_2_hook        000041AC 
           usb_device_is_online_hook
                                   000041AF 
           usb_switch_stable_device_hook
                                   000041B2 
           usb_device_reset_hook   000041B5 
           usb_device_resume_hook
                                   000041B8 
           usb_device_suspend_hook
                                   000041BB 
           usb_ep0_process_isr_hook
                                   000041BE 
           iso_out_process_hook    000041C1 
           usb_class_request_hook
                                   000041C4 
           usb_get_descriptor_hook
                                   000041C7 
           usb_get_str_desc_hook   000041CA 
           usb_get_descriptor_end_hook
                                   000041CD 
           usb_spk_set_volume_hook
                                   000041D0 
           usb_spk_get_volume_hook
                                   000041D3 
           usb_spk_set_mute_hook   000041D6 
           mal_sd_detect_hook      000041D9 
           mal_sd_recheck_hook     000041DC 
           mal_device_activate_try_hook
                                   000041DF 
           mal_write_start_hook    000041E5 
           mal_read_start_hook     000041E8 
           mal_idle_hook           000041EB 
           scsi_invalid_request_hook
                                   000041EE 
           para_test               0000D711 
           pcm_decode              0000252C 
           pcm_8bit_mono           0000254B 
           pcm_8bit_stereo         00002575 
           pcm_16bit_mono          00002596 
           pcm_16bit_stereo        000025BF 
           pcm_24bit_mono          000025DE 
           pcm_24bit_stereo        00002609 
           pcm_32bit_mono          00002633 
           pcm_32bit_stereo        00002660 
           my_printf               00008E20        KEY_Whire1 (user_key)
                                                   KEY_Whire2 (user_key)
                                                   adc_get (user_key)
                                                   deal_msg (task)
                                                   device_activate_do (device)
                                                   double_click_filter (user_key)
                                                   irtc_poweron (user_init)
                                                   key_scan (user_key)
                                                   rtcram_poweron_check (mem_rtcram)
                                                   soft_poweroff_enter (task_poweroff)
                                                   soft_poweroff_init (task_poweroff)
                                                   spi_flash_init (user_spi)
                                                   system_init (user_init)
                                                   task_battery_check (user_key)
                                                   task_flash_music (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
                                                   task_flash_music_exit (task_flash)
                                                   task_idle (task_idle)
                                                   task_poweroff (task_poweroff)
                                                   task_poweroff_deal_msg (task_poweroff)
                                                   timer2_isr (main)
           printf_array            000090C4 
           sd_active_init          0000DA30 
           sd_check_type           0000DA60 
           sd_clr_status           0000DAA0 
               is not allocated
           sd_init                 0000DAB4 
           sd_active_do            0000DAC2 
           sd_active               0000DB40        sd_active_a (device)
           sd_read_kick            0000DB56 
           sd_read_start           0000DB68 
           sd_wait_do              0000DBCC 
           sd_read_wait            0000DC17        Segment part 1 (OTP_VECTOR)
           sd_read_opt             0000DC2A 
           sd_read_a               0000DC90        Segment part 1 (OTP_VECTOR)
           sd_stop_m               0000DD02        sd_stop (?sd)
           sd_read                 0000DD6A 
               is not allocated
           mmc_get_capacity        0000DDD5 
           sd_get_capacity         0000DE11 
           sd_write_start          0000D8D3 
           sd_write_kick           0000D913 
           sd_write_wait           0000DDC0        Segment part 1 (OTP_VECTOR)
           sd_write_opt            0000D928 
           sd_write_a              0000D98E        Segment part 1 (OTP_VECTOR)
           sd_write                0000D9DA 
               is indirectly called
           sd_send_cmd0            0000D7BF 
               is not allocated
           mmc_send_cmd1           0000D7C6 
           sd_send_cmd2            0000D7D5 
           sd_send_cmd3            0000D7DC 
           mmc_send_cmd3           0000D7EB 
           sd_send_cmd7            0000D804 
           sd_send_cmd8            0000D80E 
           sd_send_cmd9            0000D827 
           sd_send_cmd55           0000D82E 
           sd_send_a41             0000D83B 
           sd_is_actived           0000D857 
           sd_get_csize            0000D873 
           sd_get_clen             0000D891 
           sd_send_cmd12           0000D8A9        Segment part 1 (OTP_VECTOR)
           sd_send_cmd13           0000D8B0 
           sd_send_cmd18           0000D8B7 
           sd_send_cmd25           0000D8CE 
           sound_maxpow            0000DF72        dac_fade_auto (?dac)
           sound_detect            0000DFDE        dac_fade_auto (?dac)
           delay_5ms               0000DEF3        Segment part 21 (dac)
                                                   Segment part 28 (dac)
                                                   Segment part 35 (?music)
                                                   dac_power_on (dac)
                                                   soft_poweroff_init (task_poweroff)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_exit (task_flash)
           delay_nop               0000DEFD        Segment part 26 (user_i2c)
           rand_init               0000DF05 
           rand_do                 00003E85 
           my_memcpy               000081ED 
               is not allocated
           my_memset               0000821E        device_init (device)
                                                   key_init (user_key)
                                                   system_init (user_init)
                                                   task_flash_music_enter (task_flash)
           smemset_i               0000DEED        led_7p7s_clear (led_7p7s)
                                                   led_7p7s_value_set (led_7p7s)
           smemcmp                 00008233 
           smemcmp_c               0000824C        is_other_file (user_music)
           memcpy_c                00008275 
           dummy_void              0000829C 
               is indirectly called
           dummy_u8                0000829C 
           swap_u32                0000829D 
           load_u32b               000082A4 
           load_u16b               000082B4 
           delay_m                 0000DF14        Segment part 23 (?clock)
                                                   delay_1ms (main)
                                                   system_init (user_init)
           clear_u32               0000DF25 
           clear_u32i              0000DF32 
           smemcpy                 0000DF3B 
           smemcpy_c               00009130 
           sys_pll_x32k            00009152 
           rand                    0000915D 
           cal_rc2m                00009168 
           auto_check_x32k         00009173 
           exfatstr                00002AA4 
           move_window_do          00009690 
           get_cluster             000096DD        get_cluster_fix (?fat)
           clust2sect              00009AF9 
               is not allocated
           check_fs                00002AA9        check_fs_fix (?lark_fix)
           m_f_mount_do            00002B32 
           m_f_open_exist          00009B4C 
               is not allocated
           f_read                  00009B90        music_decoder_read (user_fat)
           m_f_lseek               00009CEF        decoder_seek (user_fat)
                                                   music_decoder_read (user_fat)
           m_f_rootdir             00009DB3 
               is not allocated
           f_readdir_fat           00009E15        f_readdir (LARK_FIX_ASM)
           f_readdir_exfat         00009F04 
           m_f_readdir             0000A0B9 
           m_f_opendir             0000A0C9 
               is not allocated
           next_dir_entry_do       0000A11F 
           bitmap_zero_offset      00008003 
           m_f_clust_boundary      0000A1F7        Segment part 1 (OTP_VECTOR)
           m_f_max512              0000A218 
           m_f_u32_inc             0000A224 
           m_f_u32_add_u16         0000A238 
           m_f_u32_minus_u32       0000A24A 
           m_f_u32_isnot_0         0000A268 
           m_f_getshift            0000A27B 
           next_dir_entry          0000A290        Segment part 1 (OTP_VECTOR)
           fs_load_dword           0000A2A7 
           fs_load_sclust          0000A2BA 
           fs_get_windir           0000A2DA 
           f_move_window           0000A2EB        Segment part 1 (OTP_VECTOR)
           move_window             0000A317        Segment part 1 (OTP_VECTOR)
           uart_init               00009202        system_init (user_init)
           uart_putc               00009218        irtc_poweron (user_init)
                                                   soft_poweroff_init (task_poweroff)
           uart_recevc             00009220 
           my_uart_putchar         0000922B        Segment part 1 (OTP_VECTOR)
           ??readbyte_chucksum_setflag1
                                   00003988 
           uart_mode               000039D3 
           write_usb_reg           0000A429 
               is not allocated
           read_usb_reg            0000A443 
           mad_cfg_desc            0000E287 
           usb_ep0_init            0000E40D 
           usb_ep0_reset           0000E423 
           usb_isr_mask            0000EA8A 
           usb_audio_vol_buf       000051C4 
           spk_vol_tbl             0000F4F9 
           usb_audio_init          0000E46B 
           usb_audio_reset         0000E4A9 
           usb_spk_set_volume_do   0000F347 
           usb_spk_get_volume      0000F38F        Segment part 1 (OTP_VECTOR)
           usb_spk_set_mute        0000F3F6        Segment part 1 (OTP_VECTOR)
           iso_out_process         0000F3F7        Segment part 1 (OTP_VECTOR)
           stall_ep0               0000E54A 
           ep0_null_pkt_in         0000E552 
           usb_get_descriptor      0000E55F        Segment part 1 (OTP_VECTOR)
           usb_set_feature         0000E60B 
           usb_clear_feature       0000E678 
           usb_class_request       0000E6EE        Segment part 1 (OTP_VECTOR)
           ep0_out_process         0000E7A9 
           ep0_in_process          0000E820 
           setup_process           0000E8AC 
           usb_ep0_process_isr     0000E9EF 
           usb_ep0_process         0000EA65        usb_device_is_online (?device)
           usb_hid_init_m          0000E4D6 
               is not allocated
           usb_hid_reset           0000E4EC 
           usb_hid_setvalid        0000F469 
               is not allocated
           usb_hid_delay           0000A407 
           usb_hid_send_m          0000F470 
               is not allocated
           usb_hid_key             0000F4E9 
           mal_get_status_m        0000EAF0        my_mal_get_status (?lark_fix)
           mal_write_start         0000EB2D        Segment part 1 (OTP_VECTOR)
           mal_write_kick          0000917E 
           mal_write_wait          0000EB59 
           mal_read_start          0000EB6C        Segment part 1 (OTP_VECTOR)
           mal_read_next           0000EB8C 
           mal_read_wait           0000EBA8 
           usb_mass_delay          0000A41C 
           usb_mass_init           0000E50E 
           usb_mass_exit           0000E539 
           usb_mass_reset          0000EBB4 
           usb_clr_bulk_out        0000EBF7 
           usb_stall_bulk_in       0000EBFF 
           usb_stall_bulk_out      0000EC19 
           usb_stall_bulk_all      0000EC33 
           usb_bulk_out            0000EC67 
           usb_bulk_in             0000ECC3 
           scsi_get_cbw            0000ED3A 
           scsi_send_csw           0000EDB6 
           scsi_set_sense          0000EDE4 
           device_online_check     0000EE12 
           scsi_invalid_request    0000EE34        Segment part 1 (OTP_VECTOR)
           scsi_start_stop_unit    0000EE44 
           scsi_prevent_allow_medium_removal
                                   0000EE66 
           scsi_hostin_send        0000EE84 
           scsi_request_sense      0000EEDA 
           scsi_inquiry            0000EF09 
           scsi_mode_sense6        0000EF17 
           scsi_read_format_capacity
                                   0000EF36 
           scsi_read_capacity      0000EF77 
           scsi_check_cbwlength    0000EFCB 
           scsi_check_capacity     0000F002 
           scsi_read               0000F03F 
           scsi_write              0000F124 
           scsi_request_hn         0000F238 
           scsi_request_hi         0000F25F 
           scsi_request_ho         0000F2B1 
           scsi_request            0000F2DA 
           usb_mass_process        0000F327 
           tbl_usb_device_descriptor
                                   0000F4FC 
           tbl_usb_config_all_descriptor_gen
                                   0000F50E 
           tbl_usb_config_all_descriptor_mass
                                   0000F517 
           tbl_usb_config_all_descriptor_audio_ctrl_head
                                   0000F52E 
           tbl_usb_config_all_descriptor_audio_ctrl_speaker
                                   0000F541 
           tbl_usb_config_all_descriptor_speaker_stream
                                   0000F560 
           tbl_usb_config_all_descriptor_hid
                                   0000F594 
           tbl_usb_hid_report_descriptor
                                   0000F5AD 
           tbl_usb_language_id     0000F5CE 
           tbl_usb_str_manufacturer
                                   0000F5D2 
           tbl_usb_str_product     0000F5E2 
           tbl_scsi_inquiry_data   0000F5FE 
           usb_host_resume_m       0000A3A9        Segment part 30 (device)
           usb_host_suspend_m      0000A3D6        usb_host_suspend (device)
           usb_intr_dis            0000A3E5 
           usb_host_init           0000A978 
           usb_host_bus_check      0000A460        Segment part 1 (OTP_VECTOR)
           usb_host_ep0_wait       0000A47E        Segment part 1 (OTP_VECTOR)
           usb_host_ep0_setup      0000A4EA 
           usb_host_ep0_tx         0000A51D 
           usb_host_ep0_rx         0000A53C 
           usb_host_ep0_request    0000A5A7 
           usb_host_reset          0000A5E0 
           usb_host_clr_feature    0000A61C 
           usb_host_get_descriptor
                                   0000A65A        Segment part 1 (OTP_VECTOR)
           usb_host_get_descriptor_end
                                   0000A696 
           usb_host_ep0buf_skip    0000A6BD        Segment part 1 (OTP_VECTOR)
           usb_host_get_info       0000A6E6 
           usb_host_set_address    0000A71A 
           usb_host_set_configuration
                                   0000A73C 
           usb_host_class_get_lun
                                   0000A75F 
           usb_host_get_device_descriptor_1
                                   0000A793        Segment part 1 (OTP_VECTOR)
           usb_host_get_device_descriptor_2
                                   0000A7C3 
           usb_host_get_configuration_descriptor_1
                                   0000A7DA 
           usb_host_get_configuration_descriptor_2
                                   0000A7FD        Segment part 1 (OTP_VECTOR)
           usb_host_is_mass        0000A8ED        Segment part 1 (OTP_VECTOR)
           usb_host_ep0_enum       0000A8FF        Segment part 1 (OTP_VECTOR)
           usb_host_enum           0000A9D3        device_activate_udisk_do (?device)
           host_sense_code         00008A9B 
           usb_host_mass_init      0000AB7C        Segment part 1 (OTP_VECTOR)
           usb_host_bulk_wait_txrdy
                                   0000ABDB        Segment part 1 (OTP_VECTOR)
           usb_host_bulk_tx        0000AC63        Segment part 1 (OTP_VECTOR)
           usb_host_bulk_wait_rxrdy
                                   0000AC96        Segment part 1 (OTP_VECTOR)
           usb_host_bulk_rx        0000AD0E        Segment part 1 (OTP_VECTOR)
           host_cbw_set            0000AD59 
           host_cbw_send           0000AD9E 
           host_scsi_rx            0000ADC1        Segment part 1 (OTP_VECTOR)
           host_scsi_read          0000AE89 
           host_scsi_write         0000AEB5        Segment part 1 (OTP_VECTOR)
           host_csw_get            0000AF19 
           host_get_sense          0000AF69 
           host_sense_retry        0000AFA8 
           host_scsi_perform_do    0000AFBF 
           host_scsi_perform       0000B0C1        Segment part 1 (OTP_VECTOR)
           host_scsi               0000B0DF 
               is not allocated
           usb_host_is_no_medium   0000B118 
           usb_host_set_no_medium
                                   0000A95F 
           usb_host_set_fail       0000A96D 
               is not allocated
           usb_host_mass_getinfo   0000AA0A        Segment part 1 (OTP_VECTOR)
               is not allocated
           usb_host_test_ready     0000AA65 
               is not allocated
           usb_host_mass_enum      0000AA87        Segment part 1 (OTP_VECTOR)
               is not allocated
           usb_host_mass_enum_try
                                   0000B131 
           usb_host_mass_read_end
                                   0000B165        Segment part 1 (OTP_VECTOR)
                                                   Segment part 34 (?music)
                                                   host_select_phy (device)
           usb_host_mass_read_sector
                                   0000B1A1        Segment part 1 (OTP_VECTOR)
               is not allocated
           usb_host_mass_read_do   0000B2AD        Segment part 1 (OTP_VECTOR)
               is not allocated
           usb_host_mass_read      0000AAEC 
               is not allocated
           usb_host_mass_write_sector
                                   0000B318        Segment part 1 (OTP_VECTOR)
           usb_host_mass_write_do
                                   0000B399 
           usb_host_mass_write     0000AB3F 
               is indirectly called
           usb_host_read_only      0000AB6E 
               is not allocated
           wavs                    000003D2 
           index_tbl               0000268D 
           step_tbl                00002695 
           adpcm_err               000029DD        Segment part 1 (OTP_VECTOR)
           adpcm_decode            000029E2 
           adpcm_rewind            00002A90        Segment part 1 (OTP_VECTOR)
           pcm_decode_do           0000239A 
           wav_decode_do           000023D4 
           wav_get_sample_index    00002001 
           wav_getinfo             0000202F 
           wav_header_parse        0000209C 
           decoder_init_for_wav    00002163        Segment part 1 (OTP_VECTOR)
           wav_init_do             0000217C 
           wav_decode              0000D5AC 
               is not allocated
           wav_init                0000D5B7        music_init (?music)
           ff_asf_header           00008ACF 
           wav_save_point_1        00002447 
           wav_save_point          0000245B        Segment part 1 (OTP_VECTOR)
           wav_calc_frame          000091A1 
           wav_jump                00002462        Segment part 1 (OTP_VECTOR)
           wav_subin               0000249A        Segment part 1 (OTP_VECTOR)
           wav_fill_check          000024F4        Segment part 1 (OTP_VECTOR)
           is_wma_file             00002503        is_other_file (user_music)
           ?SC_DIV_MOD             000082BA 
           ?L_EQ_REW               000082DC 
           ?L_EQ                   000082DF        get_cluster_fix (?fat)
           ?L_EQ_PX_REW            000082F4 
           ?L_EQ_PX                000082F7 
           ?L_EQ_X_REW             0000830C 
           ?L_EQ_X                 0000830F        task_flash_music_event (task_flash)
           ?L_EQ_C_REW             00008324 
           ?L_EQ_C                 00008327        check_fs_fix (?lark_fix)
                                                   spi_flash_init (user_spi)
           ?SL_GT_REW              00008340 
           ?SL_GT                  00008343 
           ?SL_GT_PX_REW           00008358 
           ?SL_GT_PX               0000835B 
           ?UL_GT_REW              00008370 
           ?UL_GT                  00008373        get_Flash_TotalFiles (task_flash)
                                                   spi_mp3flash_read (?spi_api)
           ?UL_GT_PX_REW           00008383 
           ?UL_GT_PX               00008386 
           ?UL_GT_X_REW            00008396 
           ?UL_GT_X                00008399        task_flash_music_event (task_flash)
           ?L_MUL                  000083A9 
           ?L_MUL_REW              000083AC 
           ?UL_DIV_MOD             00008429        task_music_cal_time (task_music)
           ?L_DIV_MOD              000084C3 
           ?L_NEG_R1_REW           000084F0 
           ?L_NEG_R1               000084F3 
           ?L_NEG_REW              00008504 
           ?L_NEG                  00008507 
           ?SL_SHR_REW             00008518 
           ?SL_SHR                 0000851E 
           ?UL_SHR_REW             00008538 
           ?UL_SHR                 0000853E        spi_send_addr_2 (spi)
           ?L_SHL                  00008557        spi_mp3_index_read_program (?spi_api)
                                                   spi_mp3flash_read (?spi_api)
                                                   spi_readID (user_spi)
           ?L_SHL_REW              0000855D 
           ?L_ADD_REW              00008576 
           ?L_ADD                  00008579        spi_readID (user_spi)
           ?L_ADD_X_REW            0000858C 
           ?L_ADD_X                0000858F        spi_mp3flash_read (?spi_api)
           ?L_ADD_C_REW            000085A2 
           ?L_ADD_C                000085A5        get_Flash_TotalFiles (task_flash)
                                                   get_cluster_fix (?fat)
                                                   spi_mp3_index_read_program (?spi_api)
           ?L_ADD_PX_REW           000085BC 
           ?L_ADD_PX               000085BF 
           ?L_ADD_TO_X_REW         000085D5 
           ?L_ADD_TO_X             000085D8        spi_mp3flash_read (?spi_api)
           ?L_ADD_TO_PX_REW        000085EB 
           ?L_ADD_TO_PX            000085EE        spi_mp3flash_read (?spi_api)
           ?L_SUB_REW              00008601 
           ?L_SUB                  00008604 
           ?L_SUB_X_REW            00008618 
           ?L_SUB_X                0000861B 
           ?L_SUB_PX_REW           00008633 
           ?L_SUB_PX               00008636 
           ?L_SUB_FROM_X_REW       0000864E 
           ?L_SUB_FROM_X           00008651        spi_mp3flash_read (?spi_api)
           ?L_AND_REW              00008665 
           ?L_AND                  00008668 
           ?L_AND_X_REW            0000867B 
           ?L_AND_X                0000867E 
           ?L_AND_C_REW            00008691 
           ?L_AND_C                00008694        spi_flash_init (user_spi)
           ?L_AND_PX_REW           000086AB 
           ?L_AND_PX               000086AE 
           ?L_IOR_REW              000086C1 
           ?L_IOR                  000086C4 
           ?L_IOR_C_REW            000086D7 
           ?L_IOR_C                000086DA 
           ?L_XOR_REW              000086F1 
           ?L_XOR                  000086F4 
           ?L_MOV                  00008707 
           ?L_MOV_A                00008716 
           ?L_MOV_PX               0000872B 
           ?L_MOV_X                0000873A        check_fs_fix (?lark_fix)
                                                   spi_mp3flash_read (?spi_api)
                                                   spi_read (user_spi)
                                                   spi_read32 (spi)
                                                   spi_read_hard (spi)
                                                   task_flash_music_deal_msg (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
                                                   task_flash_music_exit (task_flash)
           ?L_MOV_C                00008749        check_fs_fix (?lark_fix)
                                                   get_Flash_TotalFiles (task_flash)
                                                   music_decoder_read (user_fat)
                                                   music_init (?music)
                                                   spi_mp3_index_read_program (?spi_api)
                                                   spi_mp3flash_read (?spi_api)
                                                   spi_mp3flash_seek (?spi_api)
                                                   spi_readID (user_spi)
                                                   task_flash_music_event (task_flash)
                                                   task_music_break_save (task_music)
                                                   task_music_cal_time (task_music)
           ?L_MOV_TO_PX_A          0000875C 
           ?L_MOV_TO_X_REWX        00008771 
           ?L_MOV_TO_X_REW         0000877B 
           ?L_MOV_TO_X             0000877E        music_get_point (?music)
                                                   music_init (?music)
                                                   spi_mp3_index_read_program (?spi_api)
                                                   spi_mp3flash_read (?spi_api)
                                                   spi_mp3flash_seek (?spi_api)
                                                   task_flash_music_deal_msg (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
                                                   task_flash_music_exit (task_flash)
                                                   task_music_break_save (task_music)
           ?S_DIV_MOD              000087C6 
           ?US_DIV_MOD             000087CE        dac_fade_auto (?dac)
                                                   led_7p7s_dispnum (led_7p7s)
           ?SS_SHR_REW             00008827 
           ?SS_SHR                 0000882B        set_sys_clk (clock)
           ?US_SHR_REW             0000883B 
           ?US_SHR                 0000883F 
           ?S_SHL                  0000884E        dac_fade_auto (?dac)
                                                   device_activate_do (device)
                                                   led_7p7s_scan (led_7p7s)
           ?S_SHL_REW              00008851 
           ?ALLOC_EXT_STACK8       00008861        spi_read32 (spi)
                                                   spi_readID (user_spi)
           ?DEALLOC_EXT_STACK8     00008875        Segment part 41 (user_spi)
                                                   get_Flash_TotalFiles (task_flash)
                                                   spi_mp3flash_read (?spi_api)
                                                   spi_read32 (spi)
                                                   spi_readID (user_spi)
                                                   task_flash_music_enter (task_flash)
           ?EXT_STACK_DISP0_16     0000888D        loop_auto (user_music)
                                                   spi_read (user_spi)
                                                   spi_read32 (spi)
                                                   spi_readID (user_spi)
                                                   spi_read_hard (spi)
           ?CALL_IND               0000889E 
           ?FUNC_ENTER_SP          000088A0        check_fs_fix (?lark_fix)
                                                   f_readdir (LARK_FIX_ASM)
                                                   get_Flash_TotalFiles (task_flash)
                                                   get_cluster_fix (?fat)
                                                   host_select_phy (device)
                                                   led_7p7s_disp_str (led_7p7s)
                                                   led_7p7s_scan (led_7p7s)
                                                   music_decoder_read (user_fat)
                                                   sd_active_safe (?device)
                                                   set_sys_clk (clock)
                                                   spi_flash_init (user_spi)
                                                   spi_mp3_index_read_program (?spi_api)
                                                   spi_mp3flash_read (?spi_api)
                                                   spi_readID (user_spi)
                                                   spi_read_hard (spi)
                                                   spi_send_addr_2 (spi)
                                                   task_flash_music_enter (task_flash)
                                                   task_music_cal_time (task_music)
           ?FUNC_LEAVE_SP          000088B6        Segment part 18 (?spi_api)
                                                   Segment part 26 (spi)
                                                   check_fs_fix (?lark_fix)
                                                   get_Flash_TotalFiles (task_flash)
                                                   get_cluster_fix (?fat)
                                                   host_select_phy (device)
                                                   led_7p7s_disp_str (led_7p7s)
                                                   led_7p7s_scan (led_7p7s)
                                                   music_decoder_read (user_fat)
                                                   sd_active_safe (?device)
                                                   set_sys_clk (clock)
                                                   spi_flash_init (user_spi)
                                                   spi_readID (user_spi)
                                                   task_flash_music_enter (task_flash)
                                                   task_music_cal_time (task_music)
           ?PUSH_ISTACK_I_FOUR     000088CD        get_Flash_TotalFiles (task_flash)
                                                   spi_mp3flash_read (?spi_api)
                                                   spi_read (user_spi)
                                                   spi_read32 (spi)
                                                   task_flash_music_enter (task_flash)
           ?PUSH_ISTACK_I_THREE    000088D1 
           ?PUSH_ISTACK_I          000088D3 
           ?PUSH_ISTACK_P_FOUR     000088DF 
           ?PUSH_ISTACK_P_THREE    000088E3 
           ?PUSH_ISTACK_P_TWO      000088E7 
           ?PUSH_ISTACK_P_ONE      000088EB 
           ?PUSH_ISTACK_P          000088ED 
           ?PUSH_ISTACK_X_FOUR     000088F9 
           ?PUSH_ISTACK_X_THREE    000088FD 
           ?PUSH_ISTACK_X_TWO      00008901        task_flash_music_enter (task_flash)
                                                   timer2_isr (main)
           ?PUSH_ISTACK_X_ONE      00008905 
           ?PUSH_ISTACK_X          00008907 
           ?UC_SWITCH_DENSE        00008919        key_scan (user_key)
                                                   run_task (task)
                                                   set_sys_clk (clock)
                                                   spi_cs_disable (user_spi)
                                                   spi_cs_enable (user_spi)
                                                   task_flash_music_direct (task_flash)
                                                   task_poweroff_deal_msg (task_poweroff)
           ?UC_SWITCH_SPARSE       0000894F        deal_msg (task)
                                                   task_flash_music_deal_msg (task_flash)
                                                   task_idle (task_idle)
           ?UC_SWITCH_SPARSE_LEAVE
                                   0000896C 
           ?UC_JMP_IF_IN_RANGE     00008979 
           ?UC_JMP_IF_VALUE        00008998 
  SEGMENTS IN THE MODULE
  ======================
M_CONSTANT
  Relative segment, address: CODE 00C00000 - 00C089E7 (0x89e8 bytes), align: 0
  Segment part 0.             Intra module refs:   check_fs_fix (?lark_fix)
                                                   get_Flash_TotalFiles (task_flash)
                                                   music_init (?music)
                                                   spi_flash_init (user_spi)
                                                   spi_mp3_index_read_program (?spi_api)
                                                   spi_mp3flash_read (?spi_api)
                                                   spi_mp3flash_seek (?spi_api)
                                                   spi_readID (user_spi)
                                                   task_flash_music_event (task_flash)
                                                   task_music_break_save (task_music)
                                                   task_music_cal_time (task_music)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_0            00C089C8 
           __Constant_a            00C089D4 
           __Constant_3c           00C089E8 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?clock

  SEGMENTS IN THE MODULE
  ======================
CLK_SEG
  Relative segment, address: CODE 0000428D - 0000429B (0xf bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pll_clk_x32k            0000428D        set_sys_clk (clock)
                                                   sys_pll_xosc (clock)
               calls direct
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 0000429C - 000042A8 (0xd bytes), align: 0
  Segment part 12.            Intra module refs:   pll_clk_x32k
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 000042A9 - 000042B6 (0xe bytes), align: 0
  Segment part 13.            Intra module refs:   Segment part 12
                                                   Segment part 17
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 000042B7 - 000042CF (0x19 bytes), align: 0
  Segment part 15.            Intra module refs:   pll_clk_x32k
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 000042D0 - 000042E7 (0x18 bytes), align: 0
  Segment part 17.            Intra module refs:   pll_clk_x32k
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 000042E8 - 00004307 (0x20 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pll_clk_rc10m           000042E8        sysclk_set (clock)
               calls direct
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 00004308 - 0000432C (0x25 bytes), align: 0
  Segment part 19.            Intra module refs:   pll_clk_rc10m
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 0000432D - 00004337 (0xb bytes), align: 0
  Segment part 20.            Intra module refs:   Segment part 17
                                                   Segment part 19
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 00004338 - 0000433E (0x7 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 17
                                                   Segment part 19
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 0000433F - 00004357 (0x19 bytes), align: 0
  Segment part 23.            Intra module refs:   pll_clk_rc10m
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 00004358 - 00004388 (0x31 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sys_clk_pll             00004358        set_sys_clk (clock)
                                                   sys_pll_xosc (clock)
                                                   sysclk_set (clock)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 00004389 - 00004394 (0xc bytes), align: 0
  Segment part 25.            Intra module refs:   Segment part 21
                                                   sys_clk_pll

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cmain

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 000041F1, align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cmain                  000041F1        Segment part 11 (CSTARTUP)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000041F1 - 000041F9 (0x9 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init_call   000041F1        __low_level_init (?low_level_init)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 000041FA - 00004207 (0xe bytes), align: 0
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_DATA_Z           000041FA        Segment part 18 (main)
                                                   Segment part 19 (main)
                                                   Segment part 21 (main)
                                                   Segment part 22 (main)
                                                   Segment part 23 (main)
                                                   Segment part 24 (main)
                                                   Segment part 26 (main)
                                                   Segment part 27 (main)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00004208 - 00004215 (0xe bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IDATA_Z          00004208 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00004216 - 00004225 (0x10 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_Z          00004216        SW1_WHIRL_cnt (user_key)
                                                   SW2_WHIRL_cnt (user_key)
                                                   SW3_WHIRL_cnt (user_key)
                                                   Segment part 15 (led_7p7s)
                                                   Segment part 18 (user_io)
                                                   Segment part 20 (main)
                                                   Segment part 22 (task_flash)
                                                   Segment part 25 (main)
                                                   Segment part 25 (user_key)
                                                   Segment part 26 (user_key)
                                                   Segment part 31 (user_key)
                                                   Segment part 32 (user_key)
                                                   Segment part 33 (user_key)
                                                   Segment part 34 (user_key)
                                                   Segment part 37 (user_key)
                                                   Segment part 38 (user_key)
                                                   Segment part 39 (user_key)
                                                   Timer1_flag (task)
                                                   count_led_off (task_idle)
                                                   dev_ctl (device)
                                                   device_chg (task)
                                                   f_Clear_WDT (task)
                                                   f_Encrypt (file_filter)
                                                   first (task_music)
                                                   flash_chipnum (user_spi)
                                                   flash_music_total (task_flash)
                                                   main_loop_count (task)
                                                   mem_ctl (mem)
                                                   msc_ctl (?music)
                                                   mute_status_change (task)
                                                   poweroff_ctl (task_poweroff)
                                                   rtc_flag (user_init)
                                                   sd_chk (?device)
                                                   spi_ctl (spi)
                                                   sys_ctl (user_setting)
                                                   t_fat (?fat)
                                                   t_msc (task_music)
                                                   t_pwn_duty1 (main)
                                                   t_pwn_duty2 (main)
                                                   u_msc (user_music)
                                                   vol_less_33V_flag (user_key)
                                                   vol_less_34V_blink (theme_music)
                                                   vol_less_34V_flag (user_key)
                                                   vol_less_power_warning_flag (user_key)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00004226 - 0000424E (0x29 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_XDATA_I          00004226        SD_FLAG (user_io)
                                                   Segment part 35 (user_key)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000424F - 00004277 (0x29 bytes), align: 0
  Segment part 31.            Intra module refs:   __low_level_init_call
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __INIT_IXDATA_I         0000424F 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00004278 - 0000427A (0x3 bytes), align: 0
  Segment part 32.            Intra module refs:   ?cmain
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_main              00004278 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : CSTARTUP

  SEGMENTS IN THE MODULE
  ======================
REGISTERS
  Relative segment, address: DATA 00000000, align: 0
  Segment part 0.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?REGISTERS              00000000 
    -------------------------------------------------------------------------
ISTACK
  Relative segment, address: IDATA 00000095, align: 0
  Segment part 1.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ISTACK_START           00000095 
    -------------------------------------------------------------------------
EXT_STACK
  Relative segment, address: XDATA 00000100, align: 0
  Segment part 4.             Intra module refs:   Segment part 6
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EXT_STACK_START        00000100 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00004000 - 00004002 (0x3 bytes), align: 0
  Segment part 5. ROOT.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 0000427B - 00004283 (0x9 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         0000427B        ?reset_vector (OTP_VECTOR)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?RESET_ESP              0000427E 
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00004284 - 00004286 (0x3 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?RESET_PDATA_BANK       00004284        ep0_ptr (?usb)
                                                   fat_file (?fat)
                                                   file_dir (?fat)
                                                   fs_hook (?fat)
                                                   host_mass_ctl (?usb)
                                                   msg_pool (user_init)
                                                   usb_ctrl (?usb)
                                                   usb_host (?usb)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: CODE 00004287 - 00004289 (0x3 bytes), align: 0
  Segment part 11.            Intra module refs:   Absolute parts

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : VIRTUAL_REGISTERS

  SEGMENTS IN THE MODULE
  ======================
BREG
  Relative segment, address: BIT 00000020.0 - 00000020.7 (0x8 bits), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?B0                     00000020.0      Absolute parts (CSTARTUP)
    -------------------------------------------------------------------------
VREG
  Relative segment, address: DATA 00000030, align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?V0                     00000030        KEY_Whire1 (user_key)
                                                   KEY_Whire2 (user_key)
                                                   Segment part 23 (spi)
                                                   Segment part 27 (?music)
                                                   Segment part 30 (spi)
                                                   Segment part 31 (spi)
                                                   Segment part 33 (task_music)
                                                   Segment part 38 (dac)
                                                   Segment part 40 (task_flash)
                                                   Segment part 41 (user_spi)
                                                   Segment part 42 (task_flash)
                                                   Segment part 45 (task_flash)
                                                   Segment part 57 (user_key)
                                                   check_fs_fix (?lark_fix)
                                                   dac_fade_auto (?dac)
                                                   dac_set_volume (dac)
                                                   dac_set_volume_direct (dac)
                                                   decoder_seek (user_fat)
                                                   device_activate_do (device)
                                                   device_change_check (device)
                                                   f_readdir (LARK_FIX_ASM)
                                                   get_Flash_TotalFiles (task_flash)
                                                   get_cluster_fix (?fat)
                                                   host_select_phy (device)
                                                   key_scan (user_key)
                                                   led_7p7s_disp_str (led_7p7s)
                                                   led_7p7s_disp_vol (led_7p7s)
                                                   led_7p7s_dispnum (led_7p7s)
                                                   led_7p7s_scan (led_7p7s)
                                                   music_decoder_read (user_fat)
                                                   music_init (?music)
                                                   sd_active_safe (?device)
                                                   set_sys_clk (clock)
                                                   spi_flash_init (user_spi)
                                                   spi_mp3_index_read_program (?spi_api)
                                                   spi_mp3flash_read (?spi_api)
                                                   spi_mp3flash_seek (?spi_api)
                                                   spi_read (user_spi)
                                                   spi_read32 (spi)
                                                   spi_readID (user_spi)
                                                   spi_read_hard (spi)
                                                   spi_send_addr_2 (spi)
                                                   task_flash_music_deal_msg (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
                                                   task_flash_music_exit (task_flash)
                                                   task_music_break_save (task_music)
                                                   task_music_cal_time (task_music)
                                                   timer2_isr (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : REGISTER_BANK1

  SEGMENTS IN THE MODULE
  ======================
__REG_BANK1
  Relative segment, address: DATA 00000008 - 0000000F (0x8 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __REG_BANK_1            00000008        mp3_isr (user_music)
                                                   soft_isr (user_music)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : REGISTER_BANK2

  SEGMENTS IN THE MODULE
  ======================
__REG_BANK2
  Relative segment, address: DATA 00000010 - 00000017 (0x8 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __REG_BANK_2            00000010        timer2_isr (main)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?dac

  SEGMENTS IN THE MODULE
  ======================
XDATA_AN
  Relative segment, address: XDATA 000003C2 - 000003CA (0x9 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eq_buf                  000003C2 
    -------------------------------------------------------------------------
TRIM_XDATA
  Relative segment, address: XDATA 00000707 - 0000070B (0x5 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           trim_val                00000707 
    -------------------------------------------------------------------------
DAC_XDATA
  Relative segment, address: XDATA 000003CB - 000003D1 (0x7 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   Segment part 16
                                                   Segment part 19
                                                   dac_anl_fade_out
                                                   dac_fade_auto
                                                   dac_fade_in_auto
                                                   dac_fade_wait
                                                   dac_volume_fade_set
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_ctl                 000003CB        dac_power_on (dac)
                                                   dac_set_volume (dac)
                                                   dac_set_volume_direct (dac)
    -------------------------------------------------------------------------
IDATA_AN
  Relative segment, address: IDATA 00000095 - 00000095 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_trim                00000095 
    -------------------------------------------------------------------------
BDATA_N
  Relative segment, address: DATA 00000027 - 00000027 (0x1 bytes), align: 0
  Segment part 12. ROOT.      Intra module refs:   dac_fade_auto
                                                   dac_fade_in
                                                   dac_fade_in_auto
                                                   dac_fade_out
                                                   dac_volume_fade_set
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           b_dac                   00000027        dac_power_on (dac)
                                                   dac_set_volume (dac)
                                                   dac_set_volume_direct (dac)
                                                   music_play (?music)
                                                   music_stop (?music)
                                                   mute_ctl_auto (user_io)
                                                   mute_disable (user_io)
                                                   mute_enable (user_io)
                                                   run_task (task)
                                                   system_init (user_init)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_exit (task_flash)
                                                   user_set_mute (user_setting)
    -------------------------------------------------------------------------
XDATA_N
  Relative segment, address: XDATA 00000280 - 00000280 (0x1 bytes), align: 0
  Segment part 13. ROOT.      Intra module refs:   dac_fade_in
                                                   dac_fade_out
                                                   dac_fade_wait
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fade_ctl                00000280        system_init (user_init)
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 0000508F - 000050A8 (0x1a bytes), align: 0
  Segment part 14.            Intra module refs:   dac_fade_out
                                                   dac_fade_out_auto
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_anl_fade_out        0000508F 
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 000050A9 - 000050CD (0x25 bytes), align: 0
  Segment part 15.            Intra module refs:   dac_fade_auto
                                                   dac_fade_in
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_fade_in_auto        000050A9 
               calls direct
               stack 1 = 00000002 ( 00000000 )
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 000050CE - 000050D4 (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   dac_fade_in_auto
                                                   dac_volume_fade_set
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 000050D5 - 000050F0 (0x1c bytes), align: 0
  Segment part 17.            Intra module refs:   dac_fade_auto
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_fade_out_auto       000050D5 
               calls direct
               stack 1 = 00000002 ( 00000000 )
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 000050F1 - 0000517C (0x8c bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_fade_auto           000050F1        timer2_isr (main)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 0000517D - 00005188 (0xc bytes), align: 0
  Segment part 19.            Intra module refs:   dac_fade_auto
                                                   dac_fade_in_auto
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 00005189 - 0000519D (0x15 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_fade_wait           00005189        Segment part 35 (?music)
                                                   dac_power_on (dac)
                                                   music_stop (?music)
                                                   run_task (task)
                                                   task_flash_music_exit (task_flash)
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 0000519E - 000051BC (0x1f bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_fade_in             0000519E        music_play (?music)
                                                   user_set_mute (user_setting)
               calls direct
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 000051BD - 000051E1 (0x25 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_fade_out            000051BD        dac_power_on (dac)
                                                   music_stop (?music)
                                                   task_flash_music_exit (task_flash)
                                                   user_set_mute (user_setting)
               calls direct
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 000051E2 - 000051F0 (0xf bytes), align: 0
  Segment part 23.            Intra module refs:   dac_fade_out
                                                   dac_fade_out_auto
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 000051F1 - 0000520E (0x1e bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_volume_fade_set     000051F1        dac_set_volume (dac)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : DEV_ASM

  SEGMENTS IN THE MODULE
  ======================
DEV_ASM
  Relative segment, address: CODE 00005F22 - 00005F4A (0x29 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           device_get              00005F22        Segment part 1 (OTP_VECTOR)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?device

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000500 - 00000500 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   sd_active_safe
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_chk                  00000500        i2c_sd_mux_enter (user_i2c)
                                                   i2c_sd_mux_exit (user_i2c)
                                                   my_mal_get_status (?lark_fix)
                                                   sd_get_status (device)
                                                   sd_group_sel (user_io)
                                                   sd_set_status (device)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004455 - 000044A7 (0x53 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_active_safe          00004455        device_activate_do (device)
               calls direct
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000044A8 - 000044C2 (0x1b bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           device_activate_udisk_do
                                   000044A8        Segment part 28 (device)
                                                   device_activate_do (device)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 00005FF3 - 00006002 (0x10 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_host_is_online      00005FF3        Segment part 1 (OTP_VECTOR)
               calls direct
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 00006003 - 00006028 (0x26 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_device_is_online    00006003        Segment part 1 (OTP_VECTOR)
               calls direct
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 00006029 - 0000603A (0x12 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_host_enable_testready
                                   00006029        Segment part 34 (?music)
                                                   device_activate_do (device)
                                                   music_init (?music)
                                                   music_play (?music)
                                                   usb_host_set_actived (device)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?fat

  SEGMENTS IN THE MODULE
  ======================
FAT_XDATA
  Relative segment, address: XDATA 00000468 - 0000048E (0x27 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fat_fs                  00000468 
    -------------------------------------------------------------------------
FAT_PDATA
  Relative segment, address: XDATA 0000003F - 0000004C (0xe bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   fs_first_win_tick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fs_hook                 0000003F        check_fs_fix (?lark_fix)
                                                   libvar_init (?lark_fix)
    -------------------------------------------------------------------------
FAT_PDATA
  Relative segment, address: XDATA 0000004D - 00000094 (0x48 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   get_cluster_fix
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fat_file                0000004D        spi_mp3flash_read (?spi_api)
    -------------------------------------------------------------------------
FAT_PDATA
  Relative segment, address: XDATA 00000095 - 000000A4 (0x10 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           file_dir                00000095 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000501 - 00000524 (0x24 bytes), align: 0
  Segment part 11.            Intra module refs:   fs_cur_dev
                                                   fs_sel
                                                   fs_sel_new
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           t_fat                   00000501        device_change_check (device)
                                                   system_init (user_init)
                                                   usb_host_enable_testready (?device)
    -------------------------------------------------------------------------
DIR_PATH_XDATA
  Relative segment, address: XDATA 000107D0 - 00010883 (0xb4 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dir_path                000107D0 
    -------------------------------------------------------------------------
DIR_PATH_XDATA
  Relative segment, address: XDATA 00010884 - 000108B9 (0x36 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dir_cache               00010884 
    -------------------------------------------------------------------------
XDATA_N
  Relative segment, address: XDATA 00000281 - 000002C0 (0x40 bytes), align: 0
  Segment part 14. ROOT.      Intra module refs:   fctl_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clust_buf               00000281 
    -------------------------------------------------------------------------
FILE_POINT_BUF
  Relative segment, address: XDATA 000005C8 - 00000706 (0x13f bytes), align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           file_point              000005C8 
    -------------------------------------------------------------------------
FAT_COM_SEG
  Relative segment, address: CODE 0000615A - 0000615F (0x6 bytes), align: 0
  Segment part 31.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fs_cur_dev              0000615A        Segment part 32 (?music)
                                                   device_change_check (device)
                                                   device_check_stop (task)
                                                   host_select_phy (device)
                                                   led_7p7s_disp_device (led_7p7s)
                                                   mem_event (mem)
                                                   sd_active_safe (?device)
    -------------------------------------------------------------------------
FAT_COM_SEG
  Relative segment, address: CODE 00006160 - 00006183 (0x24 bytes), align: 0
  Segment part 32.            Intra module refs:   fs_sel_new
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fs_sel                  00006160 
    -------------------------------------------------------------------------
FAT_COM_SEG
  Relative segment, address: CODE 00006184 - 000061C2 (0x3f bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fs_sel_new              00006184        comm_event (task)
               calls direct
    -------------------------------------------------------------------------
FAT_API_SEG
  Relative segment, address: CODE 000061C3 - 000061C8 (0x6 bytes), align: 0
  Segment part 45.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fs_first_win_tick       000061C3        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: DATA 0000006D - 0000006D (0x1 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exfat_item              0000006D 
    -------------------------------------------------------------------------
FAT_API_SEG
  Relative segment, address: CODE 000061C9 - 000061D2 (0xa bytes), align: 0
  Segment part 55. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           fctl_init               000061C9        music_init (?music)
               calls direct
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000044C3 - 000044F9 (0x37 bytes), align: 0
  Segment part 65.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_cluster_fix         000044C3        Segment part 1 (OTP_VECTOR)
               calls direct
               stack 1 = 00000000 ( 0000000B )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?lark_fix

  SEGMENTS IN THE MODULE
  ======================
XDATA_N
  Relative segment, address: XDATA 000002C1 - 000002C4 (0x4 bytes), align: 0
  Segment part 7.             Intra module refs:   libvar_init
                                                   mp3_stereo_fix
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isd_isr                 000002C1        __isd_isr (LARK_FIX_ASM)
                                                   isdset_fix (LARK_FIX_ASM)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004878 - 0000487B (0x4 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           bug_list                00004878        isdset_fix (LARK_FIX_ASM)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000044FA - 000044FA (0x1 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_insert               000044FA        fs_sel_new (?fat)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000044FB - 000044FB (0x1 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_remove               000044FB        fs_sel_new (?fat)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000044FC - 0000450B (0x10 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           libvar_init             000044FC        system_init (user_init)
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 0000525C - 00005274 (0x19 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mp3_stereo_fix          0000525C        mp3_dec_subin (?mp3)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000450C - 00004543 (0x38 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           my_mal_get_status       0000450C        Segment part 1 (OTP_VECTOR)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004544 - 000045D1 (0x8e bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           check_fs_fix            00004544        Segment part 1 (OTP_VECTOR)
               calls direct
               stack 1 = 00000000 ( 00000007 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : LARK_FIX_ASM

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 000045D2 - 000045D9 (0x8 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __isd_isr               000045D2        Absolute parts (OTP_VECTOR)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000045DA - 00004628 (0x4f bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           isdset_fix              000045DA        mp3_stereo_fix (?lark_fix)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004629 - 0000463A (0x12 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mp3_stereo_isdfix       00004629        bug_list (?lark_fix)
               is indirectly called
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000463B - 00004655 (0x1b bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_readdir               0000463B 
               is not allocated

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?mp3

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000E6 - 000000E6 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AUCON8                  000000E6 
    -------------------------------------------------------------------------
MP3_DATA
  Relative segment, address: DATA 0000005C - 0000005D (0x2 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   mp3_dec_subin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mp3_info                0000005C 
    -------------------------------------------------------------------------
IDATA_AN
  Relative segment, address: IDATA 000000A9 - 000000A9 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mp3s_ch                 000000A9 
    -------------------------------------------------------------------------
IDATA_AN
  Relative segment, address: IDATA 000000B5 - 000000B5 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mp3s_sync_sta           000000B5 
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005275 - 00005289 (0x15 bytes), align: 0
  Segment part 11.            Intra module refs:   mp3_dec_subin
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mp3_sfb_enable          00005275 
               stack 1 = 00000001 ( 00000000 )
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 0000528A - 000052FD (0x74 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mp3_dec_subin           0000528A        Segment part 1 (OTP_VECTOR)
               calls direct
               stack 1 = 00000000 ( 00000001 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?music

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000E7 - 000000E7 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AUCON9                  000000E7 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EE - 000000EE (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AUCON6                  000000EE 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000525 - 0000053F (0x1b bytes), align: 0
  Segment part 15.            Intra module refs:   Segment part 24
                                                   Segment part 39
                                                   msc_mp3_decode
                                                   music_event
                                                   music_get_status
                                                   music_init
                                                   music_play
                                                   music_stop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           msc_ctl                 00000525        music_decode (user_music)
                                                   music_get_mtime (MUSIC_ASM)
                                                   music_update_time (MUSIC_ASM)
                                                   spi_mp3flash_read (?spi_api)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_exit (task_flash)
                                                   task_flash_music_new (task_flash)
    -------------------------------------------------------------------------
DECODER_BUF
  Relative segment, address: XDATA 000007D0 - 000009D5 (0x206 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dec_bs                  000007D0 
    -------------------------------------------------------------------------
DECODER_BUF
  Relative segment, address: XDATA 000009D6 - 00000BFF (0x22a bytes), align: 0
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dec_buf                 000009D6 
    -------------------------------------------------------------------------
DECODER_BUF
  Relative segment, address: XDATA 00000C00 - 00000FFF (0x400 bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decext_buf              00000C00        get_Flash_TotalFiles (task_flash)
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 000052FE - 00005329 (0x2c bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           msc_mp3_decode          000052FE        music_decode (user_music)
               calls direct
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 0000532A - 0000532F (0x6 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           music_get_status        0000532A        task_flash_music_event (task_flash)
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005330 - 0000538A (0x5b bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           music_stop              00005330        device_check_stop (task)
                                                   sd_active_safe (?device)
                                                   task_flash_music_event (task_flash)
                                                   task_flash_music_exit (task_flash)
                                                   task_flash_music_new (task_flash)
               calls direct
               stack 1 = 00000004 ( 00000000 )
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 0000538B - 00005394 (0xa bytes), align: 0
  Segment part 24.            Intra module refs:   music_init
                                                   music_play
                                                   music_stop
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005395 - 000053FF (0x6b bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           music_init              00005395        task_flash_music_init (task_flash)
               calls direct
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005400 - 00005408 (0x9 bytes), align: 0
  Segment part 27.            Intra module refs:   music_init
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005409 - 00005412 (0xa bytes), align: 0
  Segment part 28.            Intra module refs:   music_init
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005413 - 00005420 (0xe bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           music_event             00005413        task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005421 - 0000544C (0x2c bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           music_play              00005421        task_flash_music_enter (task_flash)
                                                   task_flash_music_new (task_flash)
               calls direct
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 0000544D - 00005452 (0x6 bytes), align: 0
  Segment part 31.            Intra module refs:   music_init
                                                   music_play
                                                   music_stop
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005453 - 00005457 (0x5 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 24
                                                   Segment part 31
                                                   music_stop
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005458 - 00005460 (0x9 bytes), align: 0
  Segment part 34.            Intra module refs:   music_stop
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005461 - 00005469 (0x9 bytes), align: 0
  Segment part 35.            Intra module refs:   music_stop
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 0000546A - 00005472 (0x9 bytes), align: 0
  Segment part 39.            Intra module refs:   music_event
                                                   music_play
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005473 - 00005488 (0x16 bytes), align: 0
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           music_get_point         00005473        Segment part 40 (task_flash)
                                                   task_music_break_save (task_music)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : MUSIC_ASM

  SEGMENTS IN THE MODULE
  ======================
MUSIC_SEG
  Relative segment, address: CODE 00005489 - 00005494 (0xc bytes), align: 0
  Segment part 0. ROOT.       Intra module refs:   music_update_time
                                                   qctl_init_1
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005495 - 000054AB (0x17 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           music_update_time       00005495        mp3_dec_subin (?mp3)
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 000054AC - 000054BA (0xf bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           music_get_mtime         000054AC        task_music_cal_time (task_music)
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 000054BB - 000054C7 (0xd bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           qctl_init_1             000054BB        Segment part 28 (?music)
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 000054C8 - 000054D0 (0x9 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decoder_seek_set        000054C8        music_init (?music)

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : OTP_VECTOR

Absolute parts
     0000407B - 0000407D
  SEGMENTS IN THE MODULE
  ======================
OTP_RESET
  Relative segment, address: CODE 00004080 - 00004082 (0x3 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           00004080 
    -------------------------------------------------------------------------
OTP_VECTOR
  Relative segment, address: CODE 00004083 - 000041F0 (0x16e bytes), align: 0
  Segment part 1. ROOT.

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : RTC_ASM

  SEGMENTS IN THE MODULE
  ======================
MEMRTCRAM
  Relative segment, address: CODE 000071FB - 00007218 (0x1e bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rtcram_read_multi       000071FB        Segment part 42 (task_flash)
                                                   mem_read_init_info (mem)
                                                   read_flash_num_rtcram (mem_rtcram)
    -------------------------------------------------------------------------
MEMRTCRAM
  Relative segment, address: CODE 00007219 - 00007227 (0xf bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rtcram_write_byte       00007219        write_device_rtcram (mem_rtcram)
                                                   write_playmode_rtcram (mem_rtcram)
                                                   write_volume_rtcram (mem_rtcram)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?sd

  SEGMENTS IN THE MODULE
  ======================
SD_SEG
  Relative segment, address: CODE 00005F4B - 00005F5B (0x11 bytes), align: 0
  Segment part 6.             Intra module refs:   sd_stop
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_set_rate             00005F4B        Segment part 1 (OTP_VECTOR)
                                                   set_sys_clk (clock)
               stack 1 = 00000001 ( 00000000 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004656 - 00004673 (0x1e bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_stop                 00004656        Segment part 1 (OTP_VECTOR)
                                                   i2c_sd_mux_enter (user_i2c)
                                                   music_stop (?music)
                                                   sd_active_safe (?device)
               calls direct
               stack 1 = 00000000 ( 00000001 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?spi_api

  SEGMENTS IN THE MODULE
  ======================
XDATA_N
  Relative segment, address: XDATA 000002C5 - 000002D0 (0xc bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   spi_mp3_index_read_program
                                                   spi_mp3flash_read
                                                   spi_mp3flash_seek
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_music             000002C5        Segment part 40 (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 000063B0 - 0000640F (0x60 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_mp3_index_read_program
                                   000063B0        spi_mp3_index_read (user_spi)
               calls direct
               stack 1 = 00000000 ( 0000000B )
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 00006410 - 00006414 (0x5 bytes), align: 0
  Segment part 18.            Intra module refs:   spi_mp3_index_read_program
                                                   spi_mp3flash_read
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 00006415 - 000064D6 (0xc2 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_mp3flash_read       00006415        decoder_read (user_fat)
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 000064D7 - 000064F8 (0x22 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_mp3flash_seek       000064D7        decoder_seek (user_fat)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000487C - 0000487F (0x4 bytes), align: 0
  Segment part 10.            Intra module refs:   spi_mp3_index_read_program
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_4            0000487C 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004880 - 00004883 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   spi_mp3flash_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_200          00004880 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?system

  SEGMENTS IN THE MODULE
  ======================
SYS_DATA
  Relative segment, address: DATA 00000044 - 00000046 (0x3 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sys                     00000044        device_activate_udisk_do (?device)
                                                   sd_set_rate (?sd)
                                                   set_sys_clk (clock)
                                                   sysclk_set (clock)
                                                   timer2_isr (main)
    -------------------------------------------------------------------------
XDATA_N
  Relative segment, address: XDATA 000002D1 - 000002D1 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sys_fix                 000002D1 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?usb

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000DB - 000000DB (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USBCON0                 000000DB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000DD - 000000DD (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USBCON2                 000000DD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000FC - 000000FC (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USBDPDM                 000000FC 
    -------------------------------------------------------------------------
USB_HOST_PDATA
  Relative segment, address: XDATA 0000001D - 0000002D (0x11 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_ctrl                0000001D 
    -------------------------------------------------------------------------
USB_HOST_PDATA
  Relative segment, address: XDATA 0000002E - 00000034 (0x7 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_host                0000002E 
    -------------------------------------------------------------------------
USB_HOST_PDATA
  Relative segment, address: XDATA 00000035 - 00000036 (0x2 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ep0_ptr                 00000035 
    -------------------------------------------------------------------------
USB_HOST_MASS_PDATA
  Relative segment, address: XDATA 0000000D - 0000001C (0x10 bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           host_mass_ctl           0000000D 
    -------------------------------------------------------------------------
XDATA_N
  Relative segment, address: XDATA 000002D2 - 000002D7 (0x6 bytes), align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_chk                 000002D2        Segment part 28 (device)
                                                   host_select_phy (device)
                                                   usb_host_disclk (device)
                                                   usb_host_get_actived (device)
                                                   usb_host_is_online (?device)
                                                   usb_host_need_testready (device)
                                                   usb_host_resume (device)
                                                   usb_host_set_actived (device)
                                                   usb_host_suspend (device)
                                                   usb_switch_stable_device (user_usb)
                                                   usb_switch_stable_host (user_usb)
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 0000603B - 0000604A (0x10 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_port_init           0000603B        Segment part 28 (device)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?usb_chk

  SEGMENTS IN THE MODULE
  ======================
IDATA_N
  Relative segment, address: IDATA 0000007D - 0000007E (0x2 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   usb_set_check_mode_std
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_chk_std             0000007D 
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 0000604B - 0000605D (0x13 bytes), align: 0
  Segment part 11.            Intra module refs:   Segment part 14
                                                   usb_switch_stable_device_std
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_set_check_mode_std
                                   0000604B 
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 0000605E - 00006064 (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   usb_switch_stable_host_std
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 00006065 - 00006068 (0x4 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_switch_stable_host_std
                                   00006065        usb_switch_stable_host (user_usb)
               calls direct
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 00006069 - 00006071 (0x9 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_switch_stable_device_std
                                   00006069        usb_switch_stable_device (user_usb)
               calls direct

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : WEAK_HOOK

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 00004674 - 00004674 (0x1 bytes), align: 0
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_device_reset        00004674        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004675 - 00004675 (0x1 bytes), align: 0
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_get_str_desc        00004675        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004676 - 00004676 (0x1 bytes), align: 0
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_spk_set_volume      00004676        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004677 - 00004677 (0x1 bytes), align: 0
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_get_descriptor_end
                                   00004677        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004678 - 00004678 (0x1 bytes), align: 0
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mal_sd_detect           00004678        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004679 - 0000467A (0x2 bytes), align: 0
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mal_sd_recheck          00004679        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000467B - 0000467B (0x1 bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mal_device_activate_try
                                   0000467B        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000467C - 0000467C (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mal_idle                0000467C        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000467D - 0000467E (0x2 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kedir_pause             0000467D        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000467F - 0000467F (0x1 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           kedir_resume            0000467F        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
CHECKSUM
  Relative segment, address: CODE 00007FED - 00007FEF (0x3 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __reset_vector          00007FED        Segment part 5 (CSTARTUP)

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\adckey.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\api_rtc.r51
  PROGRAM MODULE, NAME : api_rtc

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 0000008B - 0000008B (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MEMCON                  0000008B 
    -------------------------------------------------------------------------
RTC_INIT
  Relative segment, address: CODE 00005589 - 000055AE (0x26 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           irtc_init               00005589        system_init (user_init)
               calls direct

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\clock.r51
  PROGRAM MODULE, NAME : clock

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A3 - 000000A3 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IRTCON1                 000000A3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BA - 000000BA (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0DIR                   000000BA 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TMR2CON1                000000C2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C5 - 000000C5 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UARTBAUD                000000C5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UARTBAUDH               000000C6 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CB - 000000CB (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON                  000000CB 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CD - 000000CD (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON2                 000000CD 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CE - 000000CE (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON3                 000000CE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CF - 000000CF (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON4                 000000CF 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E2 - 000000E2 (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TMR1CON1                000000E2 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004884 - 00004887 (0x4 bytes), align: 0
  Segment part 17.            Intra module refs:   set_sys_clk
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           pll_v_s                 00004884 
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 00004395 - 000043C1 (0x2d bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sysclk_set              00004395        system_init (user_init)
               calls direct
    -------------------------------------------------------------------------
CLK_SEG
  Relative segment, address: CODE 000043C2 - 000043D4 (0x13 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sys_pll_xosc            000043C2        system_init (user_init)
               calls direct
    -------------------------------------------------------------------------
SET_SYS_CLK_SEG
  Relative segment, address: CODE 00004EC8 - 00004F49 (0x82 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_sys_clk             00004EC8        task_flash_music_enter (task_flash)
               calls direct
               stack 1 = 00000000 ( 00000005 )
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000A8 - 000000A8 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_IE0                  000000A8 

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\config.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\dac.r51
  PROGRAM MODULE, NAME : dac

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000B1 - 000000B1 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KVCCON                  000000B1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B2 - 000000B2 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KVCCON2                 000000B2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B3 - 000000B3 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KVCADR                  000000B3 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PCON1                   000000C9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AUCON10                 000000D9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000E8 - 000000E8 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AUCON0                  000000E8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000ED - 000000ED (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AUCON5                  000000ED 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000EF - 000000EF (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AUCON7                  000000EF 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000F7 - 000000F7 (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCON                  000000F7 
    -------------------------------------------------------------------------
USER_SETTING_CONST
  Relative segment, address: CODE 0000732C - 0000735E (0x33 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 40
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tbl_anlvol              0000732C 
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 00004F4A - 00004F61 (0x18 bytes), align: 0
  Segment part 20.            Intra module refs:   dac_power_on
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           outbuf_trim_dac         00004F4A 
               calls direct
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 00004F62 - 00004F67 (0x6 bytes), align: 0
  Segment part 21.            Intra module refs:   Segment part 29
                                                   outbuf_trim_dac
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 00004F68 - 0000502C (0xc5 bytes), align: 0
  Segment part 22.            Intra module refs:   dac_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_power_on            00004F68 
               calls direct
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 0000502D - 00005035 (0x9 bytes), align: 0
  Segment part 24.            Intra module refs:   dac_power_on
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 00005036 - 00005044 (0xf bytes), align: 0
  Segment part 25.            Intra module refs:   dac_power_on
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 00005045 - 0000504B (0x7 bytes), align: 0
  Segment part 26.            Intra module refs:   dac_power_on
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 0000504C - 00005050 (0x5 bytes), align: 0
  Segment part 27.            Intra module refs:   Segment part 26
                                                   Segment part 28
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 00005051 - 00005055 (0x5 bytes), align: 0
  Segment part 28.            Intra module refs:   dac_power_on
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 00005056 - 00005060 (0xb bytes), align: 0
  Segment part 29.            Intra module refs:   dac_power_on
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 00005061 - 00005070 (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   dac_power_on
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 00005071 - 00005084 (0x14 bytes), align: 0
  Segment part 31.            Intra module refs:   dac_power_on
    -------------------------------------------------------------------------
DAC_INIT
  Relative segment, address: CODE 00005085 - 0000508E (0xa bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_init                00005085        system_init (user_init)
               calls direct
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 0000520F - 0000522A (0x1c bytes), align: 0
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_set_volume          0000520F        task_flash_music_enter (task_flash)
                                                   user_change_volume (user_setting)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 0000522B - 0000522F (0x5 bytes), align: 0
  Segment part 38.            Intra module refs:   dac_set_volume
                                                   dac_set_volume_direct
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 00005230 - 0000524F (0x20 bytes), align: 0
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dac_set_volume_direct   00005230        task_flash_music_enter (task_flash)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
DAC_SEG
  Relative segment, address: CODE 00005250 - 0000525B (0xc bytes), align: 0
  Segment part 40.            Intra module refs:   dac_set_volume
                                                   dac_set_volume_direct

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\device.r51
  PROGRAM MODULE, NAME : device

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000540 - 00000569 (0x2a bytes), align: 0
  Segment part 8.             Intra module refs:   Segment part 30
                                                   device_activate_do
                                                   device_init
                                                   sd_get_status
                                                   sd_set_status
                                                   usb_host_disclk
                                                   usb_host_get_actived
                                                   usb_host_need_testready
                                                   usb_host_set_actived
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dev_ctl                 00000540        device_get (DEV_ASM)
    -------------------------------------------------------------------------
DEVICE_INIT
  Relative segment, address: CODE 00005D83 - 00005DB6 (0x34 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           device_init             00005D83        system_init (user_init)
               calls direct
    -------------------------------------------------------------------------
DEVICE_SEG
  Relative segment, address: CODE 00005DD7 - 00005DD9 (0x3 bytes), align: 0
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_total_dev           00005DD7        device_get (DEV_ASM)
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 00006072 - 000060D5 (0x64 bytes), align: 0
  Segment part 27.            Intra module refs:   device_activate_do
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           host_select_phy         00006072        fs_sel_new (?fat)
               calls direct
               stack 1 = 00000003 ( 00000007 )
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 000060D6 - 000060E2 (0xd bytes), align: 0
  Segment part 28.            Intra module refs:   host_select_phy
    -------------------------------------------------------------------------
DEVICE_SEG
  Relative segment, address: CODE 00005DDA - 00005E48 (0x6f bytes), align: 0
  Segment part 13.            Intra module refs:   device_activate
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           device_activate_do      00005DDA 
               calls direct
               stack 1 = 00000001 ( 00000005 )
    -------------------------------------------------------------------------
DEVICE_COM_SEG
  Relative segment, address: CODE 00005DB7 - 00005DD6 (0x20 bytes), align: 0
  Segment part 25.            Intra module refs:   device_change_check
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           device_activate         00005DB7 
               calls direct
               stack 1 = 00000003 ( 00000001 )
    -------------------------------------------------------------------------
DEVICE_SEG
  Relative segment, address: CODE 00005E49 - 00005EC1 (0x79 bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           device_change_check     00005E49        device_change (task)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
DEVICE_SEG
  Relative segment, address: CODE 00005EC2 - 00005ED3 (0x12 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_host_get_actived    00005EC2        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
DEVICE_SEG
  Relative segment, address: CODE 00005ED4 - 00005EF8 (0x25 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_host_set_actived    00005ED4        Segment part 1 (OTP_VECTOR)
               calls direct
    -------------------------------------------------------------------------
DEVICE_SEG
  Relative segment, address: CODE 00005EF9 - 00005F20 (0x28 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_host_need_testready
                                   00005EF9        usb_host_enable_testready (?device)
    -------------------------------------------------------------------------
BIT_N
  Relative segment, address: BIT 00000026.0 - 00000026.0 (0x1 bits), align: 0
  Segment part 9. ROOT.       Intra module refs:   usb_host_resume
                                                   usb_host_suspend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           udisk_suspend_flag      00000026.0      libvar_init (?lark_fix)
    -------------------------------------------------------------------------
BIT_N
  Relative segment, address: BIT 00000026.1 - 00000026.1 (0x1 bits), align: 0
  Segment part 10. ROOT.      Intra module refs:   usb_host_resume
                                                   usb_host_suspend
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           udisk1_suspend_flag     00000026.1      libvar_init (?lark_fix)
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 000060E3 - 00006103 (0x21 bytes), align: 0
  Segment part 29. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_host_resume         000060E3        device_activate_udisk_do (?device)
                                                   music_play (?music)
               calls direct
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 00006104 - 0000610D (0xa bytes), align: 0
  Segment part 30.            Intra module refs:   usb_host_resume
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 0000610E - 0000611D (0x10 bytes), align: 0
  Segment part 31. ROOT.      Intra module refs:   host_select_phy
                                                   usb_host_disclk
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_host_suspend        0000610E 
               calls direct
               stack 1 = 00000007 ( 00000000 )
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 0000611E - 00006147 (0x2a bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_host_disclk         0000611E        Segment part 15 (?clock)
                                                   Segment part 23 (?clock)
               calls direct
    -------------------------------------------------------------------------
SD_SEG
  Relative segment, address: CODE 00005F5C - 00005F93 (0x38 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_set_status           00005F5C        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
SD_SEG
  Relative segment, address: CODE 00005F94 - 00005FAC (0x19 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_get_status           00005F94        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
SD_SEG
  Relative segment, address: CODE 00005FAD - 00005FB0 (0x4 bytes), align: 0
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_active_a             00005FAD        Segment part 1 (OTP_VECTOR)
               calls direct
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004888 - 00004898 (0x11 bytes), align: 0
  Segment part 7.             Intra module refs:   device_activate_do

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\display.r51
  PROGRAM MODULE, NAME : display

  SEGMENTS IN THE MODULE
  ======================
IDATA_N
  Relative segment, address: IDATA 0000007F - 00000090 (0x12 bytes), align: 0
  Segment part 7. ROOT.       Intra module refs:   ocx_clear
                                                   ocx_delay
                                                   ocx_event
                                                   ocx_showvol
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ocx                     0000007F        led_7p7s_blink (led_7p7s)
                                                   led_7p7s_disp_time (led_7p7s)
                                                   system_init (user_init)
                                                   task_battery_check (user_key)
                                                   task_flash_music_deal_msg (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   timer2_isr (main)
    -------------------------------------------------------------------------
BDATA_N
  Relative segment, address: DATA 00000028 - 0000002B (0x4 bytes), align: 0
  Segment part 8. ROOT.       Intra module refs:   Segment part 12
                                                   ocx_clear
                                                   ocx_event
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disp                    00000028        deal_msg (task)
                                                   led_7p7s_value_set (led_7p7s)
                                                   system_init (user_init)
                                                   task_idle_display (theme_idle)
                                                   task_poweroff_display (theme_poweroff)
                                                   timer2_isr (main)
    -------------------------------------------------------------------------
LED_DISP_SEG
  Relative segment, address: CODE 00005CEB - 00005CF4 (0xa bytes), align: 0
  Segment part 12.            Intra module refs:   ocx_showvol
    -------------------------------------------------------------------------
LED_DISP_SEG
  Relative segment, address: CODE 00005CF5 - 00005CFA (0x6 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ocx_showvol             00005CF5        Segment part 22 (task)
                                                   deal_vol_msg (task)
    -------------------------------------------------------------------------
DISP_OCX_SEG
  Relative segment, address: CODE 000070EA - 00007112 (0x29 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ocx_delay               000070EA        timer2_isr (main)
    -------------------------------------------------------------------------
DISP_OCX_SEG
  Relative segment, address: CODE 00007113 - 00007123 (0x11 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ocx_clear               00007113        run_task (task)
                                                   system_init (user_init)
    -------------------------------------------------------------------------
DISP_OCX_SEG
  Relative segment, address: CODE 00007124 - 00007149 (0x26 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ocx_event               00007124        task_idle_display (theme_idle)
                                                   task_poweroff_display (theme_poweroff)
    -------------------------------------------------------------------------
DISP_OCX_SEG
  Relative segment, address: CODE 0000714A - 00007150 (0x7 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           disp_init               0000714A        system_init (user_init)
               calls direct

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\file_filter.r51
  PROGRAM MODULE, NAME : file_filter

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000056A - 0000056A (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_Encrypt               0000056A        music_decoder_read (user_fat)
                                                   task_flash_music_enter (task_flash)

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\led.r51
  PROGRAM MODULE, NAME : led

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 1. ROOT.       Intra module refs:   timer3_isr (main)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P0                      00000080 

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\led_5c7s.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\led_7p7s.r51
  PROGRAM MODULE, NAME : led_7p7s

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A0 - 000000A0 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2                      000000A0 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P2DIR                   000000BC 
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: DATA 0000006E - 00000072 (0x5 bytes), align: 0
  Segment part 9. ROOT.       Intra module refs:   led_7p7s_blink
                                                   led_7p7s_clear
                                                   led_7p7s_disp_device
                                                   led_7p7s_disp_song
                                                   led_7p7s_disp_str
                                                   led_7p7s_disp_time
                                                   led_7p7s_disp_timer
                                                   led_7p7s_disp_vol
                                                   led_7p7s_dispnum
                                                   led_7p7s_value_set
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           dispbuf                 0000006E 
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: DATA 00000073 - 00000079 (0x7 bytes), align: 0
  Segment part 10. ROOT.      Intra module refs:   led_7p7s_scan
                                                   led_7p7s_value_set
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           p_dispbuff              00000073 
    -------------------------------------------------------------------------
XDATA_N
  Relative segment, address: XDATA 000002D8 - 000002D8 (0x1 bytes), align: 0
  Segment part 11. ROOT.      Intra module refs:   led_7p7s_init
                                                   led_7p7s_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           COM_T                   000002D8 
    -------------------------------------------------------------------------
LED_DISP_TBL
  Relative segment, address: CODE 00005CC7 - 00005CD0 (0xa bytes), align: 0
  Segment part 12.            Intra module refs:   Segment part 26
                                                   led_7p7s_disp_str
                                                   led_7p7s_dispnum
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tbl_led_num             00005CC7 
    -------------------------------------------------------------------------
LED_DISP_TBL
  Relative segment, address: CODE 00005CD1 - 00005CEA (0x1a bytes), align: 0
  Segment part 13.            Intra module refs:   led_7p7s_disp_str
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tbl_led_alpha           00005CD1 
    -------------------------------------------------------------------------
LED_DISP_SEG
  Relative segment, address: CODE 00005CFB - 00005D82 (0x88 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_disp_str       00005CFB        task_flash_music_enter (task_flash)
                                                   task_idle_display (theme_idle)
                                                   task_poweroff_enter (task_poweroff)
               stack 1 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
LED_7P7S_INIT
  Relative segment, address: CODE 0000589D - 000058B2 (0x16 bytes), align: 0
  Segment part 17.            Intra module refs:   led_7p7s_init
                                                   led_7p7s_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_io_init        0000589D 
               stack 1 = 00000005 ( 00000000 )
    -------------------------------------------------------------------------
LED_7P7S_INIT
  Relative segment, address: CODE 000058B3 - 000058BB (0x9 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_init           000058B3        disp_init (display)
                                                   soft_poweroff_enter (task_poweroff)
               calls direct
    -------------------------------------------------------------------------
LED_7P7S_INIT
  Relative segment, address: CODE 000058BC - 000058C5 (0xa bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_clear          000058BC        disp_init (display)
                                                   task_poweroff_display (theme_poweroff)
                                                   task_poweroff_enter (task_poweroff)
               calls direct
    -------------------------------------------------------------------------
LED_7P7S_INIT
  Relative segment, address: CODE 000058C6 - 00005910 (0x4b bytes), align: 0
  Segment part 20.            Intra module refs:   led_7p7s_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_blink          000058C6 
               stack 1 = 00000005 ( 00000000 )
    -------------------------------------------------------------------------
LED_7P7S_SEG
  Relative segment, address: CODE 00005911 - 00005A08 (0xf8 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_scan           00005911        timer2_isr (main)
               calls direct
               stack 1 = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000056B - 0000056B (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   led_7p7s_scan
    -------------------------------------------------------------------------
LED_7P7S_SEG
  Relative segment, address: CODE 00005A09 - 00005BE3 (0x1db bytes), align: 0
  Segment part 22.            Intra module refs:   led_7p7s_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_value_set      00005A09 
               calls direct
               stack 1 = 00000005 ( 00000000 )
    -------------------------------------------------------------------------
LED_7P7S_SEG
  Relative segment, address: CODE 00005BE4 - 00005C34 (0x51 bytes), align: 0
  Segment part 23.            Intra module refs:   led_7p7s_disp_song
                                                   led_7p7s_disp_timer
                                                   led_7p7s_disp_vol
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_dispnum        00005BE4 
               stack 1 = 00000001 ( 00000004 )
    -------------------------------------------------------------------------
LED_7P7S_SEG
  Relative segment, address: CODE 00005C35 - 00005C46 (0x12 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_disp_vol       00005C35        timer2_isr (main)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004680 - 000046B3 (0x34 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_disp_timer     00004680        timer2_isr (main)
               calls direct
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000046B4 - 000046B7 (0x4 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_disp_clock     000046B4        timer2_isr (main)
               calls direct
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000046B8 - 000046CA (0x13 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_disp_song      000046B8        timer2_isr (main)
               calls direct
    -------------------------------------------------------------------------
LED_7P7S_SEG
  Relative segment, address: CODE 00005C47 - 00005C9D (0x57 bytes), align: 0
  Segment part 25.            Intra module refs:   led_7p7s_disp_clock
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_disp_time      00005C47 
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
LED_7P7S_SEG
  Relative segment, address: CODE 00005C9E - 00005CB0 (0x13 bytes), align: 0
  Segment part 26.            Intra module refs:   led_7p7s_disp_time
    -------------------------------------------------------------------------
LED_7P7S_SEG
  Relative segment, address: CODE 00005CB1 - 00005CC6 (0x16 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           led_7p7s_disp_device    00005CB1        task_flash_music_enter (task_flash)
               calls direct

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\main.r51
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TMR3CON                 000000F1 
    -------------------------------------------------------------------------
SYS_DELAY
  Relative segment, address: CODE 00004A92 - 00004AA8 (0x17 bytes), align: 0
  Segment part 28.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           delay_1ms               00004A92        Segment part 1 (OTP_VECTOR)
               calls direct
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000056C - 0000056C (0x1 bytes), align: 0
  Segment part 16.            Intra module refs:   timer3_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           t_pwn_duty1             0000056C        deal_msg (task)
                                                   port_init (user_io)
                                                   task_flash_music_deal_msg (task_flash)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000056D - 0000056D (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   timer3_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           t_pwn_duty2             0000056D        deal_msg (task)
                                                   port_init (user_io)
                                                   task_flash_music_deal_msg (task_flash)
    -------------------------------------------------------------------------
INTERRUPT
  Relative segment, address: CODE 00004C6D - 00004CA2 (0x36 bytes), align: 0
  Segment part 29.            Intra module refs:   timer3_isr::??INTVEC 91
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer3_isr              00004C6D 
               interrupt function
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
INTERRUPT
  Relative segment, address: CODE 00004CA3 - 00004CA7 (0x5 bytes), align: 0
  Segment part 30.            Intra module refs:   timer2_isr
                                                   timer3_isr
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 00000047 - 00000047 (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   timer3_isr
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 00000048 - 00000048 (0x1 bytes), align: 0
  Segment part 19.            Intra module refs:   timer3_isr
    -------------------------------------------------------------------------
INTERRUPT
  Relative segment, address: CODE 00004CA8 - 00004E93 (0x1ec bytes), align: 0
  Segment part 31.            Intra module refs:   timer2_isr::??INTVEC 27
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer2_isr              00004CA8 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000009 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000056E - 0000056E (0x1 bytes), align: 0
  Segment part 20.            Intra module refs:   timer2_isr
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 00000049 - 00000049 (0x1 bytes), align: 0
  Segment part 21.            Intra module refs:   timer2_isr
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 0000004A - 0000004A (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   timer2_isr
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 0000004B - 0000004B (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   timer2_isr
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 0000004C - 0000004C (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   timer2_isr
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000056F - 0000056F (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   timer2_isr
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 0000004D - 0000004D (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   timer2_isr
    -------------------------------------------------------------------------
DATA_Z
  Relative segment, address: DATA 0000004E - 0000004E (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   timer2_isr
    -------------------------------------------------------------------------
SYS_INIT
  Relative segment, address: CODE 00004AA9 - 00004AB3 (0xb bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    00004AA9        ?call_main (?cmain)
               calls direct
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00004000 - 0000401D (0x1e bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer2_isr::??INTVEC 27
                                   0000401B 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00004000 - 0000405D (0x5e bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timer3_isr::??INTVEC 91
                                   0000405B 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004899 - 000048A1 (0x9 bytes), align: 0
  Segment part 13.            Intra module refs:   timer2_isr

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\mem.r51
  PROGRAM MODULE, NAME : mem

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000570 - 00000573 (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   Segment part 9
                                                   mem_event
                                                   mem_time_set
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mem_ctl                 00000570        irtc_init (api_rtc)
                                                   rtcram_poweron_check (mem_rtcram)
                                                   system_init (user_init)
                                                   user_set_volume (user_setting)
                                                   write_music_break_rtcram (mem_rtcram)
                                                   write_num_rtcram (mem_rtcram)
    -------------------------------------------------------------------------
MEM
  Relative segment, address: CODE 0000716F - 0000718F (0x21 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mem_event               0000716F        comm_event (task)
                                                   task_poweroff_event (task_poweroff)
               calls direct
    -------------------------------------------------------------------------
MEM
  Relative segment, address: CODE 00007190 - 000071B9 (0x2a bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           var_set_default         00007190        rtcram_poweron_check (mem_rtcram)
               calls direct
    -------------------------------------------------------------------------
MEM
  Relative segment, address: CODE 000071BA - 000071C6 (0xd bytes), align: 0
  Segment part 9.             Intra module refs:   var_set_default
    -------------------------------------------------------------------------
MEM
  Relative segment, address: CODE 000071C7 - 000071ED (0x27 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mem_read_init_info      000071C7        system_init (user_init)
               calls direct
    -------------------------------------------------------------------------
MEM
  Relative segment, address: CODE 000071EE - 000071FA (0xd bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mem_time_set            000071EE        timer2_isr (main)

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\mem_rtcram.r51
  PROGRAM MODULE, NAME : mem_rtcram

  SEGMENTS IN THE MODULE
  ======================
MEMRTCRAM
  Relative segment, address: CODE 00007228 - 00007240 (0x19 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rtcram_poweron_check    00007228        mem_read_init_info (mem)
                                                   system_init (user_init)
               calls direct
    -------------------------------------------------------------------------
MEMRTCRAM
  Relative segment, address: CODE 00007241 - 0000724B (0xb bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_playmode_rtcram   00007241        var_set_default (mem)
               calls direct
    -------------------------------------------------------------------------
MEMRTCRAM
  Relative segment, address: CODE 0000724C - 00007256 (0xb bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_volume_rtcram     0000724C        mem_event (mem)
                                                   var_set_default (mem)
               calls direct
    -------------------------------------------------------------------------
MEMRTCRAM
  Relative segment, address: CODE 00007257 - 00007261 (0xb bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_volume_rtcram      00007257        mem_read_init_info (mem)
               calls direct
    -------------------------------------------------------------------------
MEMRTCRAM
  Relative segment, address: CODE 00007262 - 00007276 (0x15 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_num_rtcram        00007262        Segment part 9 (mem)
               calls direct
    -------------------------------------------------------------------------
MEMRTCRAM
  Relative segment, address: CODE 00007277 - 00007282 (0xc bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_flash_num_rtcram
                                   00007277        task_flash_music_event (task_flash)
                                                   task_flash_music_new (task_flash)
               calls direct
    -------------------------------------------------------------------------
MEMRTCRAM
  Relative segment, address: CODE 00007283 - 0000728E (0xc bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_flash_num_rtcram   00007283        task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
               calls direct
    -------------------------------------------------------------------------
MEMRTCRAM
  Relative segment, address: CODE 0000728F - 00007299 (0xb bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_device_rtcram     0000728F        var_set_default (mem)
               calls direct
    -------------------------------------------------------------------------
MEMRTCRAM
  Relative segment, address: CODE 0000729A - 000072B5 (0x1c bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_music_break_rtcram
                                   0000729A        task_music_break_save (task_music)
               calls direct
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000048A2 - 000048A7 (0x6 bytes), align: 0
  Segment part 6.             Intra module refs:   rtcram_poweron_check

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\spi.r51
  PROGRAM MODULE, NAME : spi

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D5 - 000000D5 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI0BUF                 000000D5 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D6 - 000000D6 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPI0CON                 000000D6 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000574 - 00000577 (0x4 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_ctl                 00000574        spi_mp3flash_read (?spi_api)
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 000061D3 - 000061E4 (0x12 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_init                000061D3        spi_port_init (user_spi)
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 000061E5 - 000061EC (0x8 bytes), align: 0
  Segment part 12.            Intra module refs:   spi_wait_busy
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_delay               000061E5 
               stack 1 = 00000001 ( 00000000 )
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 000061ED - 000061F8 (0xc bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_write_byte_hard     000061ED        spi_readID (user_spi)
                                                   spi_write_byte (user_spi)
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 000061F9 - 00006207 (0xf bytes), align: 0
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_read_byte_hard      000061F9        spi_read_byte (user_spi)
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 00006208 - 00006237 (0x30 bytes), align: 0
  Segment part 17.            Intra module refs:   Segment part 30
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_send_addr_2         00006208 
               calls direct
               stack 1 = 0000000B ( 0000000B )
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 00006238 - 00006250 (0x19 bytes), align: 0
  Segment part 18.            Intra module refs:   spi_wait_busy
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_read_ssr            00006238 
               calls direct
               stack 1 = 00000001 ( 00000001 )
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 00006251 - 00006272 (0x22 bytes), align: 0
  Segment part 21.            Intra module refs:   spi_read_hard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_wait_busy           00006251 
               calls direct
               stack 1 = 0000000B ( 00000001 )
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 00006273 - 0000627D (0xb bytes), align: 0
  Segment part 23.            Intra module refs:   spi_read32
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 0000627E - 00006285 (0x8 bytes), align: 0
  Segment part 26.            Intra module refs:   spi_read_hard
                                                   spi_send_addr_2
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 00006286 - 000062A3 (0x1e bytes), align: 0
  Segment part 28.            Intra module refs:   spi_read_hard
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_dma_kick            00006286 
               stack 1 = 0000000B ( 00000000 )
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 000062A4 - 00006335 (0x92 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_read_hard           000062A4        spi_read (user_spi)
               calls direct
               stack 1 = 00000004 ( 0000000C )
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 00006336 - 00006344 (0xf bytes), align: 0
  Segment part 30.            Intra module refs:   spi_read_hard
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 00006345 - 0000635F (0x1b bytes), align: 0
  Segment part 31.            Intra module refs:   spi_read_hard
    -------------------------------------------------------------------------
SPI_SEG
  Relative segment, address: CODE 00006360 - 000063AF (0x50 bytes), align: 0
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_read32              00006360        spi_mp3_index_read_program (?spi_api)
               calls direct
               stack 1 = 00000000 ( 0000000C )

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\startmusic.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task.r51
  PROGRAM MODULE, NAME : task

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000578 - 00000578 (0x1 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           device_chg              00000578        task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000579 - 00000579 (0x1 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Timer1_flag             00000579        task_flash_music (task_flash)
                                                   task_idle (task_idle)
                                                   timer2_isr (main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000057A - 0000057A (0x1 bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mute_status_change      0000057A        mute_ctl_auto (user_io)
                                                   mute_disable (user_io)
                                                   mute_enable (user_io)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000057B - 0000057C (0x2 bytes), align: 0
  Segment part 14.            Intra module refs:   comm_event
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main_loop_count         0000057B 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000057D - 0000057D (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   comm_event
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           f_Clear_WDT             0000057D        timer2_isr (main)
    -------------------------------------------------------------------------
DATA_N
  Relative segment, address: DATA 0000007A - 0000007C (0x3 bytes), align: 0
  Segment part 16. ROOT.      Intra module refs:   comm_event
                                                   deal_msg
                                                   run_task
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_ctl                0000007A        irtc_poweron (user_init)
                                                   system_init (user_init)
                                                   task_battery_check (user_key)
                                                   task_flash_music (task_flash)
                                                   task_flash_music_deal_msg (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
                                                   task_flash_music_exit (task_flash)
                                                   task_idle (task_idle)
                                                   task_poweroff (task_poweroff)
                                                   task_poweroff_deal_msg (task_poweroff)
    -------------------------------------------------------------------------
TASK_SEG
  Relative segment, address: CODE 0000667D - 000066D2 (0x56 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           run_task                0000667D        main (main)
               calls direct
    -------------------------------------------------------------------------
TASK_SEG
  Relative segment, address: CODE 000066D3 - 000066DF (0xd bytes), align: 0
  Segment part 19.            Intra module refs:   comm_event
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           device_change           000066D3 
               calls direct
               stack 1 = 00000001 ( 00000000 )
    -------------------------------------------------------------------------
TASK_SEG
  Relative segment, address: CODE 000066E0 - 000066E3 (0x4 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deal_vol_msg            000066E0        Segment part 36 (task_flash)
               calls direct
    -------------------------------------------------------------------------
TASK_SEG
  Relative segment, address: CODE 000066E4 - 000067A6 (0xc3 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           deal_msg                000066E4        task_flash_music_deal_msg (task_flash)
                                                   task_idle (task_idle)
               calls direct
    -------------------------------------------------------------------------
TASK_SEG
  Relative segment, address: CODE 000067A7 - 000067AF (0x9 bytes), align: 0
  Segment part 22.            Intra module refs:   deal_msg
    -------------------------------------------------------------------------
TASK_SEG
  Relative segment, address: CODE 000067B0 - 000067C2 (0x13 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           device_check_stop       000067B0        device_change_check (device)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
TASK_SEG
  Relative segment, address: CODE 000067C3 - 00006833 (0x71 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           comm_event              000067C3        system_init (user_init)
                                                   task_flash_music_event (task_flash)
                                                   task_idle (task_idle)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000048A8 - 000048AB (0x4 bytes), align: 0
  Segment part 8.             Intra module refs:   deal_msg
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000048AC - 000048AF (0x4 bytes), align: 0
  Segment part 9.             Intra module refs:   deal_msg

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_flash.r51
  PROGRAM MODULE, NAME : task_flash

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000BB - 000000BB (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   000000BB 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000057E - 0000057F (0x2 bytes), align: 0
  Segment part 19.            Intra module refs:   Segment part 30
                                                   get_Flash_TotalFiles
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_music_total       0000057E 
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006A94 - 00006B1A (0x87 bytes), align: 0
  Segment part 28.            Intra module refs:   task_flash_music_enter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           get_Flash_TotalFiles    00006A94 
               calls direct
               stack 1 = 00000007 ( 0000000F )
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006B1B - 00006B23 (0x9 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 43
                                                   get_Flash_TotalFiles
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006B24 - 00006B44 (0x21 bytes), align: 0
  Segment part 31.            Intra module refs:   Segment part 43
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_flash_music_init   00006B24 
               calls direct
               stack 1 = 00000007 ( 00000000 )
    -------------------------------------------------------------------------
TASK_MUSIC_SEG
  Relative segment, address: CODE 00006834 - 0000687E (0x4b bytes), align: 0
  Segment part 47.            Intra module refs:   task_flash_music_auto_next
                                                   task_flash_music_deal_msg
                                                   task_flash_music_new
           LOCAL                   ADDRESS         
           =====                   =======         
           task_flash_music_direct
                                   00006834 
               calls direct
               stack 1 = 00000004 ( 00000003 )
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006B45 - 00006B75 (0x31 bytes), align: 0
  Segment part 33.            Intra module refs:   task_flash_music_event
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_flash_music_new    00006B45 
               calls direct
               stack 1 = 00000004 ( 00000000 )
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006B76 - 00006B87 (0x12 bytes), align: 0
  Segment part 34.            Intra module refs:   task_flash_music_event
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_flash_music_auto_next
                                   00006B76 
               calls direct
               stack 1 = 00000004 ( 00000000 )
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006B88 - 00006D86 (0x1ff bytes), align: 0
  Segment part 35.            Intra module refs:   task_flash_music
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_flash_music_deal_msg
                                   00006B88 
               calls direct
               stack 1 = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006D87 - 00006D93 (0xd bytes), align: 0
  Segment part 36.            Intra module refs:   task_flash_music_deal_msg
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006D94 - 00006D9C (0x9 bytes), align: 0
  Segment part 37.            Intra module refs:   get_Flash_TotalFiles
                                                   task_flash_music_deal_msg
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006D9D - 00006DA4 (0x8 bytes), align: 0
  Segment part 38.            Intra module refs:   task_flash_music_deal_msg
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006DA5 - 00006E9A (0xf6 bytes), align: 0
  Segment part 39.            Intra module refs:   task_flash_music
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_flash_music_event
                                   00006DA5 
               calls direct
               stack 1 = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006E9B - 00006EA7 (0xd bytes), align: 0
  Segment part 40.            Intra module refs:   task_flash_music_deal_msg
                                                   task_flash_music_event
                                                   task_flash_music_exit
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000580 - 00000583 (0x4 bytes), align: 0
  Segment part 22.            Intra module refs:   task_flash_music_event
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00006EA8 - 00007035 (0x18e bytes), align: 0
  Segment part 41.            Intra module refs:   task_flash_music
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_flash_music_enter
                                   00006EA8 
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00007036 - 00007046 (0x11 bytes), align: 0
  Segment part 42.            Intra module refs:   task_flash_music_enter
                                                   task_flash_music_event
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 00007047 - 0000704D (0x7 bytes), align: 0
  Segment part 43.            Intra module refs:   task_flash_music_enter
                                                   task_flash_music_new
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 0000704E - 000070B2 (0x65 bytes), align: 0
  Segment part 44.            Intra module refs:   task_flash_music
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_flash_music_exit   0000704E 
               calls direct
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 000070B3 - 000070BB (0x9 bytes), align: 0
  Segment part 45.            Intra module refs:   task_flash_music_deal_msg
                                                   task_flash_music_event
                                                   task_flash_music_exit
    -------------------------------------------------------------------------
TASK_FLASH_SEG
  Relative segment, address: CODE 000070BC - 000070E9 (0x2e bytes), align: 0
  Segment part 46.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_flash_music        000070BC        run_task (task)
               calls direct
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000048B0 - 000048BC (0xd bytes), align: 0
  Segment part 10.            Intra module refs:   task_flash_music_event
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000048BD - 000048C7 (0xb bytes), align: 0
  Segment part 11.            Intra module refs:   task_flash_music_enter
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000048C8 - 000048CB (0x4 bytes), align: 0
  Segment part 12.            Intra module refs:   task_flash_music_enter
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000048CC - 000048D5 (0xa bytes), align: 0
  Segment part 13.            Intra module refs:   task_flash_music_enter
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000048D6 - 000048E5 (0x10 bytes), align: 0
  Segment part 14.            Intra module refs:   task_flash_music_enter
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000048E6 - 000048F6 (0x11 bytes), align: 0
  Segment part 15.            Intra module refs:   task_flash_music_enter
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000048F7 - 00004907 (0x11 bytes), align: 0
  Segment part 16.            Intra module refs:   task_flash_music_exit
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004908 - 00004913 (0xc bytes), align: 0
  Segment part 17.            Intra module refs:   task_flash_music
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004914 - 00004917 (0x4 bytes), align: 0
  Segment part 24.            Intra module refs:   get_Flash_TotalFiles
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_400          00004914 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004918 - 0000491B (0x4 bytes), align: 0
  Segment part 25.            Intra module refs:   get_Flash_TotalFiles
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_800          00004918 

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_idle.r51
  PROGRAM MODULE, NAME : task_idle

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000584 - 00000584 (0x1 bytes), align: 0
  Segment part 8.             Intra module refs:   task_idle
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           count_led_off           00000584 
    -------------------------------------------------------------------------
TASK_IDLE_SEG
  Relative segment, address: CODE 00006923 - 00006973 (0x51 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_idle               00006923        run_task (task)
               calls direct
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000491C - 00004922 (0x7 bytes), align: 0
  Segment part 6.             Intra module refs:   task_idle
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004923 - 0000492D (0xb bytes), align: 0
  Segment part 7.             Intra module refs:   task_idle

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_lowpower.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_music.r51
  PROGRAM MODULE, NAME : task_music

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 00000585 - 00000585 (0x1 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           t_msc                   00000585        system_init (user_init)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000586 - 00000586 (0x1 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           first                   00000586        task_flash_music_enter (task_flash)
    -------------------------------------------------------------------------
TASK_MUSIC_SEG
  Relative segment, address: CODE 0000687F - 000068D8 (0x5a bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_music_cal_time     0000687F        task_flash_music_event (task_flash)
               calls direct
               stack 1 = 00000000 ( 0000000F )
    -------------------------------------------------------------------------
TASK_MUSIC_SEG
  Relative segment, address: CODE 000068D9 - 00006919 (0x41 bytes), align: 0
  Segment part 32.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_music_break_save   000068D9        Segment part 9 (mem)
                                                   system_init (user_init)
               calls direct
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
TASK_MUSIC_SEG
  Relative segment, address: CODE 0000691A - 00006922 (0x9 bytes), align: 0
  Segment part 33.            Intra module refs:   task_music_break_save

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_poweroff.r51
  PROGRAM MODULE, NAME : task_poweroff

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000C8 - 000000C8 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           PCON0                   000000C8 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000CC - 000000CC (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           CLKCON1                 000000CC 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000587 - 00000589 (0x3 bytes), align: 0
  Segment part 18.            Intra module refs:   soft_poweroff_init
                                                   task_poweroff_enter
                                                   task_poweroff_event
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           poweroff_ctl            00000587        powerkey_get (user_key)
                                                   system_init (user_init)
    -------------------------------------------------------------------------
TASK_POWEROFF_SEG
  Relative segment, address: CODE 00006974 - 00006986 (0x13 bytes), align: 0
  Segment part 19.            Intra module refs:   soft_poweroff_enter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           soft_poweroff           00006974 
               calls direct, is indirectly called
    -------------------------------------------------------------------------
TASK_POWEROFF_SEG
  Relative segment, address: CODE 00006987 - 000069F1 (0x6b bytes), align: 0
  Segment part 20.            Intra module refs:   task_poweroff_event
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           soft_poweroff_enter     00006987 
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
TASK_POWEROFF_SEG
  Relative segment, address: CODE 000069F2 - 00006A00 (0xf bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wko_init                000069F2        system_init (user_init)
               calls direct
    -------------------------------------------------------------------------
TASK_POWEROFF_SEG
  Relative segment, address: CODE 00006A01 - 00006A32 (0x32 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           soft_poweroff_init      00006A01        system_init (user_init)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
TASK_POWEROFF_SEG
  Relative segment, address: CODE 00006A33 - 00006A46 (0x14 bytes), align: 0
  Segment part 23.            Intra module refs:   task_poweroff
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_poweroff_event     00006A33 
               calls direct
    -------------------------------------------------------------------------
TASK_POWEROFF_SEG
  Relative segment, address: CODE 00006A47 - 00006A5D (0x17 bytes), align: 0
  Segment part 24.            Intra module refs:   task_poweroff
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_poweroff_deal_msg
                                   00006A47 
               calls direct
    -------------------------------------------------------------------------
TASK_POWEROFF_SEG
  Relative segment, address: CODE 00006A5E - 00006A74 (0x17 bytes), align: 0
  Segment part 25.            Intra module refs:   task_poweroff
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_poweroff_enter     00006A5E 
               calls direct
    -------------------------------------------------------------------------
TASK_POWEROFF_SEG
  Relative segment, address: CODE 00006A75 - 00006A93 (0x1f bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_poweroff           00006A75        run_task (task)
               calls direct
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000492E - 0000493D (0x10 bytes), align: 0
  Segment part 13.            Intra module refs:   soft_poweroff_enter
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000493E - 0000494A (0xd bytes), align: 0
  Segment part 14.            Intra module refs:   soft_poweroff_init
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000494B - 00004954 (0xa bytes), align: 0
  Segment part 15.            Intra module refs:   task_poweroff_deal_msg
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004955 - 00004958 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   task_poweroff_enter
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004959 - 00004967 (0xf bytes), align: 0
  Segment part 17.            Intra module refs:   task_poweroff

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_rtc.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\task_usbdev.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme_aux.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme_idle.r51
  PROGRAM MODULE, NAME : theme_idle

  SEGMENTS IN THE MODULE
  ======================
DISP_IDLE_SEG
  Relative segment, address: CODE 0000715E - 0000716E (0x11 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_idle_display       0000715E        task_idle (task_idle)
               calls direct
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004968 - 0000496C (0x5 bytes), align: 0
  Segment part 6.             Intra module refs:   task_idle_display

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme_music.r51
  PROGRAM MODULE, NAME : theme_music

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 0000058A - 0000058A (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vol_less_34V_blink      0000058A        task_battery_check (user_key)

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme_poweroff.r51
  PROGRAM MODULE, NAME : theme_poweroff

  SEGMENTS IN THE MODULE
  ======================
DISP_POWEROFF_SEG
  Relative segment, address: CODE 00007151 - 0000715D (0xd bytes), align: 0
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_poweroff_display   00007151        task_poweroff (task_poweroff)
               calls direct

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme_rtc.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme_speaker.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\theme_usbdev.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\usb_tune.r51
  PROGRAM MODULE, NAME : usb_tune

  SEGMENTS IN THE MODULE
  ======================
DEVICE_SEG
  Relative segment, address: CODE 00005F21 - 00005F21 (0x1 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_host_tune_set       00005F21        device_activate_do (device)

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_amux.r51
  PROGRAM MODULE, NAME : user_amux

  SEGMENTS IN THE MODULE
  ======================
XDATA_N
  Relative segment, address: XDATA 000002D9 - 000002D9 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           energy_cnt              000002D9 
    -------------------------------------------------------------------------
XDATA_N
  Relative segment, address: XDATA 000002DA - 000002DA (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           energy_flag             000002DA 

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_fat.r51
  PROGRAM MODULE, NAME : user_fat

  SEGMENTS IN THE MODULE
  ======================
NEAR_CODE
  Relative segment, address: CODE 000046CB - 0000472E (0x64 bytes), align: 0
  Segment part 7.             Intra module refs:   decoder_read
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           music_decoder_read      000046CB 
               calls direct
               stack 1 = 00000000 ( 00000007 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000472F - 0000473C (0xe bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decoder_read            0000472F        Segment part 1 (OTP_VECTOR)
               calls direct
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000473D - 00004766 (0x2a bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           decoder_seek            0000473D        Segment part 1 (OTP_VECTOR)
                                                   decoder_seek_set (MUSIC_ASM)
               calls direct
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 0000496D - 00004970 (0x4 bytes), align: 0
  Segment part 6.             Intra module refs:   music_decoder_read
                                                   spi_mp3flash_read (?spi_api)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_2            0000496D 

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_i2c.r51
  PROGRAM MODULE, NAME : user_i2c

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 00000088 - 00000088 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SDCON0                  00000088 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1                      00000090 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000BE - 000000BE (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P4DIR                   000000BE 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P4                      000000C0 
    -------------------------------------------------------------------------
BIT_N
  Relative segment, address: BIT 00000026.2 - 00000026.2 (0x1 bits), align: 0
  Segment part 12.            Intra module refs:   i2c_sd_mux_enter
                                                   i2c_sd_mux_exit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           soft_int                00000026.2
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 000043D5 - 000043F0 (0x1c bytes), align: 0
  Segment part 13.            Intra module refs:   i2c_port_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_sd_mux_enter        000043D5 
               calls direct, is not allocated
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 000043F1 - 0000440E (0x1e bytes), align: 0
  Segment part 14.            Intra module refs:   i2c_port_finish
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_sd_mux_exit         000043F1 
               calls direct, is not allocated
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 0000440F - 00004423 (0x15 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_port_init           0000440F        Segment part 1 (OTP_VECTOR)
               calls direct, is not allocated
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 00004424 - 00004431 (0xe bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_port_finish         00004424        Segment part 1 (OTP_VECTOR)
               calls direct, is not allocated
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 00004432 - 00004435 (0x4 bytes), align: 0
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_sda_dirout          00004432        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 00004436 - 00004439 (0x4 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_sda_dirin           00004436        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 0000443A - 0000443D (0x4 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_scl_dirout          0000443A        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 0000443E - 00004440 (0x3 bytes), align: 0
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_sda_high            0000443E        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 00004441 - 00004443 (0x3 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_sda_low             00004441        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 00004444 - 00004446 (0x3 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_scl_high            00004444        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 00004447 - 00004449 (0x3 bytes), align: 0
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_scl_low             00004447        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 0000444A - 0000444C (0x3 bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_sda_read            0000444A        Segment part 1 (OTP_VECTOR)
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 0000444D, align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_delay               0000444D        Segment part 1 (OTP_VECTOR)
               calls direct
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 0000444D - 00004452 (0x6 bytes), align: 0
  Segment part 26.            Intra module refs:   i2c_delay
                                                   i2c_delay_2
    -------------------------------------------------------------------------
I2C_CB_SEG
  Relative segment, address: CODE 00004453 - 00004454 (0x2 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           i2c_delay_2             00004453        Segment part 1 (OTP_VECTOR)
               calls direct

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_init.r51
  PROGRAM MODULE, NAME : user_init

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000A9 - 000000A9 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IE1                     000000A9 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000B9 - 000000B9 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           IP1                     000000B9 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000058B - 0000058B (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   irtc_poweron
                                                   system_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           rtc_flag                0000058B 
    -------------------------------------------------------------------------
CODE_TBL
  Relative segment, address: CODE 00007FF0 - 00007FF7 (0x8 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           code_tbl                00007FF0 
    -------------------------------------------------------------------------
MSG_POOL
  Relative segment, address: XDATA 000000B2 - 000000C1 (0x10 bytes), align: 0
  Segment part 20. ROOT.      Intra module refs:   system_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           msg_pool                000000B2 
    -------------------------------------------------------------------------
SYS_INIT
  Relative segment, address: CODE 00004AB4 - 00004AEF (0x3c bytes), align: 0
  Segment part 21.            Intra module refs:   system_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           irtc_poweron            00004AB4 
               calls direct
               stack 1 = 00000001 ( 00000000 )
    -------------------------------------------------------------------------
SYS_INIT
  Relative segment, address: CODE 00004AF0 - 00004C6C (0x17d bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           system_init             00004AF0        main (main)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004971 - 0000497F (0xf bytes), align: 0
  Segment part 14.            Intra module refs:   irtc_poweron
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004980 - 00004986 (0x7 bytes), align: 0
  Segment part 15.            Intra module refs:   system_init
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004987 - 00004991 (0xb bytes), align: 0
  Segment part 16.            Intra module refs:   system_init
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004992 - 000049A5 (0x14 bytes), align: 0
  Segment part 17.            Intra module refs:   system_init

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_io.r51
  PROGRAM MODULE, NAME : user_io

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000BD - 000000BD (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P3DIR                   000000BD 
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000005C5 - 000005C5 (0x1 bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SD_FLAG                 000005C5        task_flash_music_exit (task_flash)
    -------------------------------------------------------------------------
USER_IO_SEG
  Relative segment, address: CODE 0000735F - 00007394 (0x36 bytes), align: 0
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           port_init               0000735F        system_init (user_init)
               calls direct
    -------------------------------------------------------------------------
SD_SEG
  Relative segment, address: CODE 00005FB1 - 00005FC1 (0x11 bytes), align: 0
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_group_sel            00005FB1        fs_sel_new (?fat)
                                                   my_mal_get_status (?lark_fix)
                                                   sd_active_safe (?device)
    -------------------------------------------------------------------------
SD_SEG
  Relative segment, address: CODE 00005FC2 - 00005FDF (0x1e bytes), align: 0
  Segment part 30.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sd_port_init            00005FC2        Segment part 1 (OTP_VECTOR)
                                                   i2c_sd_mux_exit (user_i2c)
               is not allocated
    -------------------------------------------------------------------------
SD_SEG
  Relative segment, address: CODE 00005FE0 - 00005FF2 (0x13 bytes), align: 0
  Segment part 31.            Intra module refs:   sd_group_sel
                                                   sd_port_init
    -------------------------------------------------------------------------
USER_IO_SEG
  Relative segment, address: CODE 00007395 - 0000739B (0x7 bytes), align: 0
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mute_init               00007395        system_init (user_init)
    -------------------------------------------------------------------------
USER_IO_SEG
  Relative segment, address: CODE 0000739C - 0000739F (0x4 bytes), align: 0
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           MUTE_EN                 0000739C        deal_msg (task)
                                                   task_flash_music_deal_msg (task_flash)
    -------------------------------------------------------------------------
USER_IO_SEG
  Relative segment, address: CODE 000073A0 - 000073A5 (0x6 bytes), align: 0
  Segment part 23.            Intra module refs:   mute_ctl_auto
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UN_MUTE                 000073A0        deal_msg (task)
                                                   task_flash_music_deal_msg (task_flash)
    -------------------------------------------------------------------------
USER_IO_SEG
  Relative segment, address: CODE 000073A6 - 000073B2 (0xd bytes), align: 0
  Segment part 24.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mute_enable             000073A6        run_task (task)
                                                   task_flash_music_exit (task_flash)
                                                   user_set_mute (user_setting)
    -------------------------------------------------------------------------
USER_IO_SEG
  Relative segment, address: CODE 000073B3 - 000073BF (0xd bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mute_disable            000073B3        task_flash_music_enter (task_flash)
                                                   user_set_mute (user_setting)
    -------------------------------------------------------------------------
USER_IO_SEG
  Relative segment, address: CODE 000073C0 - 000073E7 (0x28 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mute_ctl_auto           000073C0        timer2_isr (main)
               calls direct
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000058C - 0000058C (0x1 bytes), align: 0
  Segment part 18.            Intra module refs:   mute_ctl_auto
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004A04 - 00004A04 (0x1 bytes), align: 0
  Segment part 17.            Intra module refs:   SD_FLAG

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_key.r51
  PROGRAM MODULE, NAME : user_key

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000D1 - 000000D1 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCCON                  000000D1 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D2 - 000000D2 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCMODE                 000000D2 
    -------------------------------------------------------------------------
SFR_AN
  Relative segment, address: DATA 000000D4 - 000000D4 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ADCDATAH                000000D4 
    -------------------------------------------------------------------------
XDATA_N
  Relative segment, address: XDATA 000002DB - 000002E0 (0x6 bytes), align: 0
  Segment part 20. ROOT.      Intra module refs:   key_deal
                                                   key_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           key_ctl                 000002DB 
    -------------------------------------------------------------------------
XDATA_N
  Relative segment, address: XDATA 000002E1 - 000002F2 (0x12 bytes), align: 0
  Segment part 21. ROOT.      Intra module refs:   KEY_Whire1
                                                   KEY_Whire2
                                                   OTHER_ADC_CHECK
                                                   Segment part 60
                                                   adc_get
                                                   key_init
                                                   key_scan
                                                   task_battery_check
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           scan_ctl                000002E1        deal_msg (task)
                                                   led_7p7s_disp_timer (led_7p7s)
                                                   led_7p7s_value_set (led_7p7s)
                                                   task_flash_music_deal_msg (task_flash)
                                                   timer2_isr (main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000058D - 0000058D (0x1 bytes), align: 0
  Segment part 22.            Intra module refs:   task_battery_check
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vol_less_power_warning_flag
                                   0000058D        timer2_isr (main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000058E - 0000058E (0x1 bytes), align: 0
  Segment part 23.            Intra module refs:   task_battery_check
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vol_less_33V_flag       0000058E        timer2_isr (main)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000058F - 0000058F (0x1 bytes), align: 0
  Segment part 24.            Intra module refs:   task_battery_check
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           vol_less_34V_flag       0000058F 
    -------------------------------------------------------------------------
KEY_INIT
  Relative segment, address: CODE 000055AF - 000055C7 (0x19 bytes), align: 0
  Segment part 40.            Intra module refs:   key_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mixio_adinit            000055AF 
    -------------------------------------------------------------------------
KEY_INIT
  Relative segment, address: CODE 000055C8 - 000055D5 (0xe bytes), align: 0
  Segment part 42.            Intra module refs:   key_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iokey_init              000055C8 
    -------------------------------------------------------------------------
KEY_INIT
  Relative segment, address: CODE 000055D6 - 00005619 (0x44 bytes), align: 0
  Segment part 43.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           key_init                000055D6        system_init (user_init)
               calls direct
    -------------------------------------------------------------------------
SCAN_COM
  Relative segment, address: CODE 0000561A - 0000564A (0x31 bytes), align: 0
  Segment part 45.            Intra module refs:   key_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           adc_get                 0000561A 
               calls direct
               stack 1 = 00000003 ( 00000002 )
    -------------------------------------------------------------------------
SCAN_COM
  Relative segment, address: CODE 0000564B - 0000565B (0x11 bytes), align: 0
  Segment part 49.            Intra module refs:   key_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           iokey_get               0000564B 
               stack 1 = 00000003 ( 00000000 )
    -------------------------------------------------------------------------
SCAN_COM
  Relative segment, address: CODE 0000565C - 000056A1 (0x46 bytes), align: 0
  Segment part 50.            Intra module refs:   key_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           OTHER_ADC_CHECK         0000565C 
               stack 1 = 00000003 ( 00000000 )
    -------------------------------------------------------------------------
SCAN_COM
  Relative segment, address: CODE 000056A2 - 000056D4 (0x33 bytes), align: 0
  Segment part 52.            Intra module refs:   key_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           powerkey_get            000056A2 
               calls direct
               stack 1 = 00000003 ( 00000000 )
    -------------------------------------------------------------------------
SCAN_COM
  Relative segment, address: CODE 000056D5 - 0000571F (0x4b bytes), align: 0
  Segment part 53.            Intra module refs:   key_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           double_click_filter     000056D5 
               calls direct
               stack 1 = 00000003 ( 00000001 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000590 - 00000590 (0x1 bytes), align: 0
  Segment part 25.            Intra module refs:   double_click_filter
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000591 - 00000591 (0x1 bytes), align: 0
  Segment part 26.            Intra module refs:   double_click_filter
    -------------------------------------------------------------------------
SCAN_COM
  Relative segment, address: CODE 00005720 - 000057DC (0xbd bytes), align: 0
  Segment part 54.            Intra module refs:   key_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           key_deal                00005720 
               stack 1 = 00000003 ( 00000000 )
    -------------------------------------------------------------------------
SCAN_COM
  Relative segment, address: CODE 000057DD - 0000589C (0xc0 bytes), align: 0
  Segment part 55.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           key_scan                000057DD        timer2_isr (main)
               calls direct
               stack 1 = 00000000 ( 00000005 )
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000592 - 00000592 (0x1 bytes), align: 0
  Segment part 27.            Intra module refs:   KEY_Whire2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SW1_WHIRL_cnt           00000592        task_flash_music_deal_msg (task_flash)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000593 - 00000593 (0x1 bytes), align: 0
  Segment part 28.            Intra module refs:   KEY_Whire2
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SW2_WHIRL_cnt           00000593        task_flash_music_deal_msg (task_flash)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000594 - 00000594 (0x1 bytes), align: 0
  Segment part 29.            Intra module refs:   KEY_Whire1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SW3_WHIRL_cnt           00000594        task_flash_music_deal_msg (task_flash)
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049A6 - 000049B5 (0x10 bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 58
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SW_AB_Whire_DIR         000049A6 
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004767 - 000047B0 (0x4a bytes), align: 0
  Segment part 56.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY_Whire1              00004767        timer2_isr (main)
               calls direct
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000047B1 - 000047BB (0xb bytes), align: 0
  Segment part 57.            Intra module refs:   KEY_Whire1
                                                   KEY_Whire2
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000047BC - 000047CB (0x10 bytes), align: 0
  Segment part 58.            Intra module refs:   KEY_Whire1
                                                   KEY_Whire2
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000595 - 00000595 (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   KEY_Whire1
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 000047CC - 00004866 (0x9b bytes), align: 0
  Segment part 59.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           KEY_Whire2              000047CC        timer2_isr (main)
               calls direct
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 00004867 - 0000486E (0x8 bytes), align: 0
  Segment part 60.            Intra module refs:   KEY_Whire1
                                                   KEY_Whire2
    -------------------------------------------------------------------------
NEAR_CODE
  Relative segment, address: CODE 0000486F - 00004877 (0x9 bytes), align: 0
  Segment part 61.            Intra module refs:   KEY_Whire1
                                                   KEY_Whire2
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000596 - 00000596 (0x1 bytes), align: 0
  Segment part 32.            Intra module refs:   KEY_Whire2
    -------------------------------------------------------------------------
BAT_CHECK
  Relative segment, address: CODE 000073E8 - 0000756D (0x186 bytes), align: 0
  Segment part 62.            Intra module refs:   key_scan
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           task_battery_check      000073E8 
               calls direct
               stack 1 = 00000003 ( 00000000 )
    -------------------------------------------------------------------------
BAT_CHECK
  Relative segment, address: CODE 0000756E - 00007577 (0xa bytes), align: 0
  Segment part 63.            Intra module refs:   task_battery_check
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000597 - 00000597 (0x1 bytes), align: 0
  Segment part 33.            Intra module refs:   task_battery_check
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000598 - 00000598 (0x1 bytes), align: 0
  Segment part 34.            Intra module refs:   task_battery_check
    -------------------------------------------------------------------------
XDATA_I
  Relative segment, address: XDATA 000005C6 - 000005C7 (0x2 bytes), align: 0
  Segment part 35.            Intra module refs:   Segment part 63
                                                   task_battery_check
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 00000599 - 0000059A (0x2 bytes), align: 0
  Segment part 37.            Intra module refs:   task_battery_check
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000059B - 0000059B (0x1 bytes), align: 0
  Segment part 38.            Intra module refs:   task_battery_check
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000059C - 0000059C (0x1 bytes), align: 0
  Segment part 39.            Intra module refs:   task_battery_check
    -------------------------------------------------------------------------
XDATA_ID
  Relative segment, address: CODE 00004A05 - 00004A06 (0x2 bytes), align: 0
  Segment part 36.            Intra module refs:   Segment part 35
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049B6 - 000049C1 (0xc bytes), align: 0
  Segment part 13.            Intra module refs:   adc_get
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049C2 - 000049C8 (0x7 bytes), align: 0
  Segment part 14.            Intra module refs:   KEY_Whire1
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049C9 - 000049CE (0x6 bytes), align: 0
  Segment part 15.            Intra module refs:   KEY_Whire2
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049CF - 000049D5 (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   KEY_Whire2
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049D6 - 000049E0 (0xb bytes), align: 0
  Segment part 17.            Intra module refs:   task_battery_check
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049E1 - 000049E2 (0x2 bytes), align: 0
  Segment part 18.            Intra module refs:   double_click_filter
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049E3 - 000049E8 (0x6 bytes), align: 0
  Segment part 19.            Intra module refs:   key_scan

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_music.r51
  PROGRAM MODULE, NAME : user_music

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000AD - 000000AD (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SPMODE                  000000AD 
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 0000059D - 000005B3 (0x17 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           u_msc                   0000059D        Segment part 40 (task_flash)
                                                   Segment part 42 (task_flash)
                                                   led_7p7s_disp_song (led_7p7s)
                                                   music_decoder_read (user_fat)
                                                   read_flash_num_rtcram (mem_rtcram)
                                                   task_flash_music_deal_msg (task_flash)
                                                   task_flash_music_direct (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
                                                   task_flash_music_exit (task_flash)
                                                   task_flash_music_init (task_flash)
                                                   task_flash_music_new (task_flash)
                                                   task_music_break_save (task_music)
                                                   task_music_cal_time (task_music)
                                                   var_set_default (mem)
                                                   write_flash_num_rtcram (mem_rtcram)
                                                   write_music_break_rtcram (mem_rtcram)
                                                   write_num_rtcram (mem_rtcram)
    -------------------------------------------------------------------------
BDATA_N
  Relative segment, address: DATA 0000002C - 0000002C (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           b_msc                   0000002C        task_battery_check (user_key)
                                                   task_flash_music_auto_next (task_flash)
                                                   task_flash_music_direct (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
                                                   task_flash_music_new (task_flash)
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 000054D1 - 000054E3 (0x13 bytes), align: 0
  Segment part 14.            Intra module refs:   soft_isr
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           music_decode            000054D1 
               calls direct
               stack 1 = 00000005 ( 00000000 )
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049E9 - 000049EC (0x4 bytes), align: 0
  Segment part 13.            Intra module refs:   is_other_file
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           wav_header              000049E9 
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 000054E4 - 0000550D (0x2a bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           is_other_file           000054E4        Segment part 1 (OTP_VECTOR)
               calls direct
               stack 1 = 00000000 ( 00000003 )
    -------------------------------------------------------------------------
INTERRUPT
  Relative segment, address: CODE 00004E94 - 00004EC7 (0x34 bytes), align: 0
  Segment part 19.            Intra module refs:   soft_isr::??INTVEC 3
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           soft_isr                00004E94 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000005 )
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 0000550E - 0000553F (0x32 bytes), align: 0
  Segment part 17.            Intra module refs:   mp3_isr::??INTVEC 35
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mp3_isr                 0000550E 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000005 )
    -------------------------------------------------------------------------
MUSIC_SEG
  Relative segment, address: CODE 00005540 - 00005588 (0x49 bytes), align: 0
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           loop_auto               00005540        task_flash_music_direct (task_flash)
               stack 1 = 00000002 ( 00000000 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00004000 - 00004005 (0x6 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           soft_isr::??INTVEC 3    00004003 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00004000 - 00004025 (0x26 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mp3_isr::??INTVEC 35    00004023 

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_setting.r51
  PROGRAM MODULE, NAME : user_setting

  SEGMENTS IN THE MODULE
  ======================
XDATA_Z
  Relative segment, address: XDATA 000005B4 - 000005C3 (0x10 bytes), align: 0
  Segment part 8.             Intra module refs:   user_set_eq
                                                   user_set_volume
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           sys_ctl                 000005B4        OTHER_ADC_CHECK (user_key)
                                                   Segment part 36 (task_flash)
                                                   comm_event (task)
                                                   deal_msg (task)
                                                   delay_1ms (main)
                                                   irtc_init (api_rtc)
                                                   irtc_poweron (user_init)
                                                   key_scan (user_key)
                                                   led_7p7s_disp_vol (led_7p7s)
                                                   mem_read_init_info (mem)
                                                   music_decoder_read (user_fat)
                                                   read_volume_rtcram (mem_rtcram)
                                                   soft_poweroff_enter (task_poweroff)
                                                   system_init (user_init)
                                                   task_battery_check (user_key)
                                                   task_flash_music_auto_next (task_flash)
                                                   task_flash_music_deal_msg (task_flash)
                                                   task_flash_music_direct (task_flash)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
                                                   task_idle (task_idle)
                                                   timer2_isr (main)
                                                   var_set_default (mem)
                                                   write_device_rtcram (mem_rtcram)
                                                   write_playmode_rtcram (mem_rtcram)
                                                   write_volume_rtcram (mem_rtcram)
    -------------------------------------------------------------------------
BDATA_N
  Relative segment, address: DATA 0000002D - 0000002D (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           b_sys                   0000002D        comm_event (task)
                                                   device_change (task)
                                                   system_init (user_init)
                                                   task_flash_music_event (task_flash)
    -------------------------------------------------------------------------
USER_SETTING_SEG
  Relative segment, address: CODE 000072B6 - 000072BF (0xa bytes), align: 0
  Segment part 12.            Intra module refs:   user_set_volume
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           user_change_volume      000072B6        system_init (user_init)
                                                   task_flash_music_exit (task_flash)
               calls direct
               stack 1 = 00000001 ( 00000000 )
    -------------------------------------------------------------------------
USER_SETTING_SEG
  Relative segment, address: CODE 000072C0 - 000072EE (0x2f bytes), align: 0
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           user_set_volume         000072C0        Segment part 22 (task)
                                                   Segment part 36 (task_flash)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
USER_SETTING_SEG
  Relative segment, address: CODE 000072EF - 000072FC (0xe bytes), align: 0
  Segment part 14.            Intra module refs:   user_set_eq
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           user_change_eq          000072EF        system_init (user_init)
               calls direct
               stack 1 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
USER_SETTING_SEG
  Relative segment, address: CODE 000072FD - 0000730D (0x11 bytes), align: 0
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           user_set_eq             000072FD        task_flash_music_enter (task_flash)
               calls direct
    -------------------------------------------------------------------------
USER_SETTING_SEG
  Relative segment, address: CODE 0000730E - 0000732B (0x1e bytes), align: 0
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           user_set_mute           0000730E        deal_msg (task)
                                                   task_flash_music_enter (task_flash)
               calls direct

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_spi.r51
  PROGRAM MODULE, NAME : user_spi

  SEGMENTS IN THE MODULE
  ======================
XDATA_N
  Relative segment, address: XDATA 000002F3 - 000002F5 (0x3 bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           u_spi                   000002F3        decoder_read (user_fat)
                                                   decoder_seek (user_fat)
                                                   mp3_dec_subin (?mp3)
                                                   run_task (task)
                                                   spi_wait_busy (spi)
                                                   system_init (user_init)
                                                   task_flash_music_enter (task_flash)
                                                   task_flash_music_event (task_flash)
                                                   task_flash_music_exit (task_flash)
                                                   task_flash_music_init (task_flash)
    -------------------------------------------------------------------------
XDATA_Z
  Relative segment, address: XDATA 000005C4 - 000005C4 (0x1 bytes), align: 0
  Segment part 15.            Intra module refs:   spi_cs_disable
                                                   spi_cs_enable
                                                   spi_flash_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_chipnum           000005C4 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049ED - 000049F0 (0x4 bytes), align: 0
  Segment part 16.            Intra module refs:   spi_flash_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ReadIDCMD               000049ED 
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 000064F9 - 0000650F (0x17 bytes), align: 0
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_port_init           000064F9        port_init (user_io)
                                                   system_init (user_init)
                                                   task_flash_music_enter (task_flash)
               calls direct
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 00006510 - 00006513 (0x4 bytes), align: 0
  Segment part 26.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_sd_mux_enter        00006510        system_init (user_init)
                                                   task_flash_music_enter (task_flash)
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 00006514 - 00006525 (0x12 bytes), align: 0
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_sd_mux_exit         00006514        system_init (user_init)
                                                   task_flash_music_exit (task_flash)
               calls direct
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 00006526 - 00006535 (0x10 bytes), align: 0
  Segment part 28.            Intra module refs:   spi_readID
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_cs_enable           00006526        spi_read_hard (spi)
                                                   spi_read_ssr (spi)
               stack 1 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 00006536 - 00006545 (0x10 bytes), align: 0
  Segment part 29.            Intra module refs:   spi_readID
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_cs_disable          00006536        Segment part 26 (spi)
                                                   spi_read_ssr (spi)
               stack 1 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 00006546 - 00006549 (0x4 bytes), align: 0
  Segment part 32.            Intra module refs:   spi_readID
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_read_byte           00006546        Segment part 31 (spi)
                                                   spi_read_ssr (spi)
               calls direct
               stack 1 = 00000010 ( 00000000 )
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 0000654A - 0000654D (0x4 bytes), align: 0
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_write_byte          0000654A        Segment part 30 (spi)
                                                   spi_read_ssr (spi)
                                                   spi_send_addr_2 (spi)
               calls direct
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 0000654E - 0000655B (0xe bytes), align: 0
  Segment part 41.            Intra module refs:   spi_read
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 0000655C - 0000657B (0x20 bytes), align: 0
  Segment part 42.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_read                0000655C        get_Flash_TotalFiles (task_flash)
                                                   spi_mp3flash_read (?spi_api)
                                                   spi_read32 (spi)
               calls direct
               stack 1 = 00000004 ( 00000008 )
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 0000657C - 0000660E (0x93 bytes), align: 0
  Segment part 43.            Intra module refs:   spi_flash_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_readID              0000657C 
               calls direct
               stack 1 = 00000007 ( 00000011 )
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 0000660F - 00006678 (0x6a bytes), align: 0
  Segment part 44.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_flash_init          0000660F        system_init (user_init)
                                                   task_flash_music_enter (task_flash)
               calls direct
               stack 1 = 00000000 ( 00000007 )
    -------------------------------------------------------------------------
USER_SPI_SEG
  Relative segment, address: CODE 00006679 - 0000667C (0x4 bytes), align: 0
  Segment part 50.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           spi_mp3_index_read      00006679        task_flash_music_init (task_flash)
               calls direct
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049F1 - 000049F7 (0x7 bytes), align: 0
  Segment part 11.            Intra module refs:   spi_flash_init
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049F8 - 000049FB (0x4 bytes), align: 0
  Segment part 18.            Intra module refs:   spi_flash_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffffff     000049F8 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 000049FC - 000049FF (0x4 bytes), align: 0
  Segment part 19.            Intra module refs:   spi_flash_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_ffffff       000049FC 
    -------------------------------------------------------------------------
CODE_C
  Relative segment, address: CODE 00004A00 - 00004A03 (0x4 bytes), align: 0
  Segment part 23.            Intra module refs:   get_cluster_fix (?fat)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __Constant_1            00004A00 

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_usb.r51
  PROGRAM MODULE, NAME : user_usb

  SEGMENTS IN THE MODULE
  ======================
SFR_AN
  Relative segment, address: DATA 000000DC - 000000DC (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           USBCON1                 000000DC 
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 00006148 - 00006150 (0x9 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_switch_stable_device
                                   00006148        Segment part 1 (OTP_VECTOR)
               calls direct
    -------------------------------------------------------------------------
USB_SEG
  Relative segment, address: CODE 00006151 - 00006159 (0x9 bytes), align: 0
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usb_switch_stable_host
                                   00006151        Segment part 1 (OTP_VECTOR)
               calls direct

    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\Debug\Obj\user_usbdev.r51
    *************************************************************************

  FILE NAME : I:\a_wangqun\”ÓÃ©_ÀØ√ﬂ“«_KNP08\18BC073A_”ÓÃ©_AX1071_xxxxxxxx_20180629_Merlin_1\app\cl-ple-nlec-1e16x01.r51
  LIBRARY MODULE, NAME : ?MOVE_LONG8_XDATA_CODE

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00004A07 - 00004A28 (0x22 bytes), align: 0
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?MOVE_LONG8_XDATA_CODE
                                   00004A07 
           LOCAL                   ADDRESS         
           =====                   =======         
           move_byte               00004A0A 

    -------------------------------------------------------------------------
  PROGRAM MODULE, NAME : ?DEC_DPTR_3

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __DPTR_SEPARATE__       00000000 
    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?POP_BIT_ESP

  SEGMENTS IN THE MODULE
  ======================
RCODE
  Relative segment, address: CODE 00004A29 - 00004A91 (0x69 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?POP_BIT_ESP            00004A29 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CSTART
  Relative segment, address: CODE 0000428A - 0000428C (0x3 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0000428A        __low_level_init_call (?cmain)

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00004000 - 0000405D (0x5e bytes), align: 0
  Segment part 3.
    -------------------------------------------------------------------------
?FILL3
  Relative segment, address: CODE 00007578 - 00007FEC (0xa75 bytes), align: 0
  Segment part 2.
    -------------------------------------------------------------------------
?FILL2
  Relative segment, address: CODE 0000407E - 0000407F (0x2 bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 0000405E - 0000407A (0x1d bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00004000 - 0000405D          5E   com    0
?FILL1               CODE          0000405E - 0000407A          1D   rel    0
?FILL2               CODE          0000407E - 0000407F           2   rel    0
OTP_RESET            CODE          00004080 - 00004082           3   rel    0
OTP_VECTOR           CODE          00004083 - 000041F0         16E   rel    0
CSTART               CODE          000041F1 - 0000428C          9C   rel    0
CLK_SEG              CODE          0000428D - 000043D4         148   rel    0
I2C_CB_SEG           CODE          000043D5 - 00004454          80   rel    0
AUADC_SEG            CODE               00004455                     dse    0
AMUX_SEG             CODE               00004455                     dse    0
NEAR_CODE            CODE          00004455 - 00004877         423   rel    0
CODE_C               CODE          00004878 - 00004A03         18C   rel    0
BDATA_ID             CODE               00004A04                     dse    0
BIT_ID               CODE               00004A04                     dse    0
PDATA_ID             CODE               00004A04                     dse    0
IDATA_ID             CODE               00004A04                     dse    0
IXDATA_ID            CODE               00004A04                     dse    0
DATA_ID              CODE               00004A04                     dse    0
XDATA_ID             CODE          00004A04 - 00004A06           3   rel    0
RCODE                CODE          00004A07 - 00004A91          8B   rel    0
SYS_DELAY            CODE          00004A92 - 00004AA8          17   rel    0
SYS_INIT             CODE          00004AA9 - 00004C6C         1C4   rel    0
INTERRUPT            CODE          00004C6D - 00004EC7         25B   rel    0
SET_SYS_CLK_SEG      CODE          00004EC8 - 00004F49          82   rel    0
DAC_INIT             CODE          00004F4A - 0000508E         145   rel    0
DAC_INIT_CONST       CODE               0000508F                     dse    0
DAC_SEG              CODE          0000508F - 0000525B         1CD   rel    0
MUSIC_SEG            CODE          0000525C - 00005588         32D   rel    0
RTC_TBL              CODE               00005589                     dse    0
RTC_INIT             CODE          00005589 - 000055AE          26   rel    0
KEY_INIT             CODE          000055AF - 00005619          6B   rel    0
SCAN_COM             CODE          0000561A - 0000589C         283   rel    0
LED_7P7S_INIT        CODE          0000589D - 00005910          74   rel    0
LED_7P7S_SEG         CODE          00005911 - 00005CC6         3B6   rel    0
LED_DISP_TBL         CODE          00005CC7 - 00005CEA          24   rel    0
LED_DISP_SEG         CODE          00005CEB - 00005D82          98   rel    0
DEVICE_INIT          CODE          00005D83 - 00005DB6          34   rel    0
DEVICE_COM_SEG       CODE          00005DB7 - 00005DD6          20   rel    0
DEVICE_SEG           CODE          00005DD7 - 00005F21         14B   rel    0
DEV_ASM              CODE          00005F22 - 00005F4A          29   rel    0
SD_SEG               CODE          00005F4B - 00005FF2          A8   rel    0
USB_SEG              CODE          00005FF3 - 00006159         167   rel    0
FAT_COM_SEG          CODE          0000615A - 000061C2          69   rel    0
FAT_SEG              CODE               000061C3                     dse    0
FS_INIT_SEG          CODE               000061C3                     dse    0
FAT_API_SEG          CODE          000061C3 - 000061D2          10   rel    0
SPI_SEG              CODE          000061D3 - 000063AF         1DD   rel    0
SPI_API_SEG          CODE               000063B0                     dse    0
USER_SPI_SEG         CODE          000063B0 - 0000667C         2CD   rel    0
TASK_SEG             CODE          0000667D - 00006833         1B7   rel    0
TASK_MUSIC_SEG       CODE          00006834 - 00006922          EF   rel    0
TASK_IDLE_SEG        CODE          00006923 - 00006973          51   rel    0
TASK_POWEROFF_SEG    CODE          00006974 - 00006A93         120   rel    0
TASK_FLASH_SEG       CODE          00006A94 - 000070E9         656   rel    0
DISP_OCX_SEG         CODE          000070EA - 00007150          67   rel    0
DISP_POWEROFF_SEG    CODE          00007151 - 0000715D           D   rel    0
DISP_IDLE_SEG        CODE          0000715E - 0000716E          11   rel    0
MEM                  CODE          0000716F - 000071FA          8C   rel    0
MEMEEP               CODE               000071FB                     dse    0
MEMRTCRAM            CODE          000071FB - 000072B5          BB   rel    0
USER_SETTING_SEG     CODE          000072B6 - 0000732B          76   rel    0
USER_SETTING_CONST   CODE          0000732C - 0000735E          33   rel    0
USER_IO_SEG          CODE          0000735F - 000073E7          89   rel    0
BAT_CHECK            CODE          000073E8 - 00007577         190   rel    0
?FILL3               CODE          00007578 - 00007FEC         A75   rel    0
CHECKSUM             CODE          00007FED - 00007FEF           3   rel    0
CODE_TBL             CODE          00007FF0 - 00007FF7           8   rel    0
M_CONSTANT           CODE          00C00000 - 00C089E7        89E8   rel    0
REGISTERS            DATA          00000000 - 00000007           8   rel    0
__REG_BANK1          DATA          00000008 - 0000000F           8   rel    0
__REG_BANK2          DATA          00000010 - 00000017           8   rel    0
BREG                 BIT        00000020.0  -  00000020.7        8   rel    0
BIT_N                BIT        00000026.0  -  00000026.2        3   rel    0
BDATA_N              DATA          00000027 - 0000002D           7   rel    0
VREG                 DATA          00000030 - 00000043          14   rel    0
SYS_DATA             DATA          00000044 - 00000046           3   rel    0
DATA_I               DATA               00000047                     dse    0
DATA_Z               DATA          00000047 - 0000004E           8   rel    0
MP3_DATA             DATA          0000005C - 0000005D           2   rel    0
DATA_N               DATA          0000006D - 0000007C          10   rel    0
SFR_AN               DATA          00000080 - 00000080           1   rel    0
                     DATA          00000088 - 00000088           1 
                     DATA          0000008B - 0000008B           1 
                     DATA          00000090 - 00000090           1 
                     DATA          000000A0 - 000000A0           1 
                     DATA          000000A3 - 000000A3           1 
                     DATA          000000A8 - 000000A9           2 
                     DATA          000000AD - 000000AD           1 
                     DATA          000000B1 - 000000B3           3 
                     DATA          000000B9 - 000000BE           6 
                     DATA          000000C0 - 000000C0           1 
                     DATA          000000C2 - 000000C2           1 
                     DATA          000000C5 - 000000C6           2 
                     DATA          000000C8 - 000000C9           2 
                     DATA          000000CB - 000000CF           5 
                     DATA          000000D1 - 000000D2           2 
                     DATA          000000D4 - 000000D6           3 
                     DATA          000000D9 - 000000D9           1 
                     DATA          000000DB - 000000DD           3 
                     DATA          000000E2 - 000000E2           1 
                     DATA          000000E6 - 000000E8           3 
                     DATA          000000ED - 000000EF           3 
                     DATA          000000F1 - 000000F1           1 
                     DATA          000000F7 - 000000F7           1 
                     DATA          000000FC - 000000FC           1 
USB_HOST_MASS_PDATA
                     XDATA         0000000D - 0000001C          10   rel    0
USB_HOST_PDATA       XDATA         0000001D - 00000036          1A   rel    0
FAT_PDATA            XDATA         0000003F - 000000A4          66   rel    0
MSG_POOL             XDATA         000000B2 - 000000C1          10   rel    0
EXT_STACK            XDATA         00000100 - 0000027F         180   rel    0
IXDATA_I             XDATA              00000280                     dse    0
XDATA_N              XDATA         00000280 - 000002F5          76   rel    0
XDATA_AN             XDATA         000003C2 - 000003CA           9   rel    0
DAC_XDATA            XDATA         000003CB - 000003D1           7   rel    0
FAT_XDATA            XDATA         00000468 - 0000048E          27   rel    0
XDATA_Z              XDATA         00000500 - 000005C4          C5   rel    0
XDATA_I              XDATA         000005C5 - 000005C7           3   rel    0
FILE_POINT_BUF       XDATA         000005C8 - 00000706         13F   rel    0
TRIM_XDATA           XDATA         00000707 - 0000070B           5   rel    0
DECODER_BUF          XDATA         000007D0 - 00000FFF         830   rel    0
DIR_PATH_XDATA       XDATA         000107D0 - 000108B9          EA   rel    0
IDATA_Z              IDATA              0000007D                     dse    0
IDATA_I              IDATA              0000007D                     dse    0
IDATA_N              IDATA         0000007D - 00000090          14   rel    0
ISTACK               IDATA              00000095                     rel    0
IDATA_AN             IDATA         00000095 - 00000095           1   rel    0
                     IDATA         000000A9 - 000000A9           1 
IDATA_AN             IDATA         000000B5 - 000000B5           1   rel    0
                     CODE          0000407B - 0000407D           3  aseg  

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 48 969 bytes of CODE  memory (+  3 absolute, 2 708 range fill )
     64 bytes of DATA  memory (+ 64 absolute  )
  3 562 bytes of XDATA memory (+  9 absolute  )
     20 bytes of IDATA memory (+  3 absolute  )
     11 bits  of BIT   memory

Errors: none
Warnings: none

