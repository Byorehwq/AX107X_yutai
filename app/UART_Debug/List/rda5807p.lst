##############################################################################
#                                                                            #
# IAR 8051 C/C++ Compiler V7.20H/W32                   10/Sep/2015  19:03:29 #
# Copyright 2004-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Core               =  plain                                             #
#    Code model         =  near                                              #
#    Data model         =  large                                             #
#    Calling convention =  extended stack reentrant                          #
#    Constant location  =  code                                              #
#    Extended stack     =  enabled                                           #
#    Dptr setup         =  1,16                                              #
#    Source file        =  C:\Documents and Settings\Administrator\×ÀÃæ\lily #
#                          \15BC178B_Lily_AX1070_20150908\15BC178B_Lily_AX10 #
#                          70_20150908\fm\rda5807p.c                         #
#    Command line       =  -I "C:\Program Files\IAR Systems\Embedded         #
#                          Workbench 4.05 Evaluation version\8051\INC\" -I   #
#                          "C:\Program Files\IAR Systems\Embedded Workbench  #
#                          4.05 Evaluation version\8051\INC\CLIB\" -I        #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\lil #
#                          y\15BC178B_Lily_AX1070_20150908\15BC178B_Lily_AX1 #
#                          070_20150908\COMMON\" -I "C:\Documents and        #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\INC\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ #
#                          \lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily #
#                          _AX1070_20150908\config\" -I "C:\Documents and    #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\api\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ #
#                          \lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily #
#                          _AX1070_20150908\fm\" -I "C:\Documents and        #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\fat\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ #
#                          \lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily #
#                          _AX1070_20150908\display\" -I "C:\Documents and   #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\displ #
#                          ay\led\" -I "C:\Documents and                     #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\displ #
#                          ay\lcd\" -I "C:\Documents and                     #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\task\ #
#                          " -I "C:\Documents and Settings\Administrator\×ÀÃ #
#                          æ\lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lil #
#                          y_AX1070_20150908\user\" -I "C:\Documents and     #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\mem\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ #
#                          \lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily #
#                          _AX1070_20150908\module\" -I "C:\Documents and    #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\modul #
#                          e\kedir\" -I "C:\Documents and                    #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\key\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ #
#                          \lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily #
#                          _AX1070_20150908\startmusic\" -D UART_DEBUG -D    #
#                          AX207X_TAG -lC "C:\Documents and                  #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\UART_ #
#                          Debug\List\" -o "C:\Documents and                 #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\UART_ #
#                          Debug\Obj\" -e -z9 --debug --core=plain           #
#                          --dptr=16,1 --data_model=large --code_model=near  #
#                          --calling_convention=ext_stack_reentrant          #
#                          --place_constants=code --nr_virtual_regs 20       #
#                          --extended_stack "C:\Documents and                #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\fm\rd #
#                          a5807p.c"                                         #
#    List file          =  C:\Documents and Settings\Administrator\×ÀÃæ\lily #
#                          \15BC178B_Lily_AX1070_20150908\15BC178B_Lily_AX10 #
#                          70_20150908\UART_Debug\List\rda5807p.lst          #
#    Object file        =  C:\Documents and Settings\Administrator\×ÀÃæ\lily #
#                          \15BC178B_Lily_AX1070_20150908\15BC178B_Lily_AX10 #
#                          70_20150908\UART_Debug\Obj\rda5807p.r51           #
#                                                                            #
#                                                                            #
##############################################################################

C:\Documents and Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily_AX1070_20150908\fm\rda5807p.c
      1          /*--------------------------------------------------------------------------*/
      2          /**@file RDA5807P.C
      3             @brief FMÄ£¿éRDA5807PÇý¶¯
      4             @details FMÄ£¿éRDA5807PµÄÇý¶¯º¯Êý
      5             @author LZZ
      6             @date 2010-08-17
      7             @note ±¾Çý¶¯Ö§³ÖÄ£¿é£¬Ö§³Ö32K¹²¾§Õñ,Ö§³ÖP05Êä³öÊ±ÖÓ,ÈýÖÖ·½Ê½Ê±ÖÓµÄ³ÌÐòÒ»Ñù
      8                   Í¨¹ýÊ¶±ðIDÀ´Çø±ð¸÷ÖÖ°æ±¾
      9          */
     10          /*----------------------------------------------------------------------------*/
     11          
     12          #include "include.h"
     13          #include "rda5807P.h"
     14          
     15          
     16          #if FM_RDA5807_EN
     17          
     18          /*********************************************************************************/
     19          /*          Ö§³Ö32K¹²¾§Õñ,Ö§³ÖP05Êä³öÊ±ÖÓ,ÈýÖÖ·½Ê½Ê±ÖÓµÄ³ÌÐòÒ»Ñù                 */
     20          /*********************************************************************************/
     21          u16 rda5807_chipID;
     22          u8 dat[24];
     23          u8 readdata[10];
     24          
     25          void rda5807_fill(const u8 __code *pSrc);
     26          void rda5807_write_c(const u8 __code *writedata, u8 size);
     27          void rda5807_write(u8 size);
     28          void rda5807_read(u8 size);
     29          
     30          /*----------------------------------------------------------------------------*/
     31          /**@brief FMÄ£¿éRDA5807P³õÊ¼»¯
     32             @param ÎÞ
     33             @return ÎÞ
     34             @note
     35          */
     36          /*----------------------------------------------------------------------------*/
     37          #pragma constseg = RDA5807_RX_TABLE     //´ËÊý×éÖ»ÄÜ±»bankÇøº¯Êýµ÷ÓÃ£¬Òò´Ë±ØÐëÒªºÍRDA5807_RXÍ¬bankÇø
     38          
     39          #if RDA5807_PE_SP
     40          /* ´Ë³õÊ¼»¯Ö§³Ö RDA5807PE  RDA5807SP °æ±¾ */
     41          const u8 rad5807_init_tbl[104] =           //    Ô­À´µÄ5807SP
     42          {
     43          #if (FM_CLOCK == USE_MODULE_CRYSTAL)
     44          	0xC0, 0x01, //02H: internal 32.768M
     45          #elif (FM_CLOCK == SHARE_CRYSTAL_24MHz)
     46          	0x84, 0x51, //02H: external 24M
     47          #elif (FM_CLOCK == SHARE_CRYSTAL_12MHz)
     48          	0xc4, 0x11, //02H: external 12M
     49          #elif (FM_CLOCK == SHARE_CRYSTAL_32KHz)
     50          	0xc0, 0x01, //02H: external 32.768M
     51          #elif ((FM_CLOCK == USE_IO_32KHZ_CLK) || (FM_CLOCK == USE_SD_IO_32KHZ_CLK))
     52          	0xc0, 0x01, //02H: external 32.768M
     53          #elif ((FM_CLOCK == USE_IO_12MHZ_CLK) || (FM_CLOCK == USE_SD_IO_12MHZ_CLK))
     54          	0xc4, 0x11, //02H: external 12M
     55          #else
     56          #error "RDA5807: ÇëÑ¡ÔñFMÊ±ÖÓÔ´"
     57          #endif
     58          
     59          	0x00, 0x10,
     60          	0x04, 0x00,
     61          	0x88, 0xaf, //05H:0x80~0x8fÔ½Ð¡Ì¨Ô½¶à
     62          	0x80, 0x00,
     63          	0x76, 0xc6, //07H
     64          	0x5e, 0xc6,
     65          	0x00, 0x00,
     66          	0x40, 0x6e, //0AH:
     67          	0x2d, 0x80,
     68          	0x58, 0x03,
     69          	0x58, 0x04,
     70          	0x58, 0x04,
     71          	0x58, 0x04,
     72          	0x00, 0x47, //10H:
     73          	0x90, 0x00,
     74          	0xF5, 0x87,
     75          	0x7F, 0x0B, //13H:
     76          	0x04, 0xF1,
     77          	0x5E, 0xc0, //15H: 0x42, 0xc0
     78          	0x41, 0xe0,
     79          	0x50, 0x6f,
     80          	0x55, 0x92,
     81          	0x00, 0x7d,
     82          	0x10, 0xC0, //1AH:
     83          	0x07, 0x80,
     84          	0x41, 0x1d, //1CH:
     85          	0x40, 0x06,
     86          	0x1f, 0x9B,
     87          	0x4c, 0x2b, //1FH:
     88          	0x81, 0x10, //20H:
     89          	0x45, 0xa0, //21H:
     90          	0x19, 0x3F, //22H:
     91          	0xaf, 0x40,
     92          	0x06, 0x81,
     93          	0x1b, 0x2a, //25H:
     94          	0x0D, 0x04,
     95          	0x80, 0x9F, //0x80, 0x2F,
     96          	0x17, 0x8A,
     97          	0xD3, 0x49,
     98          	0x11, 0x42,
     99          	0xA0, 0xC4, //2BH:
    100          	0x3E, 0xBB,
    101          	0x00, 0x00,
    102          	0x58, 0x04,
    103          	0x58, 0x04, //2FH:
    104          	0x58, 0x04,
    105          	0x00, 0x74,
    106          	0x3D, 0x00,
    107          	0x03, 0x0C,
    108          	0x2F, 0x68,
    109          	0x38, 0x77, //35H:
    110          };
    111          #endif
    112          
    113          
    114          #if RDA5807_HS_HP
    115          /* ´Ë³õÊ¼»¯Ö§³Ö RDA5807HS  RDA5807HP °æ±¾ */
    116          const u8 rad5807H_init_tbl[110] =      //¸üÐÂºóµÄ5807£¬ÐÍºÅ5807HP
    117          {
    118          #if (FM_CLOCK == USE_MODULE_CRYSTAL)
    119          	0xC0, 0x01, //02H: internal 32.768M
    120          #elif (FM_CLOCK == SHARE_CRYSTAL_24MHz)
    121          	0x84, 0x51, //02H: external 24M
    122          #elif (FM_CLOCK == SHARE_CRYSTAL_12MHz)
    123          	0xc4, 0x11, //02H: external 12M
    124          #elif (FM_CLOCK == SHARE_CRYSTAL_32KHz)
    125          	0xc0, 0x01, //02H: external 32.768M
    126          #elif ((FM_CLOCK == USE_IO_32KHZ_CLK) || (FM_CLOCK == USE_SD_IO_32KHZ_CLK))
    127          	0xc0, 0x01, //02H: external 32.768M
    128          #elif ((FM_CLOCK == USE_IO_12MHZ_CLK) || (FM_CLOCK == USE_SD_IO_12MHZ_CLK))
    129          	0xc4, 0x11, //02H: external 12M
    130          #else
    131          #error "RDA5807H: ÇëÑ¡ÔñFMÊ±ÖÓÔ´"
    132          #endif
    133          
    134          	0x00,0x10,
    135          	0x04,0x00,
    136          	0x88,0xBf, //05H://86    Èç´ò¿ª20H¼Ä´æÆ÷£¬¿ÉÔÚ´Ëµ÷ËÑÌ¨¸öÊý,ÓëSP°æÒ»Ñù£¬0X80ËÑÌ¨×î¶à
    137          	0x40,0x00,
    138          	0x7E,0xc6,
    139          	//ÒÔÏÂ¼Ä´æÆ÷ÅäÖÃ²»¿ÉÊ¡È¥
    140          	0x00,0x00,
    141          	0x00,0x00,
    142          	0x00,0x00, //0AH:
    143          	0x00,0x00,
    144          	0x00,0x00,
    145          	0x00,0x00,
    146          	0x00,0x00,
    147          	0x00,0x00,
    148          	0x00,0x06, //10H:
    149          	0x00,0x19, //0x00,0x09,//0830
    150          	0x2a,0x11,
    151          	0x00,0x2e,
    152          	0x2a,0x30,
    153          	0xb8,0x3c, //15H:
    154          	0x90,0x00,
    155          	0x2a,0x91,
    156          	0x84,0x12,
    157          	0x00,0xa8,
    158          	0xc4,0x00, //1AH:
    159          	0xe0,0x00,
    160          	0x30,0x1d, //0x24,0x9d
    161          	0x81,0x6a,
    162          	0x46,0x08,
    163          	0x00,0x86, //1FH:
    164          	0x06,0x61, //20H:0x16,0x61  //0X16Îª´ò¿ªµÚ05H¼Ä´æÆ÷£¬¿ÉÔÚ05Hµ÷ËÑÌ¨Êý
    165          	0x00,0x00,
    166          	0x10,0x9e,
    167          	0x25,0x4A, //0x24,0Xc9Ì¨¶à  //   0x23,0x46 //0x25,0x4a //0x25,0xCB  //0x26,0x4cÌ¨Ïà¶ÔÉÙ,µ«Çå³þÌ¨¸ü¶à£¬¸ù¾Ý¿Í»§ÐèÇóÑ¡Ôñ  //23h  ËÑÌ¨ÃÅÏÞÖµµ÷Õû
    168          	0x04,0x08, //0830
    169          	0x0c,0x16, //25H://0x06,0x08,//0830
    170          	0xe1,0x05,
    171          	0x3b,0x6c,
    172          	0x2b,0xec,
    173          	0x09,0x0f,
    174          	0x34,0x14, //2AH:
    175          	0x14,0x50,
    176          	0x09,0x6d,
    177          	0x2d,0x96,
    178          	0x01,0xda,
    179          	0x2a,0x7b,
    180          	0x08,0x21, //30H:
    181          	0x13,0xd5,
    182          	0x48,0x91,
    183          	0x00,0xbc,
    184          	0x08,0x96, //34H:0830
    185          	0x15,0x3c,
    186          	0x0b,0x80,
    187          	0x25,0xc7,
    188          	0x00,0x00,
    189          };
    190          #endif
    191          
    192          #ifdef RDA5807_M_MP
    193          /* ´Ë³õÊ¼»¯Ö§³Ö RDA5807MP  RDA5807M °æ±¾ */
    194          const u8 rad5807M_init_tbl[70] =    //¸üÐÂºóµÄ5807£¬ÐÍºÅ5807MP
    195          {
    196          #if (FM_CLOCK == USE_MODULE_CRYSTAL)
    197          	0xC0, 0x05, //02H: internal 32.768M
    198          #elif (FM_CLOCK == SHARE_CRYSTAL_24MHz)
    199          	0x84, 0x51, //02H: external 24M
    200          #elif (FM_CLOCK == SHARE_CRYSTAL_12MHz)
    201          	0xc4, 0x11, //02H: external 12M
    202          #elif (FM_CLOCK == SHARE_CRYSTAL_32KHz)
    203          	0xc0, 0x05, //02H: external 32.768K
    204          #elif ((FM_CLOCK == USE_IO_32KHZ_CLK) || (FM_CLOCK == USE_SD_IO_32KHZ_CLK))
    205          	0xc0, 0x05, //02H: external 32.768M
    206          #elif ((FM_CLOCK == USE_IO_12MHZ_CLK) || (FM_CLOCK == USE_SD_IO_12MHZ_CLK))
    207          	0xc4, 0x11, //02H: external 12M
    208          #else
    209          #error "RDA5807M: ÇëÑ¡ÔñFMÊ±ÖÓÔ´"
    210          #endif
    211          
    212          	0x00, 0x10,
    213          	0x04, 0x00,
    214          	0x85, 0xaf, //05H:
    215          	0x60, 0x00,
    216          	0x76, 0xc6,
    217          	0x00, 0x00,
    218          	0x00, 0x00,
    219          	0x00, 0x00, //0AH:
    220          	0x00, 0x00,
    221          	0x00, 0x00,
    222          	0x00, 0x00,
    223          	0x00, 0x00,
    224          	0x00, 0x00,
    225          	0x00, 0x00, //10H:
    226          	0x00, 0x19,
    227          	0x2a, 0x11,
    228          	0x80, 0x53,
    229          	0x22, 0x11,
    230          	0xf8, 0x30, //15H:
    231          	0xc0, 0x00,
    232          	0x2a, 0x91,
    233          	0x94, 0x00,
    234          	0x00, 0xa8,
    235          	0xc4, 0x00, //1AH:
    236          	0xe0, 0x00,
    237          	0x3a, 0x14, //1CH:
    238          	0x81, 0x6a,
    239          	0x46, 0x08,
    240          	0x00, 0x86,
    241          	0x06, 0x61, //20H:
    242          	0x00, 0x00,
    243          	0x10, 0x9e,
    244          	0x22, 0x44,
    245          	0x04, 0x08, //24H:
    246          };
    247          #endif
    248          
    249          #pragma constseg=default
    250          
    251          void rda5807_seek_tune(u16 freq, u8 diect)@"RDA5807_RX"
    252          {
    253          	u16 ch = 0;
    254          
    255          	ch = (freq - 8700)/10;
    256          	dat[0] |=0x40;
    257          	dat[2] = ch>>2;
    258          	dat[3] = ((ch&0x0003)<<6)|0x10;
    259          
    260          	rda5807_write(4);
    261          	DELAY_MS(10);
    262          
    263          	rda5807_write(4);	//ÉèÖÃÁ½´Î
    264          	DELAY_MS(10);
    265          }
    266          
    267          void rda5807_read(u8 size)@"RDA5807_RX"
    268          {
    269          	u16 i;
    270          
    271          	fm_i2c_start();
    272          	fm_i2c_send_byte(0x21);
    273          	fm_i2c_recv_ack();
    274          
    275          	for(i=0; i<size-1; i++)
    276          	{
    277          		readdata[i] = fm_i2c_read_byte();
    278          		fm_i2c_send_ack();
    279          	}
    280          
    281          	readdata[i] = fm_i2c_read_byte();
    282          	fm_i2c_send_nack();
    283          
    284          	fm_i2c_stop();
    285          }
    286          
    287          void rda5807_write(u8 size)@"RDA5807_RX"
    288          {
    289          	u8 i;
    290          
    291          	fm_i2c_start();
    292          
    293          	fm_i2c_send_byte(0x20);
    294          	fm_i2c_recv_ack();
    295          
    296          	for(i=0; i<size; i++)
    297          	{
    298          		fm_i2c_send_byte(dat[i]);
    299          		fm_i2c_recv_ack();
    300          	}
    301          
    302          	fm_i2c_stop();
    303          }
    304          
    305          void rda5807_fill(const u8 __code *pSrc)@"RDA5807_RX"
    306          {
    307          	u8 i;
    308          	for(i=0; i<= 11; i++)
    309          	{
    310          		dat[i] = *pSrc++;
    311          	}
    312          }
    313          
    314          void rda5807_write_c(const u8 __code *writedata, u8 size)@"RDA5807_RX"
    315          {
    316          	u8 i;
    317          
    318          	fm_i2c_start();
    319          
    320          	fm_i2c_send_byte(0x20);
    321          	fm_i2c_recv_ack();
    322          
    323          	for(i=0; i<size; i++)
    324          	{
    325          		fm_i2c_send_byte(*writedata++);
    326          		fm_i2c_recv_ack();
    327          	}
    328          
    329          	fm_i2c_stop();
    330          }
    331          
    332          /*----------------------------------------------------------------------------*/
    333          /**@brief FMÄ£¿éRDA5807P¼ì²â
    334             @param ÎÞ
    335             @return ¼ì²âµ½RDA5807PÄ£¿é·µ»Ø1£¬·ñÔò·µ»Ø0
    336             @note
    337          */
    338          /*----------------------------------------------------------------------------*/
    339          u8 rda5807p_online(void)@"RDA5807_RX"
    340          {
    341          	dat[0] = 0x00;
    342          	dat[1] = 0x02;
    343          	rda5807_write(2);
    344          
    345          	//read ID
    346          	rda5807_read(10);
    347          	rda5807_chipID = (readdata[8] << 8) | readdata[9];
    348          
    349          	if((rda5807_chipID == 0x5801) || (rda5807_chipID == 0x5804) || (rda5807_chipID == 0x5808))
    350          	{
    351          		return 1;
    352          	}
    353          	else {
    354          		return 0;
    355          	}
    356          }
    357          
    358          /*----------------------------------------------------------------------------*/
    359          /**@brief FMÄ£¿éRDA5807P³õÊ¼»¯
    360             @param ÎÞ
    361             @return ÎÞ
    362             @note
    363          */
    364          /*----------------------------------------------------------------------------*/
    365          void rda5807p_init(void)@"RDA5807_RX"
    366          {
    367          #if RDA5807_PE_SP
    368          	if(0x5804 == rda5807_chipID)
    369          	{
    370          		//power on
    371          		rda5807_fill(rad5807_init_tbl);
    372          		rda5807_write(2);
    373          		DELAY_MS(120);
    374          		//init
    375          		rda5807_write_c(rad5807_init_tbl, 104);
    376          		DELAY_MS(1);
    377          	}
    378          #endif
    379          
    380          #if RDA5807_HS_HP
    381          	if(0x5801 == rda5807_chipID)
    382          	{
    383          		//power on
    384          		rda5807_fill(rad5807H_init_tbl);
    385          		rda5807_write(2);
    386          		DELAY_MS(120);
    387          		//init
    388          		rda5807_write_c(rad5807H_init_tbl, 110);
    389          		DELAY_MS(1);
    390          	}
    391          #endif
    392          
    393          #if RDA5807_M_MP
    394          	if(0x5808 == rda5807_chipID)
    395          	{
    396          		//power on
    397          		rda5807_fill(rad5807M_init_tbl);
    398          		rda5807_write(2);
    399          		DELAY_MS(120);
    400          		//init
    401          		rda5807_write_c(rad5807M_init_tbl, 70);
    402          		DELAY_MS(1);
    403          	}
    404          #endif
    405          }
    406          
    407          /*----------------------------------------------------------------------------*/
    408          /**@brief FMÄ£¿éRDA5807PÉèÖÃÆµÂÊ
    409             @param freq ÒªÉèÖÃµÄÆµÂÊ
    410             @return ÎÞ
    411             @note ÆµÂÊ·¶Î§Îª875~1080
    412          */
    413          /*----------------------------------------------------------------------------*/
    414          void rda5807p_set_freq(u16 freq)@"RDA5807_RX"
    415          {
    416          	rda5807_seek_tune(freq*10,0);	//·ÅÀïÃæÉèÁ½´Î
    417          }
    418          
    419          /*----------------------------------------------------------------------------*/
    420          /**@brief FMÄ£¿éRDA5807PÉèÖÃÒôÁ¿
    421             @param vol ÒôÁ¿Öµ
    422             @return ÎÞ
    423             @note ÒôÁ¿·¶Î§0~15
    424          */
    425          /*----------------------------------------------------------------------------*/
    426          void rda5807p_set_vol(u8 vol)@"RDA5807_RX"
    427          {
    428          	if(vol > 15)
    429          		vol = 15;
    430          
    431          	dat[7] &=~0x0F;
    432          	dat[7] |= vol;
    433          
    434          	dat[3] &= ~BIT(4);  //03H.4=0,disable tune
    435          	rda5807_write(8);
    436          }
    437          
    438          /*----------------------------------------------------------------------------*/
    439          /**@brief FMÄ£¿éRDA5807P×Ô¶¯ËÑÌ¨
    440             @param freq ÒªËÑË÷µÄÆµÂÊ
    441             @return Ö¸¶¨µÄÆµÂÊÏÂÓÐÌ¨·µ»Ø1£¬·ñÔò·µ»Ø0
    442             @note
    443          */
    444          /*----------------------------------------------------------------------------*/
    445          u8 rda5807p_seek(u16 freq)@"RDA5807_RX"
    446          {
    447          	rda5807p_set_freq(freq);
    448          	DELAY_MS(10);
    449          
    450          	do {
    451          		rda5807_read(4);
    452          		DELAY_MS(4);
    453          	}
    454          	while(!((readdata[3]>>7) & 0x01));
    455          	return (readdata[2] & 0x01)? true : false;
    456          }
    457          
    458          /*----------------------------------------------------------------------------*/
    459          /**@brief FMÄ£¿éRDA5807P¾²Òô
    460             @param
    461             @return
    462             @note
    463          */
    464          /*----------------------------------------------------------------------------*/
    465          void rda5807p_mute(void)@"RDA5807_RX"
    466          {
    467          	dat[0] &= ~(1<<6);//MUTE ENABLE
    468          
    469          	rda5807_write(2);
    470          	DELAY_MS(5);
    471          }
    472          
    473          /*----------------------------------------------------------------------------*/
    474          /**@brief FMÄ£¿éRDA5807P½â³ý¾²Òô
    475             @param
    476             @return
    477             @note
    478          */
    479          /*----------------------------------------------------------------------------*/
    480          void rda5807p_unmute(void)@"RDA5807_RX"
    481          {
    482          	dat[0] |= (1<<6)|(1<<7);
    483          	dat[1] |= (1<<0);
    484          
    485          	rda5807_write(2);
    486          	DELAY_MS(5);
    487          }
    488          
    489          /*----------------------------------------------------------------------------*/
    490          /**@brief FMÄ£¿éRDA5807P¹Ø±Õ
    491             @param ÎÞ
    492             @return ÎÞ
    493             @note
    494          */
    495          /*----------------------------------------------------------------------------*/
    496          void rda5807p_off(void)@"RDA5807_RX"
    497          {
    498          	dat[1] &= ~(1<<0);
    499          	rda5807_write(2);
    500          	DELAY_MS(100);
    501          }
    502          
    503          #endif


   Segment part sizes:

     Function/Label Bytes
     -------------- -----

 
 
 0 bytes of memory

Errors: none
Warnings: none
