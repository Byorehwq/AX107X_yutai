##############################################################################
#                                                                            #
# IAR 8051 C/C++ Compiler V7.20H/W32                   10/Sep/2015  19:03:28 #
# Copyright 2004-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Core               =  plain                                             #
#    Code model         =  near                                              #
#    Data model         =  large                                             #
#    Calling convention =  extended stack reentrant                          #
#    Constant location  =  code                                              #
#    Extended stack     =  enabled                                           #
#    Dptr setup         =  1,16                                              #
#    Source file        =  C:\Documents and Settings\Administrator\×ÀÃæ\lily #
#                          \15BC178B_Lily_AX1070_20150908\15BC178B_Lily_AX10 #
#                          70_20150908\display\led\led_5c7s.c                #
#    Command line       =  -I "C:\Program Files\IAR Systems\Embedded         #
#                          Workbench 4.05 Evaluation version\8051\INC\" -I   #
#                          "C:\Program Files\IAR Systems\Embedded Workbench  #
#                          4.05 Evaluation version\8051\INC\CLIB\" -I        #
#                          "C:\Documents and Settings\Administrator\×ÀÃæ\lil #
#                          y\15BC178B_Lily_AX1070_20150908\15BC178B_Lily_AX1 #
#                          070_20150908\COMMON\" -I "C:\Documents and        #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\INC\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ #
#                          \lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily #
#                          _AX1070_20150908\config\" -I "C:\Documents and    #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\api\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ #
#                          \lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily #
#                          _AX1070_20150908\fm\" -I "C:\Documents and        #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\fat\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ #
#                          \lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily #
#                          _AX1070_20150908\display\" -I "C:\Documents and   #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\displ #
#                          ay\led\" -I "C:\Documents and                     #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\displ #
#                          ay\lcd\" -I "C:\Documents and                     #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\task\ #
#                          " -I "C:\Documents and Settings\Administrator\×ÀÃ #
#                          æ\lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lil #
#                          y_AX1070_20150908\user\" -I "C:\Documents and     #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\mem\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ #
#                          \lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily #
#                          _AX1070_20150908\module\" -I "C:\Documents and    #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\modul #
#                          e\kedir\" -I "C:\Documents and                    #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\key\" #
#                           -I "C:\Documents and Settings\Administrator\×ÀÃæ #
#                          \lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily #
#                          _AX1070_20150908\startmusic\" -D UART_DEBUG -D    #
#                          AX207X_TAG -lC "C:\Documents and                  #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\UART_ #
#                          Debug\List\" -o "C:\Documents and                 #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\UART_ #
#                          Debug\Obj\" -e -z9 --debug --core=plain           #
#                          --dptr=16,1 --data_model=large --code_model=near  #
#                          --calling_convention=ext_stack_reentrant          #
#                          --place_constants=code --nr_virtual_regs 20       #
#                          --extended_stack "C:\Documents and                #
#                          Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX #
#                          1070_20150908\15BC178B_Lily_AX1070_20150908\displ #
#                          ay\led\led_5c7s.c"                                #
#    List file          =  C:\Documents and Settings\Administrator\×ÀÃæ\lily #
#                          \15BC178B_Lily_AX1070_20150908\15BC178B_Lily_AX10 #
#                          70_20150908\UART_Debug\List\led_5c7s.lst          #
#    Object file        =  C:\Documents and Settings\Administrator\×ÀÃæ\lily #
#                          \15BC178B_Lily_AX1070_20150908\15BC178B_Lily_AX10 #
#                          70_20150908\UART_Debug\Obj\led_5c7s.r51           #
#                                                                            #
#                                                                            #
##############################################################################

C:\Documents and Settings\Administrator\×ÀÃæ\lily\15BC178B_Lily_AX1070_20150908\15BC178B_Lily_AX1070_20150908\display\led\led_5c7s.c
      1          /*--------------------------------------------------------------------------*/
      2          /**@file led_5c7s.C
      3             @brief LED¸÷ÖÖÏÔÊ¾º¯Êý
      4             @details LEDÏÔÊ¾ÖÐÊ¹ÓÃµÄº¯Êý
      5             @author LZZ
      6             @date   2010-08-17
      7             @note   none
      8          */
      9          /*----------------------------------------------------------------------------*/
     10          #include "include.h"

   \                                 In segment SFR_AN, at 0x80
   \   unsigned char volatile __sfr P0
   \                     P0:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xa0
   \   unsigned char volatile __sfr P2
   \                     P2:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xba
   \   unsigned char volatile __sfr P0DIR
   \                     P0DIR:
   \   000000                DS 1

   \                                 In segment SFR_AN, at 0xbc
   \   unsigned char volatile __sfr P2DIR
   \                     P2DIR:
   \   000000                DS 1
     11          
     12          #if (DISP_TYPE==DISP_LED_5C7S)
     13          

   \                                 In segment DATA_N, align 1, root
     14          IAR_DATA_A u8 dispbuf[3];
   \                     dispbuf:
   \   000000                DS 3
     15          
     16          #pragma constseg="LED_DISP_TBL"

   \                                 In segment LED_DISP_TBL, align 1
     17          IAR_CONST u8 tbl_led_num[10] =
   \                     tbl_led_num:
   \   000000   7B221F37     DB 123, 34, 31, 55, 102, 117, 125, 35, 127, 119
   \            66757D23
   \            7F77    
     18          {
     19          	LED_5C7S_0, LED_5C7S_1, LED_5C7S_2, LED_5C7S_3, LED_5C7S_4,
     20          	LED_5C7S_5, LED_5C7S_6, LED_5C7S_7, LED_5C7S_8, LED_5C7S_9,
     21          };
     22          

   \                                 In segment LED_DISP_TBL, align 1
     23          IAR_CONST u8 tbl_led_alpha[26] =
   \                     tbl_led_alpha:
   \   000000   6F7C593E     DB 111, 124, 89, 62, 93, 77, 119, 110, 34, 58, 76, 88, 44, 107, 123, 79
   \            5D4D776E
   \            223A4C58
   \            2C6B7B4F
   \   000010   670C755C     DB 103, 12, 117, 92, 122, 122, 56, 106, 118, 31
   \            7A7A386A
   \            761F    
     24          {
     25          	LED_5C7S_A, LED_5C7S_b, LED_5C7S_C, LED_5C7S_d, LED_5C7S_E,
     26          	LED_5C7S_F, LED_5C7S_g, LED_5C7S_H, LED_5C7S_I, LED_5C7S_J,
     27          	LED_5C7S_K, LED_5C7S_L, LED_5C7S_m, LED_5C7S_n, LED_5C7S_O,
     28          	LED_5C7S_P, LED_5C7S_q, LED_5C7S_r, LED_5C7S_S, LED_5C7S_t,
     29          	LED_5C7S_U, LED_5C7S_V, LED_5C7S_w, LED_5C7S_X, LED_5C7S_y,
     30          	LED_5C7S_Z
     31          };
     32          

   \                                 In segment LED_DISP_TBL, align 1
     33          IAR_CONST u8 tbl_led_energy[3] =
   \                     tbl_led_energy:
   \   000000   48597B       DB 72, 89, 123
     34          {
     35          	(BIT_E | BIT_F), LED_5C7S_C, LED_5C7S_0,
     36          };
     37          #pragma constseg=default
     38          
     39          
     40          #pragma location="LED_DISP_SEG"
     41          //ÏÔÊ¾ -, 0~9, a~zµÄ×Ö·û´®(³£Á¿)

   \                                 In segment LED_DISP_SEG, align 1, keep-with-next
     42          void led_5c7s_disp_str(const char __code *str)
   \                     led_5c7s_disp_str:
     43          {
   \   000000   7404         MOV     A,#0x4
   \   000002   12....       LCALL   ?FUNC_ENTER_SP
   \   000005                ; Saved register size: 7
   \   000005                ; Auto size: 0
     44          	u8 i;
     45          	u8 ch;
     46          
     47          	for(i=0; i!=3; i++)
     48          	{
     49          		ch = str[i];
   \                     ??led_5c7s_disp_str_0:
   \   000005   8E..         MOV     ?V0 + 0,R6
   \   000007   EA           MOV     A,R2
   \   000008   25..         ADD     A,?V0 + 0
   \   00000A   F582         MOV     DPL,A
   \   00000C   EB           MOV     A,R3
   \   00000D   3400         ADDC    A,#0x0
   \   00000F   F583         MOV     DPH,A
   \   000011   E4           CLR     A
   \   000012   93           MOVC    A,@A+DPTR
   \   000013   F5..         MOV     ?V0 + 0,A
     50          		if(ch >= '0' && ch <= '9')
   \   000015   74..         MOV     A,#dispbuf
   \   000017   2E           ADD     A,R6
   \   000018   F8           MOV     R0,A
   \   000019   E5..         MOV     A,?V0 + 0
   \   00001B   C3           CLR     C
   \   00001C   9430         SUBB    A,#0x30
   \   00001E   4017         JC      ??led_5c7s_disp_str_1
   \   000020   E5..         MOV     A,?V0 + 0
   \   000022   C3           CLR     C
   \   000023   943A         SUBB    A,#0x3a
   \   000025   5010         JNC     ??led_5c7s_disp_str_1
     51          		{
     52          			dispbuf[i] = tbl_led_num[ch - '0'];
   \   000027   E5..         MOV     A,?V0 + 0
   \   000029   24..         ADD     A,#((tbl_led_num + 208) & 0xff)
   \   00002B   F582         MOV     DPL,A
   \   00002D   E4           CLR     A
   \   00002E   34..         ADDC    A,#(((tbl_led_num - 48) >> 8) & 0xff)
   \                     ??led_5c7s_disp_str_2:
   \   000030   F583         MOV     DPH,A
   \   000032   E4           CLR     A
   \   000033   93           MOVC    A,@A+DPTR
   \   000034   F6           MOV     @R0,A
   \   000035   8043         SJMP    ??led_5c7s_disp_str_3
     53          		}
   \                     ??led_5c7s_disp_str_1:
   \   000037   85....       MOV     ?V0 + 2,?V0 + 0
   \   00003A   E5..         MOV     A,?V0 + 2
   \   00003C   24..         ADD     A,#(tbl_led_alpha & 0xff)
   \   00003E   FC           MOV     R4,A
   \   00003F   E4           CLR     A
   \   000040   34..         ADDC    A,#((tbl_led_alpha >> 8) & 0xff)
   \   000042   FD           MOV     R5,A
   \   000043   E5..         MOV     A,?V0 + 0
   \   000045   C3           CLR     C
   \   000046   9441         SUBB    A,#0x41
   \   000048   4011         JC      ??led_5c7s_disp_str_4
   \   00004A   E5..         MOV     A,?V0 + 0
   \   00004C   C3           CLR     C
   \   00004D   945B         SUBB    A,#0x5b
   \   00004F   500A         JNC     ??led_5c7s_disp_str_4
     54          		else if(ch >= 'A' && ch <= 'Z')
     55          		{
     56          			dispbuf[i] = tbl_led_alpha[ch - 'A'];
   \   000051   EC           MOV     A,R4
   \   000052   24BF         ADD     A,#-0x41
   \                     ??led_5c7s_disp_str_5:
   \   000054   F582         MOV     DPL,A
   \   000056   ED           MOV     A,R5
   \   000057   34FF         ADDC    A,#-0x1
   \   000059   80D5         SJMP    ??led_5c7s_disp_str_2
     57          		}
     58          		else if(ch >= 'a' && ch <= 'z')
   \                     ??led_5c7s_disp_str_4:
   \   00005B   E5..         MOV     A,?V0 + 0
   \   00005D   C3           CLR     C
   \   00005E   9461         SUBB    A,#0x61
   \   000060   400C         JC      ??led_5c7s_disp_str_6
   \   000062   E5..         MOV     A,?V0 + 0
   \   000064   C3           CLR     C
   \   000065   947B         SUBB    A,#0x7b
   \   000067   500F         JNC     ??led_5c7s_disp_str_7
     59          		{
     60          			dispbuf[i] = tbl_led_alpha[ch - 'a'];
   \   000069   EC           MOV     A,R4
   \   00006A   249F         ADD     A,#-0x61
   \   00006C   80E6         SJMP    ??led_5c7s_disp_str_5
     61          		}
     62          		else if(ch == ' ')
   \                     ??led_5c7s_disp_str_6:
   \   00006E   7420         MOV     A,#0x20
   \   000070   65..         XRL     A,?V0 + 0
   \   000072   7004         JNZ     ??led_5c7s_disp_str_7
     63          		{
     64          			dispbuf[i] = 0;
   \   000074   7600         MOV     @R0,#0x0
   \   000076   8002         SJMP    ??led_5c7s_disp_str_3
     65          		}
     66          		else
     67          		{
     68          			dispbuf[i] = LED_5C7S__;
   \                     ??led_5c7s_disp_str_7:
   \   000078   7604         MOV     @R0,#0x4
     69          		}
     70          	}
   \                     ??led_5c7s_disp_str_3:
   \   00007A   0E           INC     R6
   \   00007B   7403         MOV     A,#0x3
   \   00007D   6E           XRL     A,R6
   \   00007E   7085         JNZ     ??led_5c7s_disp_str_0
     71          //    dispbuf[4] = 0;
     72          }
   \   000080   7F04         MOV     R7,#0x4
   \   000082   02....       LJMP    ?FUNC_LEAVE_SP
     73          
     74          
     75          /*----------------------------------------------------------------------------*/
     76          /**@brief LED³õÊ¼»¯º¯Êý£¬²»ÏÔÊ¾
     77             @param ÎÞ
     78             @return ÎÞ
     79             @note
     80          */
     81          /*----------------------------------------------------------------------------*/
     82          void led_5c7s_init(void) AT(LED_5C7S_INIT);

   \                                 In segment LED_5C7S_INIT, align 1, keep-with-next
     83          void led_5c7s_init(void)
   \                     led_5c7s_init:
     84          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     85          	LED_5C7S_PORT_INIT();
   \   000000   53BA1F       ANL     0xba,#0x1f
   \   000003   E5BA         MOV     A,0xba
   \   000005   43BC7F       ORL     0xbc,#0x7f
   \   000008   E5BC         MOV     A,0xbc
   \   00000A   90301B       MOV     DPTR,#0x301b
   \   00000D   E0           MOVX    A,@DPTR
   \   00000E   447F         ORL     A,#0x7f
   \   000010   F0           MOVX    @DPTR,A
   \   000011   903017       MOV     DPTR,#0x3017
   \   000014   E0           MOVX    A,@DPTR
   \   000015   447F         ORL     A,#0x7f
   \   000017   F0           MOVX    @DPTR,A
     86          	ALL_LED_5C7S_OFF();
   \   000018   53801F       ANL     0x80,#0x1f
   \   00001B   E580         MOV     A,0x80
   \   00001D   43A07F       ORL     0xa0,#0x7f
   \   000020   E5A0         MOV     A,0xa0
   \   000022   53BC80       ANL     0xbc,#0x80
   \   000025   E5BC         MOV     A,0xbc
     87          }
   \   000027   22           RET
     88          
     89          /*----------------------------------------------------------------------------*/
     90          /**@brief 5com7seg LED Çå³ýÏÔÊ¾»º´æ
     91             @param ÎÞ
     92             @return ÎÞ
     93             @note
     94          */
     95          /*----------------------------------------------------------------------------*/
     96          void led_5c7s_clear(void) AT(LED_5C7S_INIT);

   \                                 In segment LED_5C7S_INIT, align 1, keep-with-next
     97          void led_5c7s_clear(void)
   \                     led_5c7s_clear:
     98          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
     99          	smemset_i(dispbuf, 0, 3);
   \   000000                ; Setup parameters for call to function smemset_i
   \   000000   7B03         MOV     R3,#0x3
   \   000002   7A00         MOV     R2,#0x0
   \   000004   79..         MOV     R1,#dispbuf
   \   000006   12....       LCALL   smemset_i
    100          }
   \   000009   22           RET
    101          
    102          //5c7sÉÁË¸¿ØÖÆ
    103          void led_5c7s_blink(void) AT(LED_5C7S_SEG);

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
    104          void led_5c7s_blink(void)
   \                     led_5c7s_blink:
    105          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    106          #if 0
    107          	if(ocx.blink_sta)
    108          	{
    109          		dispbuf[4] |= ocx.blink_icon;
    110          		if(ocx.blink_num & 0x0c)
    111          		{
    112          			CHAR_HOURH = ocx.blink_numh;
    113          			CHAR_HOURL = ocx.blink_numl;
    114          		}
    115          		else if(ocx.blink_num & 0x03)
    116          		{
    117          			CHAR_MINH = ocx.blink_numh;
    118          			CHAR_MINL = ocx.blink_numl;
    119          		}
    120          	}
    121          	else
    122          	{
    123          		dispbuf[4] &= ~ocx.blink_icon;
    124          		if(ocx.blink_num & 0x0c)
    125          		{
    126          			CHAR_HOURH = 0;
    127          			CHAR_HOURL = 0;
    128          		}
    129          		else if(ocx.blink_num & 0x03)
    130          		{
    131          			CHAR_MINH = 0;
    132          			CHAR_MINL = 0;
    133          		}
    134          	}
    135          #endif
    136          }
   \   000000   22           RET
    137          
    138          /*----------------------------------------------------------------------------*/
    139          /**@brief LEDÉ¨Ãèº¯Êý£¬Öð¸öµãÁÁLED
    140             @param ÎÞ
    141             @return ÎÞ
    142             @note
    143          */
    144          /*----------------------------------------------------------------------------*/
    145          void led_5c7s_scan(void) AT(LED_5C7S_SEG);

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
    146          void led_5c7s_scan(void)
   \                     led_5c7s_scan:
    147          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    148          	static u8 scan_cnt;
    149          
    150          	ALL_LED_5C7S_OFF();
   \   000000   53801F       ANL     0x80,#0x1f
   \   000003   E580         MOV     A,0x80
   \   000005   43A07F       ORL     0xa0,#0x7f
   \   000008   E5A0         MOV     A,0xa0
   \   00000A   53BC80       ANL     0xbc,#0x80
   \   00000D   E5BC         MOV     A,0xbc
    151          
    152          	//led_5c7s_blink();
    153          
    154          	scan_cnt++;
   \   00000F   90....       MOV     DPTR,#??scan_cnt
   \   000012   E0           MOVX    A,@DPTR
   \   000013   04           INC     A
   \   000014   F0           MOVX    @DPTR,A
    155          	if(scan_cnt > 2)
   \   000015   C3           CLR     C
   \   000016   9403         SUBB    A,#0x3
   \   000018   4002         JC      ??led_5c7s_scan_0
    156          		scan_cnt = 0;
   \   00001A   E4           CLR     A
   \   00001B   F0           MOVX    @DPTR,A
    157          
    158          //	for(u8 i = 0;i < 3;i++)
    159          //		dispbuf[i] = 0xff;
    160          
    161          #if LED_5C7S_EXT_RES_EN
    162          	//Ê¹ÓÃÍâ²¿ÏÞÁ÷µç×è,¶ÔÒªµãÁÁµÄ¶ÎÉèÎªÊä³ö0
    163          	LED_5C7S_S_PORT &= ~dispbuf[scan_cnt];
    164          #else
    165          	//Ê¹ÓÃÄÚ²¿ÏÞÁ÷µç×è,¶ÔÒªµãÁÁµÄ¶ÎÉèÎªÊäÈëÏÂÀ­
    166          	LED_5C7S_S_DIR |= dispbuf[scan_cnt];
   \                     ??led_5c7s_scan_0:
   \   00001C   E0           MOVX    A,@DPTR
   \   00001D   24..         ADD     A,#dispbuf
   \   00001F   F8           MOV     R0,A
   \   000020   E6           MOV     A,@R0
   \   000021   45BC         ORL     A,0xbc
   \   000023   F5BC         MOV     0xbc,A
    167          	//LED_5C7S_S_DN |= dispbuf[scan_cnt];
    168          #endif
    169          
    170          	switch(scan_cnt)
   \   000025   E0           MOVX    A,@DPTR
   \   000026   12....       LCALL   ?UC_SWITCH_DENSE
   \                     `?<Jumptable for led_5c7s_scan>_0`:
   \   000029   00           DB        0
   \   00002A   02           DB        2
   \   00002B   ....         DW        ??led_5c7s_scan_1
   \   00002D   ....         DW        ??led_5c7s_scan_2
   \   00002F   ....         DW        ??led_5c7s_scan_3
   \   000031   ....         DW        ??led_5c7s_scan_4
    171          	{
    172          	case 0:
    173          		LED_5C7S_C0_PORT |= LED_5C7S_C0_BIT;
   \                     ??led_5c7s_scan_2:
   \   000033   D285         SETB    0x80.5
   \   000035   22           RET
    174          		break;
    175          	case 1:
    176          		LED_5C7S_C1_PORT |= LED_5C7S_C1_BIT;
   \                     ??led_5c7s_scan_3:
   \   000036   D287         SETB    0x80.7
   \   000038   22           RET
    177          		break;
    178          	case 2:
    179          		LED_5C7S_C2_PORT |= LED_5C7S_C2_BIT;
   \                     ??led_5c7s_scan_4:
   \   000039   D286         SETB    0x80.6
    180          		break;
    181          	default:
    182          		break;
    183          	}
    184          }
   \                     ??led_5c7s_scan_1:
   \   00003B   22           RET

   \                                 In segment XDATA_Z, align 1, keep-with-next
   \   000000                REQUIRE __INIT_XDATA_Z
   \                     ??scan_cnt:
   \   000000                DS 1
    185          
    186          
    187          //ÏÔÊ¾Êý×Ö
    188          void led_5c7s_dispnum(u16 num) AT(LED_5C7S_SEG);

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
    189          void led_5c7s_dispnum(u16 num)
   \                     led_5c7s_dispnum:
    190          {
   \   000000   EE           MOV     A,R6
   \   000001   C0E0         PUSH    A
   \   000003   C0..         PUSH    ?V0 + 0
   \   000005   C0..         PUSH    ?V0 + 1
   \   000007                ; Saved register size: 3
   \   000007                ; Auto size: 0
   \   000007   EA           MOV     A,R2
   \   000008   FC           MOV     R4,A
   \   000009   EB           MOV     A,R3
   \   00000A   FD           MOV     R5,A
    191          	u8 i;
    192          	for(i=2; i!=0xff; i--)
   \   00000B   7E02         MOV     R6,#0x2
    193          	{
    194          		dispbuf[i] = tbl_led_num[num % 10];
   \                     ??led_5c7s_dispnum_0:
   \   00000D   EC           MOV     A,R4
   \   00000E   F8           MOV     R0,A
   \   00000F   ED           MOV     A,R5
   \   000010   F9           MOV     R1,A
   \   000011   7A0A         MOV     R2,#0xa
   \   000013   7B00         MOV     R3,#0x0
   \   000015   12....       LCALL   ?US_DIV_MOD
   \   000018   EA           MOV     A,R2
   \   000019   24..         ADD     A,#(tbl_led_num & 0xff)
   \   00001B   F582         MOV     DPL,A
   \   00001D   EB           MOV     A,R3
   \   00001E   34..         ADDC    A,#((tbl_led_num >> 8) & 0xff)
   \   000020   F583         MOV     DPH,A
   \   000022   E4           CLR     A
   \   000023   93           MOVC    A,@A+DPTR
   \   000024   C0E0         PUSH    A
   \   000026   74..         MOV     A,#dispbuf
   \   000028   2E           ADD     A,R6
   \   000029   F8           MOV     R0,A
   \   00002A   D0E0         POP     A
   \   00002C   F6           MOV     @R0,A
    195          		num /= 10;
   \   00002D   EC           MOV     A,R4
   \   00002E   F8           MOV     R0,A
   \   00002F   ED           MOV     A,R5
   \   000030   F9           MOV     R1,A
   \   000031   7A0A         MOV     R2,#0xa
   \   000033   7B00         MOV     R3,#0x0
   \   000035   12....       LCALL   ?US_DIV_MOD
   \   000038   88..         MOV     ?V0 + 0,R0
   \   00003A   89..         MOV     ?V0 + 1,R1
   \   00003C   AC..         MOV     R4,?V0 + 0
   \   00003E   AD..         MOV     R5,?V0 + 1
    196          	}
   \   000040   1E           DEC     R6
   \   000041   74FF         MOV     A,#-0x1
   \   000043   6E           XRL     A,R6
   \   000044   70C7         JNZ     ??led_5c7s_dispnum_0
    197          }
   \   000046   D0..         POP     ?V0 + 1
   \   000048   D0..         POP     ?V0 + 0
   \   00004A   D0E0         POP     A
   \   00004C   FE           MOV     R6,A
   \   00004D   22           RET
    198          
    199          //ÏÔÊ¾ÒôÁ¿
    200          void led_5c7s_disp_vol(void) AT(LED_5C7S_SEG);

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
    201          void led_5c7s_disp_vol(void)
   \                     led_5c7s_disp_vol:
    202          {
   \   000000   C0..         PUSH    ?V0 + 0
   \   000002                ; Saved register size: 1
   \   000002                ; Auto size: 0
    203          	disp_numsel(sys_ctl.volume);
   \   000002                ; Setup parameters for call to function led_5c7s_dispnum
   \   000002   90....       MOV     DPTR,#(sys_ctl + 2)
   \   000005   E0           MOVX    A,@DPTR
   \   000006   FA           MOV     R2,A
   \   000007   7B00         MOV     R3,#0x0
   \   000009   12....       LCALL   led_5c7s_dispnum
    204          	dispbuf[0] = 0;
   \   00000C   75..00       MOV     dispbuf,#0x0
    205          	dispbuf[1] = LED_5C7S_V;
   \   00000F   75..7A       MOV     (dispbuf + 1),#0x7a
    206          }
   \   000012   D0..         POP     ?V0 + 0
   \   000014   22           RET
    207          
    208          //ÏÔÊ¾Ê±¼ä
    209          void led_5c7s_disp_time(void) AT(LED_5C7S_SEG);

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
    210          void led_5c7s_disp_time(void)
   \                     led_5c7s_disp_time:
    211          {
   \   000000   C0..         PUSH    ?VB
   \   000002                ; Saved register size: 1
   \   000002                ; Auto size: 0
    212          	bool ie_ea = IE_EA;
   \   000002   A2AF         MOV     C,0xa8.7
   \   000004   5004         JNC     ??led_5c7s_disp_time_0
   \   000006   D2..         SETB    ?VB.0
   \   000008   8002         SJMP    ??led_5c7s_disp_time_1
   \                     ??led_5c7s_disp_time_0:
   \   00000A   C2..         CLR     ?VB.0
    213          	IE_EA = 0;
   \                     ??led_5c7s_disp_time_1:
   \   00000C   C2AF         CLR     0xa8.7
    214          
    215          	dispbuf[0] = tbl_led_num[ocx.timeh / 10];
   \   00000E   75F00A       MOV     B,#0xa
   \   000011   78..         MOV     R0,#(ocx + 11)
   \   000013   12....       LCALL   ?Subroutine0
   \                     ??CrossCallReturnLabel_0:
   \   000016   F5..         MOV     dispbuf,A
    216          	dispbuf[1] = tbl_led_num[ocx.timeh % 10];
   \   000018   E6           MOV     A,@R0
   \   000019   75F00A       MOV     B,#0xa
   \   00001C   84           DIV     AB
   \   00001D   E5F0         MOV     A,B
   \   00001F   12....       LCALL   ??Subroutine0_0
   \                     ??CrossCallReturnLabel_1:
   \   000022   F5..         MOV     (dispbuf + 1),A
    217          	dispbuf[2] = tbl_led_num[ocx.timel / 10];
   \   000024   75F00A       MOV     B,#0xa
   \   000027   08           INC     R0
   \   000028   12....       LCALL   ?Subroutine0
   \                     ??CrossCallReturnLabel_2:
   \   00002B   F5..         MOV     (dispbuf + 2),A
    218          #if 0
    219          
    220          	if(ocx.blink_num & 0x0c)
    221          	{
    222          		ocx.blink_numh = CHAR_HOURH;
    223          		ocx.blink_numl = CHAR_HOURL;
    224          	}
    225          	else if(ocx.blink_num & 0x03)
    226          	{
    227          		ocx.blink_numh = CHAR_MINH;
    228          		ocx.blink_numl = CHAR_MINL;
    229          	}
    230          #endif
    231          	IE_EA = ie_ea;
   \   00002D   A2..         MOV     C,?VB.0
   \   00002F   92AF         MOV     0xa8.7,C
    232          }
   \   000031   D0..         POP     ?VB
   \   000033   22           RET

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   E6           MOV     A,@R0
   \   000001   84           DIV     AB
   \                     ??Subroutine0_0:
   \   000002   24..         ADD     A,#(tbl_led_num & 0xff)
   \   000004   F582         MOV     DPL,A
   \   000006   E4           CLR     A
   \   000007   34..         ADDC    A,#((tbl_led_num >> 8) & 0xff)
   \   000009   F583         MOV     DPH,A
   \   00000B   E4           CLR     A
   \   00000C   93           MOVC    A,@A+DPTR
   \   00000D   22           RET
    233          
    234          //ÏÔÊ¾µ±Ç°Éè±¸
    235          void led_5c7s_disp_device(void) AT(LED_5C7S_SEG);

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
    236          void led_5c7s_disp_device(void)
   \                     led_5c7s_disp_device:
    237          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    238          #if 0
    239          	if((fs_cur_dev() == DEVICE_SDMMC)
    240          #if SD_DOUBLE_EN
    241          	        ||(fs_cur_dev() == DEVICE_SDMMC1)
    242          #endif
    243          	  )
    244          	{
    245          		dispbuf[4] |= LED_5C7S_SD;
    246          	}
    247          	else if((fs_cur_dev() == DEVICE_UDISK)
    248          #if UDISK_DOUBLE_EN
    249          	        ||(fs_cur_dev() == DEVICE_UDISK1)
    250          #endif
    251          	       )
    252          	{
    253          		dispbuf[4] |= LED_5C7S_USB;
    254          	}
    255          #endif
    256          }
   \   000000   22           RET
    257          
    258          //ÏÔÊ¾²¥·Å½çÃæ
    259          void led_5c7s_disp_play_pause(void) AT(LED_5C7S_SEG);

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
    260          void led_5c7s_disp_play_pause(void)
   \                     led_5c7s_disp_play_pause:
    261          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    262          	//disp_time();
    263          	//dispbuf[4] = LED_5C7S_DDOT | LED_5C7S_MP3 | (b_msc.pause ? LED_5C7S_PAUSE : LED_5C7S_PLAY);
    264          	// disp_device();
    265          }
   \   000000   22           RET
    266          
    267          //ÏÔÊ¾²¥·Å½çÃæ
    268          void led_5c7s_disp_numsel_icon(void) AT(LED_5C7S_SEG);

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
    269          void led_5c7s_disp_numsel_icon(void)
   \                     led_5c7s_disp_numsel_icon:
    270          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    271          	// dispbuf[4] = LED_5C7S_MP3;
    272          	//  disp_device();
    273          }
   \   000000   22           RET
    274          
    275          //ÏÔÊ¾FMÆµµÀ
    276          void led_5c7s_disp_ch(u8 ch) AT(LED_5C7S_SEG);

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
    277          void led_5c7s_disp_ch(u8 ch)
   \                     led_5c7s_disp_ch:
    278          {
   \   000000   C0..         PUSH    ?V0 + 0
   \   000002                ; Saved register size: 1
   \   000002                ; Auto size: 0
    279          	disp_numsel(ch);
   \   000002                ; Setup parameters for call to function led_5c7s_dispnum
   \   000002   E9           MOV     A,R1
   \   000003   FA           MOV     R2,A
   \   000004   7B00         MOV     R3,#0x0
   \   000006   12....       LCALL   led_5c7s_dispnum
    280          	dispbuf[0] = LED_5C7S_C;
   \   000009   75..59       MOV     dispbuf,#0x59
    281          	dispbuf[1] = LED_5C7S_H;
   \   00000C   75..6E       MOV     (dispbuf + 1),#0x6e
    282          }
   \   00000F   D0..         POP     ?V0 + 0
   \   000011   22           RET
    283          
    284          //ÏÔÊ¾FMÆµµã
    285          void led_5c7s_disp_freq(void) AT(LED_5C7S_SEG);

   \                                 In segment LED_5C7S_SEG, align 1, keep-with-next
    286          void led_5c7s_disp_freq(void)
   \                     led_5c7s_disp_freq:
    287          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    288          	disp_numsel(ocx.freq);
   \   000000                ; Setup parameters for call to function led_5c7s_dispnum
   \   000000   78..         MOV     R0,#(ocx + 15)
   \   000002   E6           MOV     A,@R0
   \   000003   FA           MOV     R2,A
   \   000004   08           INC     R0
   \   000005   E6           MOV     A,@R0
   \   000006   FB           MOV     R3,A
   \   000007   12....       LCALL   led_5c7s_dispnum
    289          	if(dispbuf[0] == LED_5C7S_0)
   \   00000A   747B         MOV     A,#0x7b
   \   00000C   65..         XRL     A,dispbuf
   \   00000E   7003         JNZ     ??led_5c7s_disp_freq_0
    290          	{
    291          		dispbuf[0] = 0;
   \   000010   75..00       MOV     dispbuf,#0x0
    292          	}
    293          	// dispbuf[4] = LED_5C7S_MHZ;
    294          }
   \                     ??led_5c7s_disp_freq_0:
   \   000013   22           RET

   \                                 In segment SFR_AN, at 0xa8
   \   union <unnamed> volatile __sfr _A_IE0
   \                     _A_IE0:
   \   000000                DS 1
    295          
    296          //ÄÜÁ¿ÏÔÊ¾
    297          #if ENERGY_DISP_EN
    298          void led_5c7s_disp_energy(void) AT(LED_5C7S_SEG);
    299          void led_5c7s_disp_energy(void)
    300          {
    301          	u8 num1, num2, i;
    302          
    303          	num1 = ocx.energy_cnt / 3;
    304          	num2 = ocx.energy_cnt % 3;
    305          	//printf("num1=%dx num2=%d\n", num1, num2);
    306          	for(i=0; i!=3; i++)
    307          	{
    308          		if(i < num1)
    309          		{
    310          			dispbuf[i] = tbl_led_energy[2];
    311          		}
    312          		else if(i == num1)
    313          		{
    314          			dispbuf[i] = tbl_led_energy[num2];
    315          		}
    316          		else
    317          		{
    318          			dispbuf[i] = 0;
    319          		}
    320          	}
    321          }
    322          #endif
    323          #endif /* (DISP_TYPE==DISP_LED_5C7S) */
    324          
    325          

   Maximum stack usage in bytes:

     Function                  EXT_STACK PSTACK XSTACK
     --------                  --------- ------ ------
     led_5c7s_blink                   0      0      0
     led_5c7s_clear                   0      0      0
       -> smemset_i                   0      0      0
     led_5c7s_disp_ch                 1      0      0
       -> led_5c7s_dispnum            2      0      0
     led_5c7s_disp_device             0      0      0
     led_5c7s_disp_freq               0      0      0
       -> led_5c7s_dispnum            0      0      0
     led_5c7s_disp_numsel_icon        0      0      0
     led_5c7s_disp_play_pause         0      0      0
     led_5c7s_disp_str                8      0      0
     led_5c7s_disp_time               1      0      0
     led_5c7s_disp_vol                1      0      0
       -> led_5c7s_dispnum            2      0      0
     led_5c7s_dispnum                 5      0      0
     led_5c7s_init                    0      0      0
     led_5c7s_scan                    0      0      0


   Segment part sizes:

     Function/Label            Bytes
     --------------            -----
     P0                           1
     P2                           1
     P0DIR                        1
     P2DIR                        1
     dispbuf                      3
     tbl_led_num                 10
     tbl_led_alpha               26
     tbl_led_energy               3
     led_5c7s_disp_str          133
     led_5c7s_init               40
     led_5c7s_clear              10
     led_5c7s_blink               1
     led_5c7s_scan               60
     scan_cnt                     1
     led_5c7s_dispnum            78
     led_5c7s_disp_vol           21
     led_5c7s_disp_time          52
     ?Subroutine0                14
     led_5c7s_disp_device         1
     led_5c7s_disp_play_pause     1
     led_5c7s_disp_numsel_icon    1
     led_5c7s_disp_ch            18
     led_5c7s_disp_freq          20
     _A_IE0                       1

 
   3 bytes in segment DATA_N
  50 bytes in segment LED_5C7S_INIT
 267 bytes in segment LED_5C7S_SEG
 133 bytes in segment LED_DISP_SEG
  39 bytes in segment LED_DISP_TBL
   5 bytes in segment SFR_AN
   1 byte  in segment XDATA_Z
 
 489 bytes of CODE  memory
   3 bytes of DATA  memory (+ 5 bytes shared)
   1 byte  of XDATA memory

Errors: none
Warnings: none
